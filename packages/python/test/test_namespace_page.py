# coding: utf-8

"""
    Catapult REST Endpoints

    OpenAPI Specification of catapult-rest

    The version of the OpenAPI document: 1.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.namespace_page import NamespacePage

class TestNamespacePage(unittest.TestCase):
    """NamespacePage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NamespacePage:
        """Test NamespacePage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NamespacePage`
        """
        model = NamespacePage()
        if include_optional:
            return NamespacePage(
                data = [
                    openapi_client.models.namespace_info_dto.NamespaceInfoDTO(
                        id = '', 
                        meta = openapi_client.models.namespace_meta_dto.NamespaceMetaDTO(
                            active = True, 
                            index = 56, ), 
                        namespace = openapi_client.models.namespace_dto.NamespaceDTO(
                            version = 1, 
                            registration_type = 0, 
                            depth = 1, 
                            level0 = '85BBEA6CC462B244', 
                            level1 = '85BBEA6CC462B244', 
                            level2 = '85BBEA6CC462B244', 
                            alias = openapi_client.models.alias_dto.AliasDTO(
                                type = 0, 
                                mosaic_id = '0DC67FBE1CAD29E3', 
                                address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY', ), 
                            parent_id = '85BBEA6CC462B244', 
                            owner_address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY', 
                            start_height = '1', 
                            end_height = '1', ), )
                    ],
                pagination = openapi_client.models.pagination.Pagination(
                    page_number = 56, 
                    page_size = 56, )
            )
        else:
            return NamespacePage(
                data = [
                    openapi_client.models.namespace_info_dto.NamespaceInfoDTO(
                        id = '', 
                        meta = openapi_client.models.namespace_meta_dto.NamespaceMetaDTO(
                            active = True, 
                            index = 56, ), 
                        namespace = openapi_client.models.namespace_dto.NamespaceDTO(
                            version = 1, 
                            registration_type = 0, 
                            depth = 1, 
                            level0 = '85BBEA6CC462B244', 
                            level1 = '85BBEA6CC462B244', 
                            level2 = '85BBEA6CC462B244', 
                            alias = openapi_client.models.alias_dto.AliasDTO(
                                type = 0, 
                                mosaic_id = '0DC67FBE1CAD29E3', 
                                address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY', ), 
                            parent_id = '85BBEA6CC462B244', 
                            owner_address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY', 
                            start_height = '1', 
                            end_height = '1', ), )
                    ],
                pagination = openapi_client.models.pagination.Pagination(
                    page_number = 56, 
                    page_size = 56, ),
        )
        """

    def testNamespacePage(self):
        """Test NamespacePage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
