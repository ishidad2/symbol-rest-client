# coding: utf-8

"""
    Catapult REST Endpoints

    OpenAPI Specification of catapult-rest

    The version of the OpenAPI document: 1.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.merkle_tree_branch_dto import MerkleTreeBranchDTO

class TestMerkleTreeBranchDTO(unittest.TestCase):
    """MerkleTreeBranchDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MerkleTreeBranchDTO:
        """Test MerkleTreeBranchDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MerkleTreeBranchDTO`
        """
        model = MerkleTreeBranchDTO()
        if include_optional:
            return MerkleTreeBranchDTO(
                type = 0,
                path = '',
                encoded_path = '',
                nibble_count = 56,
                link_mask = '',
                links = [
                    openapi_client.models.merkle_tree_branch_link_dto.MerkleTreeBranchLinkDTO(
                        bit = '', 
                        link = 'C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810', )
                    ],
                branch_hash = 'C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810'
            )
        else:
            return MerkleTreeBranchDTO(
                type = 0,
                path = '',
                encoded_path = '',
                nibble_count = 56,
                link_mask = '',
                links = [
                    openapi_client.models.merkle_tree_branch_link_dto.MerkleTreeBranchLinkDTO(
                        bit = '', 
                        link = 'C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810', )
                    ],
                branch_hash = 'C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810',
        )
        """

    def testMerkleTreeBranchDTO(self):
        """Test MerkleTreeBranchDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
