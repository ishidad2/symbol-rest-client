# coding: utf-8

"""
    Catapult REST Endpoints

    OpenAPI Specification of catapult-rest

    The version of the OpenAPI document: 1.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.account_info_dto import AccountInfoDTO

class TestAccountInfoDTO(unittest.TestCase):
    """AccountInfoDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountInfoDTO:
        """Test AccountInfoDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountInfoDTO`
        """
        model = AccountInfoDTO()
        if include_optional:
            return AccountInfoDTO(
                id = '',
                account = openapi_client.models.account_dto.AccountDTO(
                    version = 1, 
                    address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY', 
                    address_height = '1', 
                    public_key = 'AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26', 
                    public_key_height = '1', 
                    account_type = 0, 
                    supplemental_public_keys = openapi_client.models.supplemental_public_keys_dto.SupplementalPublicKeysDTO(
                        linked = openapi_client.models.account_link_public_key_dto.AccountLinkPublicKeyDTO(
                            public_key = '', ), 
                        node = openapi_client.models.account_link_public_key_dto.AccountLinkPublicKeyDTO(
                            public_key = '', ), 
                        vrf = , 
                        voting = openapi_client.models.account_link_voting_keys_dto.AccountLinkVotingKeysDTO(
                            public_keys = [
                                openapi_client.models.account_link_voting_key_dto.AccountLinkVotingKeyDTO(
                                    public_key = '', 
                                    start_epoch = 123456, 
                                    end_epoch = 123456, )
                                ], ), ), 
                    activity_buckets = [
                        openapi_client.models.activity_bucket_dto.ActivityBucketDTO(
                            start_height = '1', 
                            total_fees_paid = '123456', 
                            beneficiary_count = 2222212828, 
                            raw_score = '0', )
                        ], 
                    mosaics = [
                        openapi_client.models.mosaic.Mosaic(
                            id = '0DC67FBE1CAD29E3', 
                            amount = '123456', )
                        ], 
                    importance = '0', 
                    importance_height = '1', )
            )
        else:
            return AccountInfoDTO(
                id = '',
                account = openapi_client.models.account_dto.AccountDTO(
                    version = 1, 
                    address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY', 
                    address_height = '1', 
                    public_key = 'AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26', 
                    public_key_height = '1', 
                    account_type = 0, 
                    supplemental_public_keys = openapi_client.models.supplemental_public_keys_dto.SupplementalPublicKeysDTO(
                        linked = openapi_client.models.account_link_public_key_dto.AccountLinkPublicKeyDTO(
                            public_key = '', ), 
                        node = openapi_client.models.account_link_public_key_dto.AccountLinkPublicKeyDTO(
                            public_key = '', ), 
                        vrf = , 
                        voting = openapi_client.models.account_link_voting_keys_dto.AccountLinkVotingKeysDTO(
                            public_keys = [
                                openapi_client.models.account_link_voting_key_dto.AccountLinkVotingKeyDTO(
                                    public_key = '', 
                                    start_epoch = 123456, 
                                    end_epoch = 123456, )
                                ], ), ), 
                    activity_buckets = [
                        openapi_client.models.activity_bucket_dto.ActivityBucketDTO(
                            start_height = '1', 
                            total_fees_paid = '123456', 
                            beneficiary_count = 2222212828, 
                            raw_score = '0', )
                        ], 
                    mosaics = [
                        openapi_client.models.mosaic.Mosaic(
                            id = '0DC67FBE1CAD29E3', 
                            amount = '123456', )
                        ], 
                    importance = '0', 
                    importance_height = '1', ),
        )
        """

    def testAccountInfoDTO(self):
        """Test AccountInfoDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
