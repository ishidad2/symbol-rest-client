# coding: utf-8

"""
    Catapult REST Endpoints

    OpenAPI Specification of catapult-rest

    The version of the OpenAPI document: 1.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.namespace_network_properties_dto import NamespaceNetworkPropertiesDTO

class TestNamespaceNetworkPropertiesDTO(unittest.TestCase):
    """NamespaceNetworkPropertiesDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NamespaceNetworkPropertiesDTO:
        """Test NamespaceNetworkPropertiesDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NamespaceNetworkPropertiesDTO`
        """
        model = NamespaceNetworkPropertiesDTO()
        if include_optional:
            return NamespaceNetworkPropertiesDTO(
                max_name_size = '64',
                max_child_namespaces = '500',
                max_namespace_depth = '3',
                min_namespace_duration = '1m',
                max_namespace_duration = '365d',
                namespace_grace_period_duration = '2m',
                reserved_root_namespace_names = 'xem, nem, user, account, org, com, biz, net, edu, mil, gov, info',
                namespace_rental_fee_sink_address = 'TADP6C2GVEG654OP5LZI32P2GYJSCMEGQBYB7QY',
                root_namespace_rental_fee_per_block = '1',
                child_namespace_rental_fee = '100'
            )
        else:
            return NamespaceNetworkPropertiesDTO(
        )
        """

    def testNamespaceNetworkPropertiesDTO(self):
        """Test NamespaceNetworkPropertiesDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
