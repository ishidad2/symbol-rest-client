/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SymbolRestClient.Client;
using SymbolRestClient.Api;
// uncomment below to import models
//using SymbolRestClient.Model;

namespace SymbolRestClient.Test.Api
{
    /// <summary>
    ///  Class for testing NodeRoutesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NodeRoutesApiTests : IDisposable
    {
        private NodeRoutesApi instance;

        public NodeRoutesApiTests()
        {
            instance = new NodeRoutesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NodeRoutesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' NodeRoutesApi
            //Assert.IsType<NodeRoutesApi>(instance);
        }

        /// <summary>
        /// Test GetNodeHealth
        /// </summary>
        [Fact]
        public void GetNodeHealthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetNodeHealth();
            //Assert.IsType<NodeHealthInfoDTO>(response);
        }

        /// <summary>
        /// Test GetNodeInfo
        /// </summary>
        [Fact]
        public void GetNodeInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetNodeInfo();
            //Assert.IsType<NodeInfoDTO>(response);
        }

        /// <summary>
        /// Test GetNodePeers
        /// </summary>
        [Fact]
        public void GetNodePeersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetNodePeers();
            //Assert.IsType<List<NodeInfoDTO>>(response);
        }

        /// <summary>
        /// Test GetNodeStorage
        /// </summary>
        [Fact]
        public void GetNodeStorageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetNodeStorage();
            //Assert.IsType<StorageInfoDTO>(response);
        }

        /// <summary>
        /// Test GetNodeTime
        /// </summary>
        [Fact]
        public void GetNodeTimeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetNodeTime();
            //Assert.IsType<NodeTimeDTO>(response);
        }

        /// <summary>
        /// Test GetServerInfo
        /// </summary>
        [Fact]
        public void GetServerInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetServerInfo();
            //Assert.IsType<ServerInfoDTO>(response);
        }

        /// <summary>
        /// Test GetUnlockedAccount
        /// </summary>
        [Fact]
        public void GetUnlockedAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUnlockedAccount();
            //Assert.IsType<UnlockedAccountDTO>(response);
        }
    }
}
