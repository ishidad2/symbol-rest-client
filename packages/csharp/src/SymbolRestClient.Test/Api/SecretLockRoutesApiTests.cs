/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SymbolRestClient.Client;
using SymbolRestClient.Api;
// uncomment below to import models
//using SymbolRestClient.Model;

namespace SymbolRestClient.Test.Api
{
    /// <summary>
    ///  Class for testing SecretLockRoutesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SecretLockRoutesApiTests : IDisposable
    {
        private SecretLockRoutesApi instance;

        public SecretLockRoutesApiTests()
        {
            instance = new SecretLockRoutesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SecretLockRoutesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SecretLockRoutesApi
            //Assert.IsType<SecretLockRoutesApi>(instance);
        }

        /// <summary>
        /// Test GetSecretLock
        /// </summary>
        [Fact]
        public void GetSecretLockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string compositeHash = null;
            //var response = instance.GetSecretLock(compositeHash);
            //Assert.IsType<SecretLockInfoDTO>(response);
        }

        /// <summary>
        /// Test GetSecretLockMerkle
        /// </summary>
        [Fact]
        public void GetSecretLockMerkleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string compositeHash = null;
            //var response = instance.GetSecretLockMerkle(compositeHash);
            //Assert.IsType<MerkleStateInfoDTO>(response);
        }

        /// <summary>
        /// Test SearchSecretLock
        /// </summary>
        [Fact]
        public void SearchSecretLockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? address = null;
            //string? secret = null;
            //int? pageSize = null;
            //int? pageNumber = null;
            //string? offset = null;
            //Order? order = null;
            //var response = instance.SearchSecretLock(address, secret, pageSize, pageNumber, offset, order);
            //Assert.IsType<SecretLockPage>(response);
        }
    }
}
