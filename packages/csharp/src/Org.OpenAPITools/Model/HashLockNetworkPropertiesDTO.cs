/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// HashLockNetworkPropertiesDTO
    /// </summary>
    [DataContract(Name = "HashLockNetworkPropertiesDTO")]
    public partial class HashLockNetworkPropertiesDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HashLockNetworkPropertiesDTO" /> class.
        /// </summary>
        /// <param name="lockedFundsPerAggregate">Amount that has to be locked per aggregate in partial cache..</param>
        /// <param name="maxHashLockDuration">Maximum number of blocks for which a hash lock can exist..</param>
        public HashLockNetworkPropertiesDTO(string lockedFundsPerAggregate = default(string), string maxHashLockDuration = default(string))
        {
            this.LockedFundsPerAggregate = lockedFundsPerAggregate;
            this.MaxHashLockDuration = maxHashLockDuration;
        }

        /// <summary>
        /// Amount that has to be locked per aggregate in partial cache.
        /// </summary>
        /// <value>Amount that has to be locked per aggregate in partial cache.</value>
        /// <example>10&#39;000&#39;000</example>
        [DataMember(Name = "lockedFundsPerAggregate", EmitDefaultValue = false)]
        public string LockedFundsPerAggregate { get; set; }

        /// <summary>
        /// Maximum number of blocks for which a hash lock can exist.
        /// </summary>
        /// <value>Maximum number of blocks for which a hash lock can exist.</value>
        /// <example>2d</example>
        [DataMember(Name = "maxHashLockDuration", EmitDefaultValue = false)]
        public string MaxHashLockDuration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HashLockNetworkPropertiesDTO {\n");
            sb.Append("  LockedFundsPerAggregate: ").Append(LockedFundsPerAggregate).Append("\n");
            sb.Append("  MaxHashLockDuration: ").Append(MaxHashLockDuration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
