/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TransactionFeesDTO
    /// </summary>
    [DataContract(Name = "TransactionFeesDTO")]
    public partial class TransactionFeesDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionFeesDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TransactionFeesDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionFeesDTO" /> class.
        /// </summary>
        /// <param name="averageFeeMultiplier">Fee multiplier applied to transactions contained in block. (required).</param>
        /// <param name="medianFeeMultiplier">Fee multiplier applied to transactions contained in block. (required).</param>
        /// <param name="highestFeeMultiplier">Fee multiplier applied to transactions contained in block. (required).</param>
        /// <param name="lowestFeeMultiplier">Fee multiplier applied to transactions contained in block. (required).</param>
        /// <param name="minFeeMultiplier">Fee multiplier applied to transactions contained in block. (required).</param>
        public TransactionFeesDTO(long averageFeeMultiplier = default(long), long medianFeeMultiplier = default(long), long highestFeeMultiplier = default(long), long lowestFeeMultiplier = default(long), long minFeeMultiplier = default(long))
        {
            this.AverageFeeMultiplier = averageFeeMultiplier;
            this.MedianFeeMultiplier = medianFeeMultiplier;
            this.HighestFeeMultiplier = highestFeeMultiplier;
            this.LowestFeeMultiplier = lowestFeeMultiplier;
            this.MinFeeMultiplier = minFeeMultiplier;
        }

        /// <summary>
        /// Fee multiplier applied to transactions contained in block.
        /// </summary>
        /// <value>Fee multiplier applied to transactions contained in block.</value>
        /// <example>0</example>
        [DataMember(Name = "averageFeeMultiplier", IsRequired = true, EmitDefaultValue = true)]
        public long AverageFeeMultiplier { get; set; }

        /// <summary>
        /// Fee multiplier applied to transactions contained in block.
        /// </summary>
        /// <value>Fee multiplier applied to transactions contained in block.</value>
        /// <example>0</example>
        [DataMember(Name = "medianFeeMultiplier", IsRequired = true, EmitDefaultValue = true)]
        public long MedianFeeMultiplier { get; set; }

        /// <summary>
        /// Fee multiplier applied to transactions contained in block.
        /// </summary>
        /// <value>Fee multiplier applied to transactions contained in block.</value>
        /// <example>0</example>
        [DataMember(Name = "highestFeeMultiplier", IsRequired = true, EmitDefaultValue = true)]
        public long HighestFeeMultiplier { get; set; }

        /// <summary>
        /// Fee multiplier applied to transactions contained in block.
        /// </summary>
        /// <value>Fee multiplier applied to transactions contained in block.</value>
        /// <example>0</example>
        [DataMember(Name = "lowestFeeMultiplier", IsRequired = true, EmitDefaultValue = true)]
        public long LowestFeeMultiplier { get; set; }

        /// <summary>
        /// Fee multiplier applied to transactions contained in block.
        /// </summary>
        /// <value>Fee multiplier applied to transactions contained in block.</value>
        /// <example>0</example>
        [DataMember(Name = "minFeeMultiplier", IsRequired = true, EmitDefaultValue = true)]
        public long MinFeeMultiplier { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TransactionFeesDTO {\n");
            sb.Append("  AverageFeeMultiplier: ").Append(AverageFeeMultiplier).Append("\n");
            sb.Append("  MedianFeeMultiplier: ").Append(MedianFeeMultiplier).Append("\n");
            sb.Append("  HighestFeeMultiplier: ").Append(HighestFeeMultiplier).Append("\n");
            sb.Append("  LowestFeeMultiplier: ").Append(LowestFeeMultiplier).Append("\n");
            sb.Append("  MinFeeMultiplier: ").Append(MinFeeMultiplier).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
