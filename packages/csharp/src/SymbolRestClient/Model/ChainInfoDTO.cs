/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace SymbolRestClient.Model
{
    /// <summary>
    /// ChainInfoDTO
    /// </summary>
    [DataContract(Name = "ChainInfoDTO")]
    public partial class ChainInfoDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChainInfoDTO" /> class.
        /// </summary>
        [JsonConstructor]
        protected ChainInfoDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ChainInfoDTO" /> class.
        /// </summary>
        /// <param name="height">Height of the blockchain. (required).</param>
        /// <param name="scoreHigh">Score of the blockchain. During synchronization, nodes try to get the blockchain with highest score in the network.  (required).</param>
        /// <param name="scoreLow">Score of the blockchain. During synchronization, nodes try to get the blockchain with highest score in the network.  (required).</param>
        /// <param name="latestFinalizedBlock">latestFinalizedBlock (required).</param>
        public ChainInfoDTO(string height = default(string), string scoreHigh = default(string), string scoreLow = default(string), FinalizedBlockDTO latestFinalizedBlock = default(FinalizedBlockDTO))
        {
            // to ensure "height" is required (not null)
            if (height == null)
            {
                throw new ArgumentNullException("height is a required property for ChainInfoDTO and cannot be null");
            }
            this.Height = height;
            // to ensure "scoreHigh" is required (not null)
            if (scoreHigh == null)
            {
                throw new ArgumentNullException("scoreHigh is a required property for ChainInfoDTO and cannot be null");
            }
            this.ScoreHigh = scoreHigh;
            // to ensure "scoreLow" is required (not null)
            if (scoreLow == null)
            {
                throw new ArgumentNullException("scoreLow is a required property for ChainInfoDTO and cannot be null");
            }
            this.ScoreLow = scoreLow;
            // to ensure "latestFinalizedBlock" is required (not null)
            if (latestFinalizedBlock == null)
            {
                throw new ArgumentNullException("latestFinalizedBlock is a required property for ChainInfoDTO and cannot be null");
            }
            this.LatestFinalizedBlock = latestFinalizedBlock;
        }

        /// <summary>
        /// Height of the blockchain.
        /// </summary>
        /// <value>Height of the blockchain.</value>
        /// <example>1</example>
        [DataMember(Name = "height", IsRequired = true, EmitDefaultValue = true)]
        public string Height { get; set; }

        /// <summary>
        /// Score of the blockchain. During synchronization, nodes try to get the blockchain with highest score in the network. 
        /// </summary>
        /// <value>Score of the blockchain. During synchronization, nodes try to get the blockchain with highest score in the network. </value>
        /// <example>1683298087010368300</example>
        [DataMember(Name = "scoreHigh", IsRequired = true, EmitDefaultValue = true)]
        public string ScoreHigh { get; set; }

        /// <summary>
        /// Score of the blockchain. During synchronization, nodes try to get the blockchain with highest score in the network. 
        /// </summary>
        /// <value>Score of the blockchain. During synchronization, nodes try to get the blockchain with highest score in the network. </value>
        /// <example>1683298087010368300</example>
        [DataMember(Name = "scoreLow", IsRequired = true, EmitDefaultValue = true)]
        public string ScoreLow { get; set; }

        /// <summary>
        /// Gets or Sets LatestFinalizedBlock
        /// </summary>
        [DataMember(Name = "latestFinalizedBlock", IsRequired = true, EmitDefaultValue = true)]
        public FinalizedBlockDTO LatestFinalizedBlock { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChainInfoDTO {\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  ScoreHigh: ").Append(ScoreHigh).Append("\n");
            sb.Append("  ScoreLow: ").Append(ScoreLow).Append("\n");
            sb.Append("  LatestFinalizedBlock: ").Append(LatestFinalizedBlock).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
