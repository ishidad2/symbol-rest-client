/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace SymbolRestClient.Model
{
    /// <summary>
    /// Network related configuration properties.
    /// </summary>
    [DataContract(Name = "NetworkPropertiesDTO")]
    public partial class NetworkPropertiesDTO : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets NodeEqualityStrategy
        /// </summary>
        [DataMember(Name = "nodeEqualityStrategy", EmitDefaultValue = false)]
        public NodeIdentityEqualityStrategy? NodeEqualityStrategy { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="NetworkPropertiesDTO" /> class.
        /// </summary>
        /// <param name="identifier">Network identifier..</param>
        /// <param name="nodeEqualityStrategy">nodeEqualityStrategy.</param>
        /// <param name="nemesisSignerPublicKey">Public key..</param>
        /// <param name="generationHashSeed">generationHashSeed.</param>
        /// <param name="epochAdjustment">Nemesis epoch time adjustment..</param>
        public NetworkPropertiesDTO(string identifier = default(string), NodeIdentityEqualityStrategy? nodeEqualityStrategy = default(NodeIdentityEqualityStrategy?), string nemesisSignerPublicKey = default(string), string generationHashSeed = default(string), string epochAdjustment = default(string))
        {
            this.Identifier = identifier;
            this.NodeEqualityStrategy = nodeEqualityStrategy;
            this.NemesisSignerPublicKey = nemesisSignerPublicKey;
            this.GenerationHashSeed = generationHashSeed;
            this.EpochAdjustment = epochAdjustment;
        }

        /// <summary>
        /// Network identifier.
        /// </summary>
        /// <value>Network identifier.</value>
        /// <example>testnet</example>
        [DataMember(Name = "identifier", EmitDefaultValue = false)]
        public string Identifier { get; set; }

        /// <summary>
        /// Public key.
        /// </summary>
        /// <value>Public key.</value>
        /// <example>AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26</example>
        [DataMember(Name = "nemesisSignerPublicKey", EmitDefaultValue = false)]
        public string NemesisSignerPublicKey { get; set; }

        /// <summary>
        /// Gets or Sets GenerationHashSeed
        /// </summary>
        /// <example>C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810</example>
        [DataMember(Name = "generationHashSeed", EmitDefaultValue = false)]
        public string GenerationHashSeed { get; set; }

        /// <summary>
        /// Nemesis epoch time adjustment.
        /// </summary>
        /// <value>Nemesis epoch time adjustment.</value>
        /// <example>1573430400s</example>
        [DataMember(Name = "epochAdjustment", EmitDefaultValue = false)]
        public string EpochAdjustment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class NetworkPropertiesDTO {\n");
            sb.Append("  Identifier: ").Append(Identifier).Append("\n");
            sb.Append("  NodeEqualityStrategy: ").Append(NodeEqualityStrategy).Append("\n");
            sb.Append("  NemesisSignerPublicKey: ").Append(NemesisSignerPublicKey).Append("\n");
            sb.Append("  GenerationHashSeed: ").Append(GenerationHashSeed).Append("\n");
            sb.Append("  EpochAdjustment: ").Append(EpochAdjustment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
