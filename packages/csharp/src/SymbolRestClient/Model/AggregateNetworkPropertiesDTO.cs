/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace SymbolRestClient.Model
{
    /// <summary>
    /// AggregateNetworkPropertiesDTO
    /// </summary>
    [DataContract(Name = "AggregateNetworkPropertiesDTO")]
    public partial class AggregateNetworkPropertiesDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AggregateNetworkPropertiesDTO" /> class.
        /// </summary>
        /// <param name="maxTransactionsPerAggregate">Maximum number of transactions per aggregate..</param>
        /// <param name="maxCosignaturesPerAggregate">Maximum number of cosignatures per aggregate..</param>
        /// <param name="enableStrictCosignatureCheck">Set to true if cosignatures must exactly match component signers. Set to false if cosignatures should be validated externally..</param>
        /// <param name="enableBondedAggregateSupport">Set to true if bonded aggregates should be allowed. Set to false if bonded aggregates should be rejected..</param>
        /// <param name="maxBondedTransactionLifetime">Maximum lifetime a bonded transaction can have before it expires..</param>
        public AggregateNetworkPropertiesDTO(string maxTransactionsPerAggregate = default(string), string maxCosignaturesPerAggregate = default(string), bool enableStrictCosignatureCheck = default(bool), bool enableBondedAggregateSupport = default(bool), string maxBondedTransactionLifetime = default(string))
        {
            this.MaxTransactionsPerAggregate = maxTransactionsPerAggregate;
            this.MaxCosignaturesPerAggregate = maxCosignaturesPerAggregate;
            this.EnableStrictCosignatureCheck = enableStrictCosignatureCheck;
            this.EnableBondedAggregateSupport = enableBondedAggregateSupport;
            this.MaxBondedTransactionLifetime = maxBondedTransactionLifetime;
        }

        /// <summary>
        /// Maximum number of transactions per aggregate.
        /// </summary>
        /// <value>Maximum number of transactions per aggregate.</value>
        /// <example>1&#39;000</example>
        [DataMember(Name = "maxTransactionsPerAggregate", EmitDefaultValue = false)]
        public string MaxTransactionsPerAggregate { get; set; }

        /// <summary>
        /// Maximum number of cosignatures per aggregate.
        /// </summary>
        /// <value>Maximum number of cosignatures per aggregate.</value>
        /// <example>15</example>
        [DataMember(Name = "maxCosignaturesPerAggregate", EmitDefaultValue = false)]
        public string MaxCosignaturesPerAggregate { get; set; }

        /// <summary>
        /// Set to true if cosignatures must exactly match component signers. Set to false if cosignatures should be validated externally.
        /// </summary>
        /// <value>Set to true if cosignatures must exactly match component signers. Set to false if cosignatures should be validated externally.</value>
        /// <example>false</example>
        [DataMember(Name = "enableStrictCosignatureCheck", EmitDefaultValue = true)]
        public bool EnableStrictCosignatureCheck { get; set; }

        /// <summary>
        /// Set to true if bonded aggregates should be allowed. Set to false if bonded aggregates should be rejected.
        /// </summary>
        /// <value>Set to true if bonded aggregates should be allowed. Set to false if bonded aggregates should be rejected.</value>
        /// <example>true</example>
        [DataMember(Name = "enableBondedAggregateSupport", EmitDefaultValue = true)]
        public bool EnableBondedAggregateSupport { get; set; }

        /// <summary>
        /// Maximum lifetime a bonded transaction can have before it expires.
        /// </summary>
        /// <value>Maximum lifetime a bonded transaction can have before it expires.</value>
        /// <example>48h</example>
        [DataMember(Name = "maxBondedTransactionLifetime", EmitDefaultValue = false)]
        public string MaxBondedTransactionLifetime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AggregateNetworkPropertiesDTO {\n");
            sb.Append("  MaxTransactionsPerAggregate: ").Append(MaxTransactionsPerAggregate).Append("\n");
            sb.Append("  MaxCosignaturesPerAggregate: ").Append(MaxCosignaturesPerAggregate).Append("\n");
            sb.Append("  EnableStrictCosignatureCheck: ").Append(EnableStrictCosignatureCheck).Append("\n");
            sb.Append("  EnableBondedAggregateSupport: ").Append(EnableBondedAggregateSupport).Append("\n");
            sb.Append("  MaxBondedTransactionLifetime: ").Append(MaxBondedTransactionLifetime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
