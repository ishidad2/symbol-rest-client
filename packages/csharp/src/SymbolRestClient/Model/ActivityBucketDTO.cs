/*
 * Catapult REST Endpoints
 *
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SymbolRestClient.Client.OpenAPIDateConverter;

namespace SymbolRestClient.Model
{
    /// <summary>
    /// Supplementary data stored for importance recalculation. At each importance recalculation, existing buckets are shifted, the working bucket is finalized and a new working bucket is created. Each bucket influences at most five importance recalculations. 
    /// </summary>
    [DataContract(Name = "ActivityBucketDTO")]
    public partial class ActivityBucketDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityBucketDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ActivityBucketDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityBucketDTO" /> class.
        /// </summary>
        /// <param name="startHeight">Height of the blockchain. (required).</param>
        /// <param name="totalFeesPaid">Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative). (required).</param>
        /// <param name="beneficiaryCount">A number that allows uint 32 values. (required).</param>
        /// <param name="rawScore">Probability of an account to harvest the next block. (required).</param>
        public ActivityBucketDTO(string startHeight = default(string), string totalFeesPaid = default(string), long beneficiaryCount = default(long), string rawScore = default(string))
        {
            // to ensure "startHeight" is required (not null)
            if (startHeight == null)
            {
                throw new ArgumentNullException("startHeight is a required property for ActivityBucketDTO and cannot be null");
            }
            this.StartHeight = startHeight;
            // to ensure "totalFeesPaid" is required (not null)
            if (totalFeesPaid == null)
            {
                throw new ArgumentNullException("totalFeesPaid is a required property for ActivityBucketDTO and cannot be null");
            }
            this.TotalFeesPaid = totalFeesPaid;
            this.BeneficiaryCount = beneficiaryCount;
            // to ensure "rawScore" is required (not null)
            if (rawScore == null)
            {
                throw new ArgumentNullException("rawScore is a required property for ActivityBucketDTO and cannot be null");
            }
            this.RawScore = rawScore;
        }

        /// <summary>
        /// Height of the blockchain.
        /// </summary>
        /// <value>Height of the blockchain.</value>
        /// <example>1</example>
        [DataMember(Name = "startHeight", IsRequired = true, EmitDefaultValue = true)]
        public string StartHeight { get; set; }

        /// <summary>
        /// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
        /// </summary>
        /// <value>Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).</value>
        /// <example>123456</example>
        [DataMember(Name = "totalFeesPaid", IsRequired = true, EmitDefaultValue = true)]
        public string TotalFeesPaid { get; set; }

        /// <summary>
        /// A number that allows uint 32 values.
        /// </summary>
        /// <value>A number that allows uint 32 values.</value>
        /// <example>2222212828</example>
        [DataMember(Name = "beneficiaryCount", IsRequired = true, EmitDefaultValue = true)]
        public long BeneficiaryCount { get; set; }

        /// <summary>
        /// Probability of an account to harvest the next block.
        /// </summary>
        /// <value>Probability of an account to harvest the next block.</value>
        /// <example>0</example>
        [DataMember(Name = "rawScore", IsRequired = true, EmitDefaultValue = true)]
        public string RawScore { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ActivityBucketDTO {\n");
            sb.Append("  StartHeight: ").Append(StartHeight).Append("\n");
            sb.Append("  TotalFeesPaid: ").Append(TotalFeesPaid).Append("\n");
            sb.Append("  BeneficiaryCount: ").Append(BeneficiaryCount).Append("\n");
            sb.Append("  RawScore: ").Append(RawScore).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
