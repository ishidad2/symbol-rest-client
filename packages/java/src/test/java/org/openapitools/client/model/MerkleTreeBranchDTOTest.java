/*
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MerkleTreeBranchLinkDTO;
import org.openapitools.client.model.MerkleTreeNodeTypeEnum;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MerkleTreeBranchDTO
 */
public class MerkleTreeBranchDTOTest {
    private final MerkleTreeBranchDTO model = new MerkleTreeBranchDTO();

    /**
     * Model tests for MerkleTreeBranchDTO
     */
    @Test
    public void testMerkleTreeBranchDTO() {
        // TODO: test MerkleTreeBranchDTO
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'encodedPath'
     */
    @Test
    public void encodedPathTest() {
        // TODO: test encodedPath
    }

    /**
     * Test the property 'nibbleCount'
     */
    @Test
    public void nibbleCountTest() {
        // TODO: test nibbleCount
    }

    /**
     * Test the property 'linkMask'
     */
    @Test
    public void linkMaskTest() {
        // TODO: test linkMask
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'branchHash'
     */
    @Test
    public void branchHashTest() {
        // TODO: test branchHash
    }

}
