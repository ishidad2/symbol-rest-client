/*
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MerkleStateInfoDTO;
import org.openapitools.client.model.ModelError;
import org.openapitools.client.model.MosaicIds;
import org.openapitools.client.model.MosaicInfoDTO;
import org.openapitools.client.model.MosaicPage;
import org.openapitools.client.model.Order;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MosaicRoutesApi
 */
@Disabled
public class MosaicRoutesApiTest {

    private final MosaicRoutesApi api = new MosaicRoutesApi();

    /**
     * Get mosaic information
     *
     * Gets the mosaic definition for a given mosaic identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMosaicTest() throws ApiException {
        String mosaicId = null;
        MosaicInfoDTO response = api.getMosaic(mosaicId);
        // TODO: test validations
    }

    /**
     * Get mosaic merkle information
     *
     * Gets the mosaic definition merkle for a given mosaic identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMosaicMerkleTest() throws ApiException {
        String mosaicId = null;
        MerkleStateInfoDTO response = api.getMosaicMerkle(mosaicId);
        // TODO: test validations
    }

    /**
     * Get mosaics information for an array of mosaics
     *
     * Gets an array of mosaic definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMosaicsTest() throws ApiException {
        MosaicIds mosaicIds = null;
        List<MosaicInfoDTO> response = api.getMosaics(mosaicIds);
        // TODO: test validations
    }

    /**
     * Search mosaics
     *
     * Gets an array of mosaics.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchMosaicsTest() throws ApiException {
        String ownerAddress = null;
        Integer pageSize = null;
        Integer pageNumber = null;
        String offset = null;
        Order order = null;
        MosaicPage response = api.searchMosaics(ownerAddress, pageSize, pageNumber, offset, order);
        // TODO: test validations
    }

}
