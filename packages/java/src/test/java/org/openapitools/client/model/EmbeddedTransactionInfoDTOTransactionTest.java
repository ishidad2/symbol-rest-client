/*
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountRestrictionFlagsEnum;
import org.openapitools.client.model.AliasActionEnum;
import org.openapitools.client.model.EmbeddedAccountAddressRestrictionTransactionDTO;
import org.openapitools.client.model.EmbeddedAccountKeyLinkTransactionDTO;
import org.openapitools.client.model.EmbeddedAccountMetadataTransactionDTO;
import org.openapitools.client.model.EmbeddedAccountMosaicRestrictionTransactionDTO;
import org.openapitools.client.model.EmbeddedAccountOperationRestrictionTransactionDTO;
import org.openapitools.client.model.EmbeddedAddressAliasTransactionDTO;
import org.openapitools.client.model.EmbeddedHashLockTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicAddressRestrictionTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicAliasTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicDefinitionTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicGlobalRestrictionTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicMetadataTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicSupplyChangeTransactionDTO;
import org.openapitools.client.model.EmbeddedMosaicSupplyRevocationTransactionDTO;
import org.openapitools.client.model.EmbeddedMultisigAccountModificationTransactionDTO;
import org.openapitools.client.model.EmbeddedNamespaceMetadataTransactionDTO;
import org.openapitools.client.model.EmbeddedNamespaceRegistrationTransactionDTO;
import org.openapitools.client.model.EmbeddedNodeKeyLinkTransactionDTO;
import org.openapitools.client.model.EmbeddedSecretLockTransactionDTO;
import org.openapitools.client.model.EmbeddedSecretProofTransactionDTO;
import org.openapitools.client.model.EmbeddedTransferTransactionDTO;
import org.openapitools.client.model.EmbeddedVotingKeyLinkTransactionDTO;
import org.openapitools.client.model.EmbeddedVrfKeyLinkTransactionDTO;
import org.openapitools.client.model.LinkActionEnum;
import org.openapitools.client.model.LockHashAlgorithmEnum;
import org.openapitools.client.model.MosaicRestrictionTypeEnum;
import org.openapitools.client.model.MosaicSupplyChangeActionEnum;
import org.openapitools.client.model.NamespaceRegistrationTypeEnum;
import org.openapitools.client.model.NetworkTypeEnum;
import org.openapitools.client.model.TransactionTypeEnum;
import org.openapitools.client.model.UnresolvedMosaic;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EmbeddedTransactionInfoDTOTransaction
 */
public class EmbeddedTransactionInfoDTOTransactionTest {
    private final EmbeddedTransactionInfoDTOTransaction model = new EmbeddedTransactionInfoDTOTransaction();

    /**
     * Model tests for EmbeddedTransactionInfoDTOTransaction
     */
    @Test
    public void testEmbeddedTransactionInfoDTOTransaction() {
        // TODO: test EmbeddedTransactionInfoDTOTransaction
    }

    /**
     * Test the property 'signerPublicKey'
     */
    @Test
    public void signerPublicKeyTest() {
        // TODO: test signerPublicKey
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'linkedPublicKey'
     */
    @Test
    public void linkedPublicKeyTest() {
        // TODO: test linkedPublicKey
    }

    /**
     * Test the property 'linkAction'
     */
    @Test
    public void linkActionTest() {
        // TODO: test linkAction
    }

    /**
     * Test the property 'startEpoch'
     */
    @Test
    public void startEpochTest() {
        // TODO: test startEpoch
    }

    /**
     * Test the property 'endEpoch'
     */
    @Test
    public void endEpochTest() {
        // TODO: test endEpoch
    }

    /**
     * Test the property 'mosaicId'
     */
    @Test
    public void mosaicIdTest() {
        // TODO: test mosaicId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'hash'
     */
    @Test
    public void hashTest() {
        // TODO: test hash
    }

    /**
     * Test the property 'recipientAddress'
     */
    @Test
    public void recipientAddressTest() {
        // TODO: test recipientAddress
    }

    /**
     * Test the property 'secret'
     */
    @Test
    public void secretTest() {
        // TODO: test secret
    }

    /**
     * Test the property 'hashAlgorithm'
     */
    @Test
    public void hashAlgorithmTest() {
        // TODO: test hashAlgorithm
    }

    /**
     * Test the property 'proof'
     */
    @Test
    public void proofTest() {
        // TODO: test proof
    }

    /**
     * Test the property 'targetAddress'
     */
    @Test
    public void targetAddressTest() {
        // TODO: test targetAddress
    }

    /**
     * Test the property 'scopedMetadataKey'
     */
    @Test
    public void scopedMetadataKeyTest() {
        // TODO: test scopedMetadataKey
    }

    /**
     * Test the property 'valueSizeDelta'
     */
    @Test
    public void valueSizeDeltaTest() {
        // TODO: test valueSizeDelta
    }

    /**
     * Test the property 'valueSize'
     */
    @Test
    public void valueSizeTest() {
        // TODO: test valueSize
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'targetMosaicId'
     */
    @Test
    public void targetMosaicIdTest() {
        // TODO: test targetMosaicId
    }

    /**
     * Test the property 'targetNamespaceId'
     */
    @Test
    public void targetNamespaceIdTest() {
        // TODO: test targetNamespaceId
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'divisibility'
     */
    @Test
    public void divisibilityTest() {
        // TODO: test divisibility
    }

    /**
     * Test the property 'delta'
     */
    @Test
    public void deltaTest() {
        // TODO: test delta
    }

    /**
     * Test the property 'action'
     */
    @Test
    public void actionTest() {
        // TODO: test action
    }

    /**
     * Test the property 'sourceAddress'
     */
    @Test
    public void sourceAddressTest() {
        // TODO: test sourceAddress
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'registrationType'
     */
    @Test
    public void registrationTypeTest() {
        // TODO: test registrationType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'namespaceId'
     */
    @Test
    public void namespaceIdTest() {
        // TODO: test namespaceId
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'aliasAction'
     */
    @Test
    public void aliasActionTest() {
        // TODO: test aliasAction
    }

    /**
     * Test the property 'minRemovalDelta'
     */
    @Test
    public void minRemovalDeltaTest() {
        // TODO: test minRemovalDelta
    }

    /**
     * Test the property 'minApprovalDelta'
     */
    @Test
    public void minApprovalDeltaTest() {
        // TODO: test minApprovalDelta
    }

    /**
     * Test the property 'addressAdditions'
     */
    @Test
    public void addressAdditionsTest() {
        // TODO: test addressAdditions
    }

    /**
     * Test the property 'addressDeletions'
     */
    @Test
    public void addressDeletionsTest() {
        // TODO: test addressDeletions
    }

    /**
     * Test the property 'restrictionFlags'
     */
    @Test
    public void restrictionFlagsTest() {
        // TODO: test restrictionFlags
    }

    /**
     * Test the property 'restrictionAdditions'
     */
    @Test
    public void restrictionAdditionsTest() {
        // TODO: test restrictionAdditions
    }

    /**
     * Test the property 'restrictionDeletions'
     */
    @Test
    public void restrictionDeletionsTest() {
        // TODO: test restrictionDeletions
    }

    /**
     * Test the property 'referenceMosaicId'
     */
    @Test
    public void referenceMosaicIdTest() {
        // TODO: test referenceMosaicId
    }

    /**
     * Test the property 'restrictionKey'
     */
    @Test
    public void restrictionKeyTest() {
        // TODO: test restrictionKey
    }

    /**
     * Test the property 'previousRestrictionValue'
     */
    @Test
    public void previousRestrictionValueTest() {
        // TODO: test previousRestrictionValue
    }

    /**
     * Test the property 'newRestrictionValue'
     */
    @Test
    public void newRestrictionValueTest() {
        // TODO: test newRestrictionValue
    }

    /**
     * Test the property 'previousRestrictionType'
     */
    @Test
    public void previousRestrictionTypeTest() {
        // TODO: test previousRestrictionType
    }

    /**
     * Test the property 'newRestrictionType'
     */
    @Test
    public void newRestrictionTypeTest() {
        // TODO: test newRestrictionType
    }

    /**
     * Test the property 'mosaics'
     */
    @Test
    public void mosaicsTest() {
        // TODO: test mosaics
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

}
