/*
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountRestrictionFlagsEnum;
import org.openapitools.client.model.NetworkTypeEnum;
import org.openapitools.client.model.TransactionTypeEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EmbeddedAccountOperationRestrictionTransactionDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-02T22:49:20.273938+09:00[Asia/Tokyo]")
public class EmbeddedAccountOperationRestrictionTransactionDTO {
  public static final String SERIALIZED_NAME_SIGNER_PUBLIC_KEY = "signerPublicKey";
  @SerializedName(SERIALIZED_NAME_SIGNER_PUBLIC_KEY)
  private String signerPublicKey;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private NetworkTypeEnum network;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_RESTRICTION_FLAGS = "restrictionFlags";
  @SerializedName(SERIALIZED_NAME_RESTRICTION_FLAGS)
  private AccountRestrictionFlagsEnum restrictionFlags;

  public static final String SERIALIZED_NAME_RESTRICTION_ADDITIONS = "restrictionAdditions";
  @SerializedName(SERIALIZED_NAME_RESTRICTION_ADDITIONS)
  private List<TransactionTypeEnum> restrictionAdditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESTRICTION_DELETIONS = "restrictionDeletions";
  @SerializedName(SERIALIZED_NAME_RESTRICTION_DELETIONS)
  private List<TransactionTypeEnum> restrictionDeletions = new ArrayList<>();

  public EmbeddedAccountOperationRestrictionTransactionDTO() {
  }

  public EmbeddedAccountOperationRestrictionTransactionDTO signerPublicKey(String signerPublicKey) {
    this.signerPublicKey = signerPublicKey;
    return this;
  }

   /**
   * Public key.
   * @return signerPublicKey
  **/
  @javax.annotation.Nonnull
  public String getSignerPublicKey() {
    return signerPublicKey;
  }

  public void setSignerPublicKey(String signerPublicKey) {
    this.signerPublicKey = signerPublicKey;
  }


  public EmbeddedAccountOperationRestrictionTransactionDTO version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Entity version.
   * @return version
  **/
  @javax.annotation.Nonnull
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  public EmbeddedAccountOperationRestrictionTransactionDTO network(NetworkTypeEnum network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nonnull
  public NetworkTypeEnum getNetwork() {
    return network;
  }

  public void setNetwork(NetworkTypeEnum network) {
    this.network = network;
  }


  public EmbeddedAccountOperationRestrictionTransactionDTO type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public EmbeddedAccountOperationRestrictionTransactionDTO restrictionFlags(AccountRestrictionFlagsEnum restrictionFlags) {
    this.restrictionFlags = restrictionFlags;
    return this;
  }

   /**
   * Get restrictionFlags
   * @return restrictionFlags
  **/
  @javax.annotation.Nonnull
  public AccountRestrictionFlagsEnum getRestrictionFlags() {
    return restrictionFlags;
  }

  public void setRestrictionFlags(AccountRestrictionFlagsEnum restrictionFlags) {
    this.restrictionFlags = restrictionFlags;
  }


  public EmbeddedAccountOperationRestrictionTransactionDTO restrictionAdditions(List<TransactionTypeEnum> restrictionAdditions) {
    this.restrictionAdditions = restrictionAdditions;
    return this;
  }

  public EmbeddedAccountOperationRestrictionTransactionDTO addRestrictionAdditionsItem(TransactionTypeEnum restrictionAdditionsItem) {
    if (this.restrictionAdditions == null) {
      this.restrictionAdditions = new ArrayList<>();
    }
    this.restrictionAdditions.add(restrictionAdditionsItem);
    return this;
  }

   /**
   * Account restriction additions.
   * @return restrictionAdditions
  **/
  @javax.annotation.Nonnull
  public List<TransactionTypeEnum> getRestrictionAdditions() {
    return restrictionAdditions;
  }

  public void setRestrictionAdditions(List<TransactionTypeEnum> restrictionAdditions) {
    this.restrictionAdditions = restrictionAdditions;
  }


  public EmbeddedAccountOperationRestrictionTransactionDTO restrictionDeletions(List<TransactionTypeEnum> restrictionDeletions) {
    this.restrictionDeletions = restrictionDeletions;
    return this;
  }

  public EmbeddedAccountOperationRestrictionTransactionDTO addRestrictionDeletionsItem(TransactionTypeEnum restrictionDeletionsItem) {
    if (this.restrictionDeletions == null) {
      this.restrictionDeletions = new ArrayList<>();
    }
    this.restrictionDeletions.add(restrictionDeletionsItem);
    return this;
  }

   /**
   * Account restriction deletions.
   * @return restrictionDeletions
  **/
  @javax.annotation.Nonnull
  public List<TransactionTypeEnum> getRestrictionDeletions() {
    return restrictionDeletions;
  }

  public void setRestrictionDeletions(List<TransactionTypeEnum> restrictionDeletions) {
    this.restrictionDeletions = restrictionDeletions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmbeddedAccountOperationRestrictionTransactionDTO embeddedAccountOperationRestrictionTransactionDTO = (EmbeddedAccountOperationRestrictionTransactionDTO) o;
    return Objects.equals(this.signerPublicKey, embeddedAccountOperationRestrictionTransactionDTO.signerPublicKey) &&
        Objects.equals(this.version, embeddedAccountOperationRestrictionTransactionDTO.version) &&
        Objects.equals(this.network, embeddedAccountOperationRestrictionTransactionDTO.network) &&
        Objects.equals(this.type, embeddedAccountOperationRestrictionTransactionDTO.type) &&
        Objects.equals(this.restrictionFlags, embeddedAccountOperationRestrictionTransactionDTO.restrictionFlags) &&
        Objects.equals(this.restrictionAdditions, embeddedAccountOperationRestrictionTransactionDTO.restrictionAdditions) &&
        Objects.equals(this.restrictionDeletions, embeddedAccountOperationRestrictionTransactionDTO.restrictionDeletions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signerPublicKey, version, network, type, restrictionFlags, restrictionAdditions, restrictionDeletions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmbeddedAccountOperationRestrictionTransactionDTO {\n");
    sb.append("    signerPublicKey: ").append(toIndentedString(signerPublicKey)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    restrictionFlags: ").append(toIndentedString(restrictionFlags)).append("\n");
    sb.append("    restrictionAdditions: ").append(toIndentedString(restrictionAdditions)).append("\n");
    sb.append("    restrictionDeletions: ").append(toIndentedString(restrictionDeletions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("signerPublicKey");
    openapiFields.add("version");
    openapiFields.add("network");
    openapiFields.add("type");
    openapiFields.add("restrictionFlags");
    openapiFields.add("restrictionAdditions");
    openapiFields.add("restrictionDeletions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("signerPublicKey");
    openapiRequiredFields.add("version");
    openapiRequiredFields.add("network");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("restrictionFlags");
    openapiRequiredFields.add("restrictionAdditions");
    openapiRequiredFields.add("restrictionDeletions");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EmbeddedAccountOperationRestrictionTransactionDTO
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EmbeddedAccountOperationRestrictionTransactionDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmbeddedAccountOperationRestrictionTransactionDTO is not found in the empty JSON string", EmbeddedAccountOperationRestrictionTransactionDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EmbeddedAccountOperationRestrictionTransactionDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmbeddedAccountOperationRestrictionTransactionDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EmbeddedAccountOperationRestrictionTransactionDTO.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("signerPublicKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signerPublicKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signerPublicKey").toString()));
      }
      // validate the required field `network`
      NetworkTypeEnum.validateJsonElement(jsonObj.get("network"));
      // validate the required field `restrictionFlags`
      AccountRestrictionFlagsEnum.validateJsonElement(jsonObj.get("restrictionFlags"));
      // ensure the required json array is present
      if (jsonObj.get("restrictionAdditions") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("restrictionAdditions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `restrictionAdditions` to be an array in the JSON string but got `%s`", jsonObj.get("restrictionAdditions").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("restrictionDeletions") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("restrictionDeletions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `restrictionDeletions` to be an array in the JSON string but got `%s`", jsonObj.get("restrictionDeletions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmbeddedAccountOperationRestrictionTransactionDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmbeddedAccountOperationRestrictionTransactionDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmbeddedAccountOperationRestrictionTransactionDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmbeddedAccountOperationRestrictionTransactionDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<EmbeddedAccountOperationRestrictionTransactionDTO>() {
           @Override
           public void write(JsonWriter out, EmbeddedAccountOperationRestrictionTransactionDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmbeddedAccountOperationRestrictionTransactionDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmbeddedAccountOperationRestrictionTransactionDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmbeddedAccountOperationRestrictionTransactionDTO
  * @throws IOException if the JSON string is invalid with respect to EmbeddedAccountOperationRestrictionTransactionDTO
  */
  public static EmbeddedAccountOperationRestrictionTransactionDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmbeddedAccountOperationRestrictionTransactionDTO.class);
  }

 /**
  * Convert an instance of EmbeddedAccountOperationRestrictionTransactionDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

