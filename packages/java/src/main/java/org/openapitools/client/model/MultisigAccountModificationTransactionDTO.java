/*
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetworkTypeEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Transaction to create or modify a multisig account.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-02T22:49:20.273938+09:00[Asia/Tokyo]")
public class MultisigAccountModificationTransactionDTO {
  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature;

  public static final String SERIALIZED_NAME_SIGNER_PUBLIC_KEY = "signerPublicKey";
  @SerializedName(SERIALIZED_NAME_SIGNER_PUBLIC_KEY)
  private String signerPublicKey;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private NetworkTypeEnum network;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_MAX_FEE = "maxFee";
  @SerializedName(SERIALIZED_NAME_MAX_FEE)
  private String maxFee;

  public static final String SERIALIZED_NAME_DEADLINE = "deadline";
  @SerializedName(SERIALIZED_NAME_DEADLINE)
  private String deadline;

  public static final String SERIALIZED_NAME_MIN_REMOVAL_DELTA = "minRemovalDelta";
  @SerializedName(SERIALIZED_NAME_MIN_REMOVAL_DELTA)
  private Integer minRemovalDelta;

  public static final String SERIALIZED_NAME_MIN_APPROVAL_DELTA = "minApprovalDelta";
  @SerializedName(SERIALIZED_NAME_MIN_APPROVAL_DELTA)
  private Integer minApprovalDelta;

  public static final String SERIALIZED_NAME_ADDRESS_ADDITIONS = "addressAdditions";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ADDITIONS)
  private List<String> addressAdditions = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDRESS_DELETIONS = "addressDeletions";
  @SerializedName(SERIALIZED_NAME_ADDRESS_DELETIONS)
  private List<String> addressDeletions = new ArrayList<>();

  public MultisigAccountModificationTransactionDTO() {
  }

  public MultisigAccountModificationTransactionDTO size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * A number that allows uint 32 values.
   * @return size
  **/
  @javax.annotation.Nonnull
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }


  public MultisigAccountModificationTransactionDTO signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Entity&#39;s signature generated by the signer.
   * @return signature
  **/
  @javax.annotation.Nonnull
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  public MultisigAccountModificationTransactionDTO signerPublicKey(String signerPublicKey) {
    this.signerPublicKey = signerPublicKey;
    return this;
  }

   /**
   * Public key.
   * @return signerPublicKey
  **/
  @javax.annotation.Nonnull
  public String getSignerPublicKey() {
    return signerPublicKey;
  }

  public void setSignerPublicKey(String signerPublicKey) {
    this.signerPublicKey = signerPublicKey;
  }


  public MultisigAccountModificationTransactionDTO version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Entity version.
   * @return version
  **/
  @javax.annotation.Nonnull
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  public MultisigAccountModificationTransactionDTO network(NetworkTypeEnum network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nonnull
  public NetworkTypeEnum getNetwork() {
    return network;
  }

  public void setNetwork(NetworkTypeEnum network) {
    this.network = network;
  }


  public MultisigAccountModificationTransactionDTO type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public MultisigAccountModificationTransactionDTO maxFee(String maxFee) {
    this.maxFee = maxFee;
    return this;
  }

   /**
   * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
   * @return maxFee
  **/
  @javax.annotation.Nonnull
  public String getMaxFee() {
    return maxFee;
  }

  public void setMaxFee(String maxFee) {
    this.maxFee = maxFee;
  }


  public MultisigAccountModificationTransactionDTO deadline(String deadline) {
    this.deadline = deadline;
    return this;
  }

   /**
   * Duration expressed in number of blocks.
   * @return deadline
  **/
  @javax.annotation.Nonnull
  public String getDeadline() {
    return deadline;
  }

  public void setDeadline(String deadline) {
    this.deadline = deadline;
  }


  public MultisigAccountModificationTransactionDTO minRemovalDelta(Integer minRemovalDelta) {
    this.minRemovalDelta = minRemovalDelta;
    return this;
  }

   /**
   * Number of signatures needed to remove a cosignatory. If we are modifying an existing multisig account, this indicates the relative change of the minimum cosignatories. 
   * @return minRemovalDelta
  **/
  @javax.annotation.Nonnull
  public Integer getMinRemovalDelta() {
    return minRemovalDelta;
  }

  public void setMinRemovalDelta(Integer minRemovalDelta) {
    this.minRemovalDelta = minRemovalDelta;
  }


  public MultisigAccountModificationTransactionDTO minApprovalDelta(Integer minApprovalDelta) {
    this.minApprovalDelta = minApprovalDelta;
    return this;
  }

   /**
   * Number of signatures needed to approve a transaction. If we are modifying an existing multisig account, this indicates the relative change of the minimum cosignatories. 
   * @return minApprovalDelta
  **/
  @javax.annotation.Nonnull
  public Integer getMinApprovalDelta() {
    return minApprovalDelta;
  }

  public void setMinApprovalDelta(Integer minApprovalDelta) {
    this.minApprovalDelta = minApprovalDelta;
  }


  public MultisigAccountModificationTransactionDTO addressAdditions(List<String> addressAdditions) {
    this.addressAdditions = addressAdditions;
    return this;
  }

  public MultisigAccountModificationTransactionDTO addAddressAdditionsItem(String addressAdditionsItem) {
    if (this.addressAdditions == null) {
      this.addressAdditions = new ArrayList<>();
    }
    this.addressAdditions.add(addressAdditionsItem);
    return this;
  }

   /**
   * Array of cosignatory accounts to add.
   * @return addressAdditions
  **/
  @javax.annotation.Nonnull
  public List<String> getAddressAdditions() {
    return addressAdditions;
  }

  public void setAddressAdditions(List<String> addressAdditions) {
    this.addressAdditions = addressAdditions;
  }


  public MultisigAccountModificationTransactionDTO addressDeletions(List<String> addressDeletions) {
    this.addressDeletions = addressDeletions;
    return this;
  }

  public MultisigAccountModificationTransactionDTO addAddressDeletionsItem(String addressDeletionsItem) {
    if (this.addressDeletions == null) {
      this.addressDeletions = new ArrayList<>();
    }
    this.addressDeletions.add(addressDeletionsItem);
    return this;
  }

   /**
   * Array of cosignatory accounts to delete.
   * @return addressDeletions
  **/
  @javax.annotation.Nonnull
  public List<String> getAddressDeletions() {
    return addressDeletions;
  }

  public void setAddressDeletions(List<String> addressDeletions) {
    this.addressDeletions = addressDeletions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultisigAccountModificationTransactionDTO multisigAccountModificationTransactionDTO = (MultisigAccountModificationTransactionDTO) o;
    return Objects.equals(this.size, multisigAccountModificationTransactionDTO.size) &&
        Objects.equals(this.signature, multisigAccountModificationTransactionDTO.signature) &&
        Objects.equals(this.signerPublicKey, multisigAccountModificationTransactionDTO.signerPublicKey) &&
        Objects.equals(this.version, multisigAccountModificationTransactionDTO.version) &&
        Objects.equals(this.network, multisigAccountModificationTransactionDTO.network) &&
        Objects.equals(this.type, multisigAccountModificationTransactionDTO.type) &&
        Objects.equals(this.maxFee, multisigAccountModificationTransactionDTO.maxFee) &&
        Objects.equals(this.deadline, multisigAccountModificationTransactionDTO.deadline) &&
        Objects.equals(this.minRemovalDelta, multisigAccountModificationTransactionDTO.minRemovalDelta) &&
        Objects.equals(this.minApprovalDelta, multisigAccountModificationTransactionDTO.minApprovalDelta) &&
        Objects.equals(this.addressAdditions, multisigAccountModificationTransactionDTO.addressAdditions) &&
        Objects.equals(this.addressDeletions, multisigAccountModificationTransactionDTO.addressDeletions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, signature, signerPublicKey, version, network, type, maxFee, deadline, minRemovalDelta, minApprovalDelta, addressAdditions, addressDeletions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultisigAccountModificationTransactionDTO {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    signerPublicKey: ").append(toIndentedString(signerPublicKey)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    maxFee: ").append(toIndentedString(maxFee)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    minRemovalDelta: ").append(toIndentedString(minRemovalDelta)).append("\n");
    sb.append("    minApprovalDelta: ").append(toIndentedString(minApprovalDelta)).append("\n");
    sb.append("    addressAdditions: ").append(toIndentedString(addressAdditions)).append("\n");
    sb.append("    addressDeletions: ").append(toIndentedString(addressDeletions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("size");
    openapiFields.add("signature");
    openapiFields.add("signerPublicKey");
    openapiFields.add("version");
    openapiFields.add("network");
    openapiFields.add("type");
    openapiFields.add("maxFee");
    openapiFields.add("deadline");
    openapiFields.add("minRemovalDelta");
    openapiFields.add("minApprovalDelta");
    openapiFields.add("addressAdditions");
    openapiFields.add("addressDeletions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("size");
    openapiRequiredFields.add("signature");
    openapiRequiredFields.add("signerPublicKey");
    openapiRequiredFields.add("version");
    openapiRequiredFields.add("network");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("maxFee");
    openapiRequiredFields.add("deadline");
    openapiRequiredFields.add("minRemovalDelta");
    openapiRequiredFields.add("minApprovalDelta");
    openapiRequiredFields.add("addressAdditions");
    openapiRequiredFields.add("addressDeletions");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MultisigAccountModificationTransactionDTO
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MultisigAccountModificationTransactionDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MultisigAccountModificationTransactionDTO is not found in the empty JSON string", MultisigAccountModificationTransactionDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MultisigAccountModificationTransactionDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MultisigAccountModificationTransactionDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MultisigAccountModificationTransactionDTO.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signature").toString()));
      }
      if (!jsonObj.get("signerPublicKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signerPublicKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signerPublicKey").toString()));
      }
      // validate the required field `network`
      NetworkTypeEnum.validateJsonElement(jsonObj.get("network"));
      if (!jsonObj.get("maxFee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxFee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxFee").toString()));
      }
      if (!jsonObj.get("deadline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deadline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deadline").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("addressAdditions") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("addressAdditions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressAdditions` to be an array in the JSON string but got `%s`", jsonObj.get("addressAdditions").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("addressDeletions") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("addressDeletions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressDeletions` to be an array in the JSON string but got `%s`", jsonObj.get("addressDeletions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MultisigAccountModificationTransactionDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MultisigAccountModificationTransactionDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MultisigAccountModificationTransactionDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MultisigAccountModificationTransactionDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<MultisigAccountModificationTransactionDTO>() {
           @Override
           public void write(JsonWriter out, MultisigAccountModificationTransactionDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MultisigAccountModificationTransactionDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MultisigAccountModificationTransactionDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MultisigAccountModificationTransactionDTO
  * @throws IOException if the JSON string is invalid with respect to MultisigAccountModificationTransactionDTO
  */
  public static MultisigAccountModificationTransactionDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MultisigAccountModificationTransactionDTO.class);
  }

 /**
  * Convert an instance of MultisigAccountModificationTransactionDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

