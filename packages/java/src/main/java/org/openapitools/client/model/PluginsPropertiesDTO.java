/*
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AccountKeyLinkNetworkPropertiesDTO;
import org.openapitools.client.model.AccountRestrictionNetworkPropertiesDTO;
import org.openapitools.client.model.AggregateNetworkPropertiesDTO;
import org.openapitools.client.model.HashLockNetworkPropertiesDTO;
import org.openapitools.client.model.MetadataNetworkPropertiesDTO;
import org.openapitools.client.model.MosaicNetworkPropertiesDTO;
import org.openapitools.client.model.MosaicRestrictionNetworkPropertiesDTO;
import org.openapitools.client.model.MultisigNetworkPropertiesDTO;
import org.openapitools.client.model.NamespaceNetworkPropertiesDTO;
import org.openapitools.client.model.SecretLockNetworkPropertiesDTO;
import org.openapitools.client.model.TransferNetworkPropertiesDTO;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Plugin related configuration properties.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-02T22:49:20.273938+09:00[Asia/Tokyo]")
public class PluginsPropertiesDTO {
  public static final String SERIALIZED_NAME_ACCOUNTLINK = "accountlink";
  @SerializedName(SERIALIZED_NAME_ACCOUNTLINK)
  private AccountKeyLinkNetworkPropertiesDTO accountlink;

  public static final String SERIALIZED_NAME_AGGREGATE = "aggregate";
  @SerializedName(SERIALIZED_NAME_AGGREGATE)
  private AggregateNetworkPropertiesDTO aggregate;

  public static final String SERIALIZED_NAME_LOCKHASH = "lockhash";
  @SerializedName(SERIALIZED_NAME_LOCKHASH)
  private HashLockNetworkPropertiesDTO lockhash;

  public static final String SERIALIZED_NAME_LOCKSECRET = "locksecret";
  @SerializedName(SERIALIZED_NAME_LOCKSECRET)
  private SecretLockNetworkPropertiesDTO locksecret;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private MetadataNetworkPropertiesDTO metadata;

  public static final String SERIALIZED_NAME_MOSAIC = "mosaic";
  @SerializedName(SERIALIZED_NAME_MOSAIC)
  private MosaicNetworkPropertiesDTO mosaic;

  public static final String SERIALIZED_NAME_MULTISIG = "multisig";
  @SerializedName(SERIALIZED_NAME_MULTISIG)
  private MultisigNetworkPropertiesDTO multisig;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private NamespaceNetworkPropertiesDTO namespace;

  public static final String SERIALIZED_NAME_RESTRICTIONACCOUNT = "restrictionaccount";
  @SerializedName(SERIALIZED_NAME_RESTRICTIONACCOUNT)
  private AccountRestrictionNetworkPropertiesDTO restrictionaccount;

  public static final String SERIALIZED_NAME_RESTRICTIONMOSAIC = "restrictionmosaic";
  @SerializedName(SERIALIZED_NAME_RESTRICTIONMOSAIC)
  private MosaicRestrictionNetworkPropertiesDTO restrictionmosaic;

  public static final String SERIALIZED_NAME_TRANSFER = "transfer";
  @SerializedName(SERIALIZED_NAME_TRANSFER)
  private TransferNetworkPropertiesDTO transfer;

  public PluginsPropertiesDTO() {
  }

  public PluginsPropertiesDTO accountlink(AccountKeyLinkNetworkPropertiesDTO accountlink) {
    this.accountlink = accountlink;
    return this;
  }

   /**
   * Get accountlink
   * @return accountlink
  **/
  @javax.annotation.Nullable
  public AccountKeyLinkNetworkPropertiesDTO getAccountlink() {
    return accountlink;
  }

  public void setAccountlink(AccountKeyLinkNetworkPropertiesDTO accountlink) {
    this.accountlink = accountlink;
  }


  public PluginsPropertiesDTO aggregate(AggregateNetworkPropertiesDTO aggregate) {
    this.aggregate = aggregate;
    return this;
  }

   /**
   * Get aggregate
   * @return aggregate
  **/
  @javax.annotation.Nullable
  public AggregateNetworkPropertiesDTO getAggregate() {
    return aggregate;
  }

  public void setAggregate(AggregateNetworkPropertiesDTO aggregate) {
    this.aggregate = aggregate;
  }


  public PluginsPropertiesDTO lockhash(HashLockNetworkPropertiesDTO lockhash) {
    this.lockhash = lockhash;
    return this;
  }

   /**
   * Get lockhash
   * @return lockhash
  **/
  @javax.annotation.Nullable
  public HashLockNetworkPropertiesDTO getLockhash() {
    return lockhash;
  }

  public void setLockhash(HashLockNetworkPropertiesDTO lockhash) {
    this.lockhash = lockhash;
  }


  public PluginsPropertiesDTO locksecret(SecretLockNetworkPropertiesDTO locksecret) {
    this.locksecret = locksecret;
    return this;
  }

   /**
   * Get locksecret
   * @return locksecret
  **/
  @javax.annotation.Nullable
  public SecretLockNetworkPropertiesDTO getLocksecret() {
    return locksecret;
  }

  public void setLocksecret(SecretLockNetworkPropertiesDTO locksecret) {
    this.locksecret = locksecret;
  }


  public PluginsPropertiesDTO metadata(MetadataNetworkPropertiesDTO metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  public MetadataNetworkPropertiesDTO getMetadata() {
    return metadata;
  }

  public void setMetadata(MetadataNetworkPropertiesDTO metadata) {
    this.metadata = metadata;
  }


  public PluginsPropertiesDTO mosaic(MosaicNetworkPropertiesDTO mosaic) {
    this.mosaic = mosaic;
    return this;
  }

   /**
   * Get mosaic
   * @return mosaic
  **/
  @javax.annotation.Nullable
  public MosaicNetworkPropertiesDTO getMosaic() {
    return mosaic;
  }

  public void setMosaic(MosaicNetworkPropertiesDTO mosaic) {
    this.mosaic = mosaic;
  }


  public PluginsPropertiesDTO multisig(MultisigNetworkPropertiesDTO multisig) {
    this.multisig = multisig;
    return this;
  }

   /**
   * Get multisig
   * @return multisig
  **/
  @javax.annotation.Nullable
  public MultisigNetworkPropertiesDTO getMultisig() {
    return multisig;
  }

  public void setMultisig(MultisigNetworkPropertiesDTO multisig) {
    this.multisig = multisig;
  }


  public PluginsPropertiesDTO namespace(NamespaceNetworkPropertiesDTO namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  public NamespaceNetworkPropertiesDTO getNamespace() {
    return namespace;
  }

  public void setNamespace(NamespaceNetworkPropertiesDTO namespace) {
    this.namespace = namespace;
  }


  public PluginsPropertiesDTO restrictionaccount(AccountRestrictionNetworkPropertiesDTO restrictionaccount) {
    this.restrictionaccount = restrictionaccount;
    return this;
  }

   /**
   * Get restrictionaccount
   * @return restrictionaccount
  **/
  @javax.annotation.Nullable
  public AccountRestrictionNetworkPropertiesDTO getRestrictionaccount() {
    return restrictionaccount;
  }

  public void setRestrictionaccount(AccountRestrictionNetworkPropertiesDTO restrictionaccount) {
    this.restrictionaccount = restrictionaccount;
  }


  public PluginsPropertiesDTO restrictionmosaic(MosaicRestrictionNetworkPropertiesDTO restrictionmosaic) {
    this.restrictionmosaic = restrictionmosaic;
    return this;
  }

   /**
   * Get restrictionmosaic
   * @return restrictionmosaic
  **/
  @javax.annotation.Nullable
  public MosaicRestrictionNetworkPropertiesDTO getRestrictionmosaic() {
    return restrictionmosaic;
  }

  public void setRestrictionmosaic(MosaicRestrictionNetworkPropertiesDTO restrictionmosaic) {
    this.restrictionmosaic = restrictionmosaic;
  }


  public PluginsPropertiesDTO transfer(TransferNetworkPropertiesDTO transfer) {
    this.transfer = transfer;
    return this;
  }

   /**
   * Get transfer
   * @return transfer
  **/
  @javax.annotation.Nullable
  public TransferNetworkPropertiesDTO getTransfer() {
    return transfer;
  }

  public void setTransfer(TransferNetworkPropertiesDTO transfer) {
    this.transfer = transfer;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginsPropertiesDTO pluginsPropertiesDTO = (PluginsPropertiesDTO) o;
    return Objects.equals(this.accountlink, pluginsPropertiesDTO.accountlink) &&
        Objects.equals(this.aggregate, pluginsPropertiesDTO.aggregate) &&
        Objects.equals(this.lockhash, pluginsPropertiesDTO.lockhash) &&
        Objects.equals(this.locksecret, pluginsPropertiesDTO.locksecret) &&
        Objects.equals(this.metadata, pluginsPropertiesDTO.metadata) &&
        Objects.equals(this.mosaic, pluginsPropertiesDTO.mosaic) &&
        Objects.equals(this.multisig, pluginsPropertiesDTO.multisig) &&
        Objects.equals(this.namespace, pluginsPropertiesDTO.namespace) &&
        Objects.equals(this.restrictionaccount, pluginsPropertiesDTO.restrictionaccount) &&
        Objects.equals(this.restrictionmosaic, pluginsPropertiesDTO.restrictionmosaic) &&
        Objects.equals(this.transfer, pluginsPropertiesDTO.transfer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountlink, aggregate, lockhash, locksecret, metadata, mosaic, multisig, namespace, restrictionaccount, restrictionmosaic, transfer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginsPropertiesDTO {\n");
    sb.append("    accountlink: ").append(toIndentedString(accountlink)).append("\n");
    sb.append("    aggregate: ").append(toIndentedString(aggregate)).append("\n");
    sb.append("    lockhash: ").append(toIndentedString(lockhash)).append("\n");
    sb.append("    locksecret: ").append(toIndentedString(locksecret)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    mosaic: ").append(toIndentedString(mosaic)).append("\n");
    sb.append("    multisig: ").append(toIndentedString(multisig)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    restrictionaccount: ").append(toIndentedString(restrictionaccount)).append("\n");
    sb.append("    restrictionmosaic: ").append(toIndentedString(restrictionmosaic)).append("\n");
    sb.append("    transfer: ").append(toIndentedString(transfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountlink");
    openapiFields.add("aggregate");
    openapiFields.add("lockhash");
    openapiFields.add("locksecret");
    openapiFields.add("metadata");
    openapiFields.add("mosaic");
    openapiFields.add("multisig");
    openapiFields.add("namespace");
    openapiFields.add("restrictionaccount");
    openapiFields.add("restrictionmosaic");
    openapiFields.add("transfer");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PluginsPropertiesDTO
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PluginsPropertiesDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PluginsPropertiesDTO is not found in the empty JSON string", PluginsPropertiesDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PluginsPropertiesDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PluginsPropertiesDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `accountlink`
      if (jsonObj.get("accountlink") != null && !jsonObj.get("accountlink").isJsonNull()) {
        AccountKeyLinkNetworkPropertiesDTO.validateJsonElement(jsonObj.get("accountlink"));
      }
      // validate the optional field `aggregate`
      if (jsonObj.get("aggregate") != null && !jsonObj.get("aggregate").isJsonNull()) {
        AggregateNetworkPropertiesDTO.validateJsonElement(jsonObj.get("aggregate"));
      }
      // validate the optional field `lockhash`
      if (jsonObj.get("lockhash") != null && !jsonObj.get("lockhash").isJsonNull()) {
        HashLockNetworkPropertiesDTO.validateJsonElement(jsonObj.get("lockhash"));
      }
      // validate the optional field `locksecret`
      if (jsonObj.get("locksecret") != null && !jsonObj.get("locksecret").isJsonNull()) {
        SecretLockNetworkPropertiesDTO.validateJsonElement(jsonObj.get("locksecret"));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        MetadataNetworkPropertiesDTO.validateJsonElement(jsonObj.get("metadata"));
      }
      // validate the optional field `mosaic`
      if (jsonObj.get("mosaic") != null && !jsonObj.get("mosaic").isJsonNull()) {
        MosaicNetworkPropertiesDTO.validateJsonElement(jsonObj.get("mosaic"));
      }
      // validate the optional field `multisig`
      if (jsonObj.get("multisig") != null && !jsonObj.get("multisig").isJsonNull()) {
        MultisigNetworkPropertiesDTO.validateJsonElement(jsonObj.get("multisig"));
      }
      // validate the optional field `namespace`
      if (jsonObj.get("namespace") != null && !jsonObj.get("namespace").isJsonNull()) {
        NamespaceNetworkPropertiesDTO.validateJsonElement(jsonObj.get("namespace"));
      }
      // validate the optional field `restrictionaccount`
      if (jsonObj.get("restrictionaccount") != null && !jsonObj.get("restrictionaccount").isJsonNull()) {
        AccountRestrictionNetworkPropertiesDTO.validateJsonElement(jsonObj.get("restrictionaccount"));
      }
      // validate the optional field `restrictionmosaic`
      if (jsonObj.get("restrictionmosaic") != null && !jsonObj.get("restrictionmosaic").isJsonNull()) {
        MosaicRestrictionNetworkPropertiesDTO.validateJsonElement(jsonObj.get("restrictionmosaic"));
      }
      // validate the optional field `transfer`
      if (jsonObj.get("transfer") != null && !jsonObj.get("transfer").isJsonNull()) {
        TransferNetworkPropertiesDTO.validateJsonElement(jsonObj.get("transfer"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PluginsPropertiesDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PluginsPropertiesDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PluginsPropertiesDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PluginsPropertiesDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<PluginsPropertiesDTO>() {
           @Override
           public void write(JsonWriter out, PluginsPropertiesDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PluginsPropertiesDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PluginsPropertiesDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PluginsPropertiesDTO
  * @throws IOException if the JSON string is invalid with respect to PluginsPropertiesDTO
  */
  public static PluginsPropertiesDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PluginsPropertiesDTO.class);
  }

 /**
  * Convert an instance of PluginsPropertiesDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

