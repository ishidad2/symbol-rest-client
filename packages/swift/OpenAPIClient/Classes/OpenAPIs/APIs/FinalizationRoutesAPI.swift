//
// FinalizationRoutesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class FinalizationRoutesAPI {

    /**
     Get finalization proof
     
     - parameter epoch: (path) Finalization epoch. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getFinalizationProofAtEpoch(epoch: Int64, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: FinalizationProofDTO?, _ error: Error?) -> Void)) -> RequestTask {
        return getFinalizationProofAtEpochWithRequestBuilder(epoch: epoch).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get finalization proof
     - GET /finalization/proof/epoch/{epoch}
     - Gets finalization proof for the greatest height associated with the given epoch.
     - parameter epoch: (path) Finalization epoch. 
     - returns: RequestBuilder<FinalizationProofDTO> 
     */
    open class func getFinalizationProofAtEpochWithRequestBuilder(epoch: Int64) -> RequestBuilder<FinalizationProofDTO> {
        var localVariablePath = "/finalization/proof/epoch/{epoch}"
        let epochPreEscape = "\(APIHelper.mapValueToPathItem(epoch))"
        let epochPostEscape = epochPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{epoch}", with: epochPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FinalizationProofDTO>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get finalization proof
     
     - parameter height: (path) Block height. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getFinalizationProofAtHeight(height: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: FinalizationProofDTO?, _ error: Error?) -> Void)) -> RequestTask {
        return getFinalizationProofAtHeightWithRequestBuilder(height: height).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get finalization proof
     - GET /finalization/proof/height/{height}
     - Gets finalization proof at the given height.
     - parameter height: (path) Block height. 
     - returns: RequestBuilder<FinalizationProofDTO> 
     */
    open class func getFinalizationProofAtHeightWithRequestBuilder(height: String) -> RequestBuilder<FinalizationProofDTO> {
        var localVariablePath = "/finalization/proof/height/{height}"
        let heightPreEscape = "\(APIHelper.mapValueToPathItem(height))"
        let heightPostEscape = heightPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{height}", with: heightPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FinalizationProofDTO>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
