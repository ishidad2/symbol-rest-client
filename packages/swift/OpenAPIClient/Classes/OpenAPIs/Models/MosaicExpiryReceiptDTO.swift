//
// MosaicExpiryReceiptDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Receipt stored when a mosaic expires. */
public struct MosaicExpiryReceiptDTO: Codable, JSONEncodable, Hashable {

    /** Version of the receipt. */
    public var version: Int
    public var type: ReceiptTypeEnum
    /** Mosaic identifier. */
    public var artifactId: String

    public init(version: Int, type: ReceiptTypeEnum, artifactId: String) {
        self.version = version
        self.type = type
        self.artifactId = artifactId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case version
        case type
        case artifactId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(version, forKey: .version)
        try container.encode(type, forKey: .type)
        try container.encode(artifactId, forKey: .artifactId)
    }
}

