//
// MerkleStateInfoDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The merkle path information clients can use to proof the state of the given entity.  */
public struct MerkleStateInfoDTO: Codable, JSONEncodable, Hashable {

    /** The hex information of the complete merkle tree as returned by server api. More information can be found in chapter 4.3 of the catapult whitepaper.  */
    public var raw: String
    /** Merkle tree parsed from merkle tree raw. */
    public var tree: [MerkleStateInfoDTOTreeInner]

    public init(raw: String, tree: [MerkleStateInfoDTOTreeInner]) {
        self.raw = raw
        self.tree = tree
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case raw
        case tree
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(raw, forKey: .raw)
        try container.encode(tree, forKey: .tree)
    }
}

