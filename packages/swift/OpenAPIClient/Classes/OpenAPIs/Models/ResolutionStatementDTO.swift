//
// ResolutionStatementDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ResolutionStatementDTO: Codable, JSONEncodable, Hashable {

    /** Height of the blockchain. */
    public var height: String
    public var unresolved: ResolutionStatementDTOUnresolved
    /** Array of resolution entries linked to the unresolved namespaceId. It is an array instead of a single resolution entry since within one block the resolution might change for different sources due to alias related transactions.  */
    public var resolutionEntries: [ResolutionEntryDTO]

    public init(height: String, unresolved: ResolutionStatementDTOUnresolved, resolutionEntries: [ResolutionEntryDTO]) {
        self.height = height
        self.unresolved = unresolved
        self.resolutionEntries = resolutionEntries
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case height
        case unresolved
        case resolutionEntries
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(height, forKey: .height)
        try container.encode(unresolved, forKey: .unresolved)
        try container.encode(resolutionEntries, forKey: .resolutionEntries)
    }
}

