//
// ResolutionStatementInfoDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A resolution statement keeps the relation between a namespace alias used in a transaction and the real address or mosaicId.  */
public struct ResolutionStatementInfoDTO: Codable, JSONEncodable, Hashable {

    /** Internal resource identifier. */
    public var id: String
    public var meta: StatementMetaDTO
    public var statement: ResolutionStatementDTO

    public init(id: String, meta: StatementMetaDTO, statement: ResolutionStatementDTO) {
        self.id = id
        self.meta = meta
        self.statement = statement
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case meta
        case statement
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(meta, forKey: .meta)
        try container.encode(statement, forKey: .statement)
    }
}

