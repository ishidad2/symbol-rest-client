//
// Cosignature.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Cosignature: Codable, JSONEncodable, Hashable {

    public var parentHash: String?
    /** Entity's signature generated by the signer. */
    public var signature: String?
    /** Public key. */
    public var signerPublicKey: String?
    /** Cosignature version. */
    public var version: String?

    public init(parentHash: String? = nil, signature: String? = nil, signerPublicKey: String? = nil, version: String? = nil) {
        self.parentHash = parentHash
        self.signature = signature
        self.signerPublicKey = signerPublicKey
        self.version = version
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case parentHash
        case signature
        case signerPublicKey
        case version
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(parentHash, forKey: .parentHash)
        try container.encodeIfPresent(signature, forKey: .signature)
        try container.encodeIfPresent(signerPublicKey, forKey: .signerPublicKey)
        try container.encodeIfPresent(version, forKey: .version)
    }
}

