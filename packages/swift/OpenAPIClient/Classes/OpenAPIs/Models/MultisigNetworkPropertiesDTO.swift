//
// MultisigNetworkPropertiesDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MultisigNetworkPropertiesDTO: Codable, JSONEncodable, Hashable {

    /** Maximum number of multisig levels. */
    public var maxMultisigDepth: String?
    /** Maximum number of cosignatories per account. */
    public var maxCosignatoriesPerAccount: String?
    /** Maximum number of accounts a single account can cosign. */
    public var maxCosignedAccountsPerAccount: String?

    public init(maxMultisigDepth: String? = nil, maxCosignatoriesPerAccount: String? = nil, maxCosignedAccountsPerAccount: String? = nil) {
        self.maxMultisigDepth = maxMultisigDepth
        self.maxCosignatoriesPerAccount = maxCosignatoriesPerAccount
        self.maxCosignedAccountsPerAccount = maxCosignedAccountsPerAccount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case maxMultisigDepth
        case maxCosignatoriesPerAccount
        case maxCosignedAccountsPerAccount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(maxMultisigDepth, forKey: .maxMultisigDepth)
        try container.encodeIfPresent(maxCosignatoriesPerAccount, forKey: .maxCosignatoriesPerAccount)
        try container.encodeIfPresent(maxCosignedAccountsPerAccount, forKey: .maxCosignedAccountsPerAccount)
    }
}

