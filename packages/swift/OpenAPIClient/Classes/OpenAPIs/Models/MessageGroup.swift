//
// MessageGroup.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MessageGroup: Codable, JSONEncodable, Hashable {

    public var stage: StageEnum
    /** Height of the blockchain. */
    public var height: String
    public var hashes: [String]
    public var signatures: [BmTreeSignature]

    public init(stage: StageEnum, height: String, hashes: [String], signatures: [BmTreeSignature]) {
        self.stage = stage
        self.height = height
        self.hashes = hashes
        self.signatures = signatures
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case stage
        case height
        case hashes
        case signatures
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(stage, forKey: .stage)
        try container.encode(height, forKey: .height)
        try container.encode(hashes, forKey: .hashes)
        try container.encode(signatures, forKey: .signatures)
    }
}

