//
// MultisigAccountModificationTransactionBodyDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MultisigAccountModificationTransactionBodyDTO: Codable, JSONEncodable, Hashable {

    /** Number of signatures needed to remove a cosignatory. If we are modifying an existing multisig account, this indicates the relative change of the minimum cosignatories.  */
    public var minRemovalDelta: Int
    /** Number of signatures needed to approve a transaction. If we are modifying an existing multisig account, this indicates the relative change of the minimum cosignatories.  */
    public var minApprovalDelta: Int
    /** Array of cosignatory accounts to add. */
    public var addressAdditions: [String]
    /** Array of cosignatory accounts to delete. */
    public var addressDeletions: [String]

    public init(minRemovalDelta: Int, minApprovalDelta: Int, addressAdditions: [String], addressDeletions: [String]) {
        self.minRemovalDelta = minRemovalDelta
        self.minApprovalDelta = minApprovalDelta
        self.addressAdditions = addressAdditions
        self.addressDeletions = addressDeletions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case minRemovalDelta
        case minApprovalDelta
        case addressAdditions
        case addressDeletions
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(minRemovalDelta, forKey: .minRemovalDelta)
        try container.encode(minApprovalDelta, forKey: .minApprovalDelta)
        try container.encode(addressAdditions, forKey: .addressAdditions)
        try container.encode(addressDeletions, forKey: .addressDeletions)
    }
}

