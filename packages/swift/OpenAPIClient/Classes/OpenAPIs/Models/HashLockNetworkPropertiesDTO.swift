//
// HashLockNetworkPropertiesDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HashLockNetworkPropertiesDTO: Codable, JSONEncodable, Hashable {

    /** Amount that has to be locked per aggregate in partial cache. */
    public var lockedFundsPerAggregate: String?
    /** Maximum number of blocks for which a hash lock can exist. */
    public var maxHashLockDuration: String?

    public init(lockedFundsPerAggregate: String? = nil, maxHashLockDuration: String? = nil) {
        self.lockedFundsPerAggregate = lockedFundsPerAggregate
        self.maxHashLockDuration = maxHashLockDuration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lockedFundsPerAggregate
        case maxHashLockDuration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(lockedFundsPerAggregate, forKey: .lockedFundsPerAggregate)
        try container.encodeIfPresent(maxHashLockDuration, forKey: .maxHashLockDuration)
    }
}

