//
// ActivityBucketDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Supplementary data stored for importance recalculation. At each importance recalculation, existing buckets are shifted, the working bucket is finalized and a new working bucket is created. Each bucket influences at most five importance recalculations.  */
public struct ActivityBucketDTO: Codable, JSONEncodable, Hashable {

    /** Height of the blockchain. */
    public var startHeight: String
    /** Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative). */
    public var totalFeesPaid: String
    /** A number that allows uint 32 values. */
    public var beneficiaryCount: Int64
    /** Probability of an account to harvest the next block. */
    public var rawScore: String

    public init(startHeight: String, totalFeesPaid: String, beneficiaryCount: Int64, rawScore: String) {
        self.startHeight = startHeight
        self.totalFeesPaid = totalFeesPaid
        self.beneficiaryCount = beneficiaryCount
        self.rawScore = rawScore
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case startHeight
        case totalFeesPaid
        case beneficiaryCount
        case rawScore
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(startHeight, forKey: .startHeight)
        try container.encode(totalFeesPaid, forKey: .totalFeesPaid)
        try container.encode(beneficiaryCount, forKey: .beneficiaryCount)
        try container.encode(rawScore, forKey: .rawScore)
    }
}

