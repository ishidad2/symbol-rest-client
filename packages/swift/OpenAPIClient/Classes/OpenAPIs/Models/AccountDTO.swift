//
// AccountDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AccountDTO: Codable, JSONEncodable, Hashable {

    /** The version of the state */
    public var version: Int
    /** Address encoded using a 32-character set. */
    public var address: String
    /** Height of the blockchain. */
    public var addressHeight: String
    /** Public key. */
    public var publicKey: String
    /** Height of the blockchain. */
    public var publicKeyHeight: String
    public var accountType: AccountTypeEnum
    public var supplementalPublicKeys: SupplementalPublicKeysDTO
    public var activityBuckets: [ActivityBucketDTO]
    /** Mosaic units owned. */
    public var mosaics: [Mosaic]
    /** Probability of an account to harvest the next block. */
    public var importance: String
    /** Height of the blockchain. */
    public var importanceHeight: String

    public init(version: Int, address: String, addressHeight: String, publicKey: String, publicKeyHeight: String, accountType: AccountTypeEnum, supplementalPublicKeys: SupplementalPublicKeysDTO, activityBuckets: [ActivityBucketDTO], mosaics: [Mosaic], importance: String, importanceHeight: String) {
        self.version = version
        self.address = address
        self.addressHeight = addressHeight
        self.publicKey = publicKey
        self.publicKeyHeight = publicKeyHeight
        self.accountType = accountType
        self.supplementalPublicKeys = supplementalPublicKeys
        self.activityBuckets = activityBuckets
        self.mosaics = mosaics
        self.importance = importance
        self.importanceHeight = importanceHeight
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case version
        case address
        case addressHeight
        case publicKey
        case publicKeyHeight
        case accountType
        case supplementalPublicKeys
        case activityBuckets
        case mosaics
        case importance
        case importanceHeight
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(version, forKey: .version)
        try container.encode(address, forKey: .address)
        try container.encode(addressHeight, forKey: .addressHeight)
        try container.encode(publicKey, forKey: .publicKey)
        try container.encode(publicKeyHeight, forKey: .publicKeyHeight)
        try container.encode(accountType, forKey: .accountType)
        try container.encode(supplementalPublicKeys, forKey: .supplementalPublicKeys)
        try container.encode(activityBuckets, forKey: .activityBuckets)
        try container.encode(mosaics, forKey: .mosaics)
        try container.encode(importance, forKey: .importance)
        try container.encode(importanceHeight, forKey: .importanceHeight)
    }
}

