/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
)

// AccountRestrictionFlagsEnum Type of account restriction: * 0x0001 (1 decimal) - Allow only incoming transactions from a given address. * 0x0002 (2 decimal) - Allow only incoming transactions containing a given mosaic identifier. * 0x4001 (16385 decimal) - Allow only outgoing transactions to a given address. * 0x4004 (16388 decimal) - Allow only outgoing transactions with a given transaction type. * 0x8001 (32769 decimal) - Block incoming transactions from a given address. * 0x8002 (32770 decimal) - Block incoming transactions containing a given mosaic identifier. * 0xC001 (49153 decimal) - Block outgoing transactions to a given address. * 0xC004 (49156 decimal) - Block outgoing transactions with a given transaction type. 
type AccountRestrictionFlagsEnum int32

// List of AccountRestrictionFlagsEnum
const (
	_1 AccountRestrictionFlagsEnum = 1
	_2 AccountRestrictionFlagsEnum = 2
	_16385 AccountRestrictionFlagsEnum = 16385
	_16388 AccountRestrictionFlagsEnum = 16388
	_32769 AccountRestrictionFlagsEnum = 32769
	_32770 AccountRestrictionFlagsEnum = 32770
	_49153 AccountRestrictionFlagsEnum = 49153
	_49156 AccountRestrictionFlagsEnum = 49156
)

// All allowed values of AccountRestrictionFlagsEnum enum
var AllowedAccountRestrictionFlagsEnumEnumValues = []AccountRestrictionFlagsEnum{
	1,
	2,
	16385,
	16388,
	32769,
	32770,
	49153,
	49156,
}

func (v *AccountRestrictionFlagsEnum) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AccountRestrictionFlagsEnum(value)
	for _, existing := range AllowedAccountRestrictionFlagsEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AccountRestrictionFlagsEnum", value)
}

// NewAccountRestrictionFlagsEnumFromValue returns a pointer to a valid AccountRestrictionFlagsEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountRestrictionFlagsEnumFromValue(v int32) (*AccountRestrictionFlagsEnum, error) {
	ev := AccountRestrictionFlagsEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AccountRestrictionFlagsEnum: valid values are %v", v, AllowedAccountRestrictionFlagsEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountRestrictionFlagsEnum) IsValid() bool {
	for _, existing := range AllowedAccountRestrictionFlagsEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccountRestrictionFlagsEnum value
func (v AccountRestrictionFlagsEnum) Ptr() *AccountRestrictionFlagsEnum {
	return &v
}

type NullableAccountRestrictionFlagsEnum struct {
	value *AccountRestrictionFlagsEnum
	isSet bool
}

func (v NullableAccountRestrictionFlagsEnum) Get() *AccountRestrictionFlagsEnum {
	return v.value
}

func (v *NullableAccountRestrictionFlagsEnum) Set(val *AccountRestrictionFlagsEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRestrictionFlagsEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRestrictionFlagsEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRestrictionFlagsEnum(val *AccountRestrictionFlagsEnum) *NullableAccountRestrictionFlagsEnum {
	return &NullableAccountRestrictionFlagsEnum{value: val, isSet: true}
}

func (v NullableAccountRestrictionFlagsEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRestrictionFlagsEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

