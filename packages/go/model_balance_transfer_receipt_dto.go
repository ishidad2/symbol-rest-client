/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BalanceTransferReceiptDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BalanceTransferReceiptDTO{}

// BalanceTransferReceiptDTO Receipt stored when a state change that triggered a mosaic transfer.
type BalanceTransferReceiptDTO struct {
	// Version of the receipt.
	Version int32 `json:"version"`
	Type ReceiptTypeEnum `json:"type"`
	// Mosaic identifier.
	MosaicId string `json:"mosaicId"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	Amount string `json:"amount"`
	// Address encoded using a 32-character set.
	SenderAddress string `json:"senderAddress"`
	// Address encoded using a 32-character set.
	RecipientAddress string `json:"recipientAddress"`
}

type _BalanceTransferReceiptDTO BalanceTransferReceiptDTO

// NewBalanceTransferReceiptDTO instantiates a new BalanceTransferReceiptDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceTransferReceiptDTO(version int32, type_ ReceiptTypeEnum, mosaicId string, amount string, senderAddress string, recipientAddress string) *BalanceTransferReceiptDTO {
	this := BalanceTransferReceiptDTO{}
	this.Version = version
	this.Type = type_
	this.MosaicId = mosaicId
	this.Amount = amount
	this.SenderAddress = senderAddress
	this.RecipientAddress = recipientAddress
	return &this
}

// NewBalanceTransferReceiptDTOWithDefaults instantiates a new BalanceTransferReceiptDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceTransferReceiptDTOWithDefaults() *BalanceTransferReceiptDTO {
	this := BalanceTransferReceiptDTO{}
	return &this
}

// GetVersion returns the Version field value
func (o *BalanceTransferReceiptDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *BalanceTransferReceiptDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *BalanceTransferReceiptDTO) SetVersion(v int32) {
	o.Version = v
}

// GetType returns the Type field value
func (o *BalanceTransferReceiptDTO) GetType() ReceiptTypeEnum {
	if o == nil {
		var ret ReceiptTypeEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BalanceTransferReceiptDTO) GetTypeOk() (*ReceiptTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BalanceTransferReceiptDTO) SetType(v ReceiptTypeEnum) {
	o.Type = v
}

// GetMosaicId returns the MosaicId field value
func (o *BalanceTransferReceiptDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *BalanceTransferReceiptDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *BalanceTransferReceiptDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetAmount returns the Amount field value
func (o *BalanceTransferReceiptDTO) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *BalanceTransferReceiptDTO) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *BalanceTransferReceiptDTO) SetAmount(v string) {
	o.Amount = v
}

// GetSenderAddress returns the SenderAddress field value
func (o *BalanceTransferReceiptDTO) GetSenderAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderAddress
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value
// and a boolean to check if the value has been set.
func (o *BalanceTransferReceiptDTO) GetSenderAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderAddress, true
}

// SetSenderAddress sets field value
func (o *BalanceTransferReceiptDTO) SetSenderAddress(v string) {
	o.SenderAddress = v
}

// GetRecipientAddress returns the RecipientAddress field value
func (o *BalanceTransferReceiptDTO) GetRecipientAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value
// and a boolean to check if the value has been set.
func (o *BalanceTransferReceiptDTO) GetRecipientAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAddress, true
}

// SetRecipientAddress sets field value
func (o *BalanceTransferReceiptDTO) SetRecipientAddress(v string) {
	o.RecipientAddress = v
}

func (o BalanceTransferReceiptDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalanceTransferReceiptDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["type"] = o.Type
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["amount"] = o.Amount
	toSerialize["senderAddress"] = o.SenderAddress
	toSerialize["recipientAddress"] = o.RecipientAddress
	return toSerialize, nil
}

func (o *BalanceTransferReceiptDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"type",
		"mosaicId",
		"amount",
		"senderAddress",
		"recipientAddress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBalanceTransferReceiptDTO := _BalanceTransferReceiptDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBalanceTransferReceiptDTO)

	if err != nil {
		return err
	}

	*o = BalanceTransferReceiptDTO(varBalanceTransferReceiptDTO)

	return err
}

type NullableBalanceTransferReceiptDTO struct {
	value *BalanceTransferReceiptDTO
	isSet bool
}

func (v NullableBalanceTransferReceiptDTO) Get() *BalanceTransferReceiptDTO {
	return v.value
}

func (v *NullableBalanceTransferReceiptDTO) Set(val *BalanceTransferReceiptDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceTransferReceiptDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceTransferReceiptDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceTransferReceiptDTO(val *BalanceTransferReceiptDTO) *NullableBalanceTransferReceiptDTO {
	return &NullableBalanceTransferReceiptDTO{value: val, isSet: true}
}

func (v NullableBalanceTransferReceiptDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceTransferReceiptDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


