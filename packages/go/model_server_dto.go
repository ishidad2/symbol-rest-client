/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServerDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerDTO{}

// ServerDTO struct for ServerDTO
type ServerDTO struct {
	// catapult-rest component version.
	RestVersion string `json:"restVersion"`
	// catapult-sdk component version.
	SdkVersion string `json:"sdkVersion"`
	Deployment DeploymentDTO `json:"deployment"`
}

type _ServerDTO ServerDTO

// NewServerDTO instantiates a new ServerDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerDTO(restVersion string, sdkVersion string, deployment DeploymentDTO) *ServerDTO {
	this := ServerDTO{}
	this.RestVersion = restVersion
	this.SdkVersion = sdkVersion
	this.Deployment = deployment
	return &this
}

// NewServerDTOWithDefaults instantiates a new ServerDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerDTOWithDefaults() *ServerDTO {
	this := ServerDTO{}
	return &this
}

// GetRestVersion returns the RestVersion field value
func (o *ServerDTO) GetRestVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestVersion
}

// GetRestVersionOk returns a tuple with the RestVersion field value
// and a boolean to check if the value has been set.
func (o *ServerDTO) GetRestVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestVersion, true
}

// SetRestVersion sets field value
func (o *ServerDTO) SetRestVersion(v string) {
	o.RestVersion = v
}

// GetSdkVersion returns the SdkVersion field value
func (o *ServerDTO) GetSdkVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SdkVersion
}

// GetSdkVersionOk returns a tuple with the SdkVersion field value
// and a boolean to check if the value has been set.
func (o *ServerDTO) GetSdkVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SdkVersion, true
}

// SetSdkVersion sets field value
func (o *ServerDTO) SetSdkVersion(v string) {
	o.SdkVersion = v
}

// GetDeployment returns the Deployment field value
func (o *ServerDTO) GetDeployment() DeploymentDTO {
	if o == nil {
		var ret DeploymentDTO
		return ret
	}

	return o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value
// and a boolean to check if the value has been set.
func (o *ServerDTO) GetDeploymentOk() (*DeploymentDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deployment, true
}

// SetDeployment sets field value
func (o *ServerDTO) SetDeployment(v DeploymentDTO) {
	o.Deployment = v
}

func (o ServerDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["restVersion"] = o.RestVersion
	toSerialize["sdkVersion"] = o.SdkVersion
	toSerialize["deployment"] = o.Deployment
	return toSerialize, nil
}

func (o *ServerDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"restVersion",
		"sdkVersion",
		"deployment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerDTO := _ServerDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServerDTO)

	if err != nil {
		return err
	}

	*o = ServerDTO(varServerDTO)

	return err
}

type NullableServerDTO struct {
	value *ServerDTO
	isSet bool
}

func (v NullableServerDTO) Get() *ServerDTO {
	return v.value
}

func (v *NullableServerDTO) Set(val *ServerDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableServerDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableServerDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerDTO(val *ServerDTO) *NullableServerDTO {
	return &NullableServerDTO{value: val, isSet: true}
}

func (v NullableServerDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


