/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MultisigAccountGraphInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultisigAccountGraphInfoDTO{}

// MultisigAccountGraphInfoDTO struct for MultisigAccountGraphInfoDTO
type MultisigAccountGraphInfoDTO struct {
	// Level of the multisig account.
	Level int32 `json:"level"`
	// Array of multisig accounts for this level.
	MultisigEntries []MultisigAccountInfoDTO `json:"multisigEntries"`
}

type _MultisigAccountGraphInfoDTO MultisigAccountGraphInfoDTO

// NewMultisigAccountGraphInfoDTO instantiates a new MultisigAccountGraphInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultisigAccountGraphInfoDTO(level int32, multisigEntries []MultisigAccountInfoDTO) *MultisigAccountGraphInfoDTO {
	this := MultisigAccountGraphInfoDTO{}
	this.Level = level
	this.MultisigEntries = multisigEntries
	return &this
}

// NewMultisigAccountGraphInfoDTOWithDefaults instantiates a new MultisigAccountGraphInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultisigAccountGraphInfoDTOWithDefaults() *MultisigAccountGraphInfoDTO {
	this := MultisigAccountGraphInfoDTO{}
	return &this
}

// GetLevel returns the Level field value
func (o *MultisigAccountGraphInfoDTO) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *MultisigAccountGraphInfoDTO) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *MultisigAccountGraphInfoDTO) SetLevel(v int32) {
	o.Level = v
}

// GetMultisigEntries returns the MultisigEntries field value
func (o *MultisigAccountGraphInfoDTO) GetMultisigEntries() []MultisigAccountInfoDTO {
	if o == nil {
		var ret []MultisigAccountInfoDTO
		return ret
	}

	return o.MultisigEntries
}

// GetMultisigEntriesOk returns a tuple with the MultisigEntries field value
// and a boolean to check if the value has been set.
func (o *MultisigAccountGraphInfoDTO) GetMultisigEntriesOk() ([]MultisigAccountInfoDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.MultisigEntries, true
}

// SetMultisigEntries sets field value
func (o *MultisigAccountGraphInfoDTO) SetMultisigEntries(v []MultisigAccountInfoDTO) {
	o.MultisigEntries = v
}

func (o MultisigAccountGraphInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultisigAccountGraphInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["level"] = o.Level
	toSerialize["multisigEntries"] = o.MultisigEntries
	return toSerialize, nil
}

func (o *MultisigAccountGraphInfoDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"level",
		"multisigEntries",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMultisigAccountGraphInfoDTO := _MultisigAccountGraphInfoDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMultisigAccountGraphInfoDTO)

	if err != nil {
		return err
	}

	*o = MultisigAccountGraphInfoDTO(varMultisigAccountGraphInfoDTO)

	return err
}

type NullableMultisigAccountGraphInfoDTO struct {
	value *MultisigAccountGraphInfoDTO
	isSet bool
}

func (v NullableMultisigAccountGraphInfoDTO) Get() *MultisigAccountGraphInfoDTO {
	return v.value
}

func (v *NullableMultisigAccountGraphInfoDTO) Set(val *MultisigAccountGraphInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableMultisigAccountGraphInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableMultisigAccountGraphInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultisigAccountGraphInfoDTO(val *MultisigAccountGraphInfoDTO) *NullableMultisigAccountGraphInfoDTO {
	return &NullableMultisigAccountGraphInfoDTO{value: val, isSet: true}
}

func (v NullableMultisigAccountGraphInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultisigAccountGraphInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


