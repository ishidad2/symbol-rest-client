/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MosaicGlobalRestrictionEntryWrapperDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MosaicGlobalRestrictionEntryWrapperDTO{}

// MosaicGlobalRestrictionEntryWrapperDTO struct for MosaicGlobalRestrictionEntryWrapperDTO
type MosaicGlobalRestrictionEntryWrapperDTO struct {
	// The version of the state
	Version int32 `json:"version"`
	CompositeHash string `json:"compositeHash"`
	EntryType MosaicRestrictionEntryTypeEnum `json:"entryType"`
	// Mosaic identifier.
	MosaicId string `json:"mosaicId"`
	Restrictions []MosaicGlobalRestrictionEntryDTO `json:"restrictions"`
}

type _MosaicGlobalRestrictionEntryWrapperDTO MosaicGlobalRestrictionEntryWrapperDTO

// NewMosaicGlobalRestrictionEntryWrapperDTO instantiates a new MosaicGlobalRestrictionEntryWrapperDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMosaicGlobalRestrictionEntryWrapperDTO(version int32, compositeHash string, entryType MosaicRestrictionEntryTypeEnum, mosaicId string, restrictions []MosaicGlobalRestrictionEntryDTO) *MosaicGlobalRestrictionEntryWrapperDTO {
	this := MosaicGlobalRestrictionEntryWrapperDTO{}
	this.Version = version
	this.CompositeHash = compositeHash
	this.EntryType = entryType
	this.MosaicId = mosaicId
	this.Restrictions = restrictions
	return &this
}

// NewMosaicGlobalRestrictionEntryWrapperDTOWithDefaults instantiates a new MosaicGlobalRestrictionEntryWrapperDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMosaicGlobalRestrictionEntryWrapperDTOWithDefaults() *MosaicGlobalRestrictionEntryWrapperDTO {
	this := MosaicGlobalRestrictionEntryWrapperDTO{}
	return &this
}

// GetVersion returns the Version field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) SetVersion(v int32) {
	o.Version = v
}

// GetCompositeHash returns the CompositeHash field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetCompositeHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompositeHash
}

// GetCompositeHashOk returns a tuple with the CompositeHash field value
// and a boolean to check if the value has been set.
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetCompositeHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompositeHash, true
}

// SetCompositeHash sets field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) SetCompositeHash(v string) {
	o.CompositeHash = v
}

// GetEntryType returns the EntryType field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetEntryType() MosaicRestrictionEntryTypeEnum {
	if o == nil {
		var ret MosaicRestrictionEntryTypeEnum
		return ret
	}

	return o.EntryType
}

// GetEntryTypeOk returns a tuple with the EntryType field value
// and a boolean to check if the value has been set.
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetEntryTypeOk() (*MosaicRestrictionEntryTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryType, true
}

// SetEntryType sets field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) SetEntryType(v MosaicRestrictionEntryTypeEnum) {
	o.EntryType = v
}

// GetMosaicId returns the MosaicId field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetRestrictions returns the Restrictions field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetRestrictions() []MosaicGlobalRestrictionEntryDTO {
	if o == nil {
		var ret []MosaicGlobalRestrictionEntryDTO
		return ret
	}

	return o.Restrictions
}

// GetRestrictionsOk returns a tuple with the Restrictions field value
// and a boolean to check if the value has been set.
func (o *MosaicGlobalRestrictionEntryWrapperDTO) GetRestrictionsOk() ([]MosaicGlobalRestrictionEntryDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Restrictions, true
}

// SetRestrictions sets field value
func (o *MosaicGlobalRestrictionEntryWrapperDTO) SetRestrictions(v []MosaicGlobalRestrictionEntryDTO) {
	o.Restrictions = v
}

func (o MosaicGlobalRestrictionEntryWrapperDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MosaicGlobalRestrictionEntryWrapperDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["compositeHash"] = o.CompositeHash
	toSerialize["entryType"] = o.EntryType
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["restrictions"] = o.Restrictions
	return toSerialize, nil
}

func (o *MosaicGlobalRestrictionEntryWrapperDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"compositeHash",
		"entryType",
		"mosaicId",
		"restrictions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMosaicGlobalRestrictionEntryWrapperDTO := _MosaicGlobalRestrictionEntryWrapperDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMosaicGlobalRestrictionEntryWrapperDTO)

	if err != nil {
		return err
	}

	*o = MosaicGlobalRestrictionEntryWrapperDTO(varMosaicGlobalRestrictionEntryWrapperDTO)

	return err
}

type NullableMosaicGlobalRestrictionEntryWrapperDTO struct {
	value *MosaicGlobalRestrictionEntryWrapperDTO
	isSet bool
}

func (v NullableMosaicGlobalRestrictionEntryWrapperDTO) Get() *MosaicGlobalRestrictionEntryWrapperDTO {
	return v.value
}

func (v *NullableMosaicGlobalRestrictionEntryWrapperDTO) Set(val *MosaicGlobalRestrictionEntryWrapperDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableMosaicGlobalRestrictionEntryWrapperDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableMosaicGlobalRestrictionEntryWrapperDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMosaicGlobalRestrictionEntryWrapperDTO(val *MosaicGlobalRestrictionEntryWrapperDTO) *NullableMosaicGlobalRestrictionEntryWrapperDTO {
	return &NullableMosaicGlobalRestrictionEntryWrapperDTO{value: val, isSet: true}
}

func (v NullableMosaicGlobalRestrictionEntryWrapperDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMosaicGlobalRestrictionEntryWrapperDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


