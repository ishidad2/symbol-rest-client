/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParentPublicKeySignaturePair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParentPublicKeySignaturePair{}

// ParentPublicKeySignaturePair struct for ParentPublicKeySignaturePair
type ParentPublicKeySignaturePair struct {
	// Public key.
	ParentPublicKey string `json:"parentPublicKey"`
	// Entity's signature generated by the signer.
	Signature string `json:"signature"`
}

type _ParentPublicKeySignaturePair ParentPublicKeySignaturePair

// NewParentPublicKeySignaturePair instantiates a new ParentPublicKeySignaturePair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentPublicKeySignaturePair(parentPublicKey string, signature string) *ParentPublicKeySignaturePair {
	this := ParentPublicKeySignaturePair{}
	this.ParentPublicKey = parentPublicKey
	this.Signature = signature
	return &this
}

// NewParentPublicKeySignaturePairWithDefaults instantiates a new ParentPublicKeySignaturePair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentPublicKeySignaturePairWithDefaults() *ParentPublicKeySignaturePair {
	this := ParentPublicKeySignaturePair{}
	return &this
}

// GetParentPublicKey returns the ParentPublicKey field value
func (o *ParentPublicKeySignaturePair) GetParentPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentPublicKey
}

// GetParentPublicKeyOk returns a tuple with the ParentPublicKey field value
// and a boolean to check if the value has been set.
func (o *ParentPublicKeySignaturePair) GetParentPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentPublicKey, true
}

// SetParentPublicKey sets field value
func (o *ParentPublicKeySignaturePair) SetParentPublicKey(v string) {
	o.ParentPublicKey = v
}

// GetSignature returns the Signature field value
func (o *ParentPublicKeySignaturePair) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *ParentPublicKeySignaturePair) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *ParentPublicKeySignaturePair) SetSignature(v string) {
	o.Signature = v
}

func (o ParentPublicKeySignaturePair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParentPublicKeySignaturePair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parentPublicKey"] = o.ParentPublicKey
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

func (o *ParentPublicKeySignaturePair) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"parentPublicKey",
		"signature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParentPublicKeySignaturePair := _ParentPublicKeySignaturePair{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParentPublicKeySignaturePair)

	if err != nil {
		return err
	}

	*o = ParentPublicKeySignaturePair(varParentPublicKeySignaturePair)

	return err
}

type NullableParentPublicKeySignaturePair struct {
	value *ParentPublicKeySignaturePair
	isSet bool
}

func (v NullableParentPublicKeySignaturePair) Get() *ParentPublicKeySignaturePair {
	return v.value
}

func (v *NullableParentPublicKeySignaturePair) Set(val *ParentPublicKeySignaturePair) {
	v.value = val
	v.isSet = true
}

func (v NullableParentPublicKeySignaturePair) IsSet() bool {
	return v.isSet
}

func (v *NullableParentPublicKeySignaturePair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentPublicKeySignaturePair(val *ParentPublicKeySignaturePair) *NullableParentPublicKeySignaturePair {
	return &NullableParentPublicKeySignaturePair{value: val, isSet: true}
}

func (v NullableParentPublicKeySignaturePair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentPublicKeySignaturePair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


