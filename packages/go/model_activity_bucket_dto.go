/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ActivityBucketDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityBucketDTO{}

// ActivityBucketDTO Supplementary data stored for importance recalculation. At each importance recalculation, existing buckets are shifted, the working bucket is finalized and a new working bucket is created. Each bucket influences at most five importance recalculations. 
type ActivityBucketDTO struct {
	// Height of the blockchain.
	StartHeight string `json:"startHeight"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	TotalFeesPaid string `json:"totalFeesPaid"`
	// A number that allows uint 32 values.
	BeneficiaryCount int64 `json:"beneficiaryCount"`
	// Probability of an account to harvest the next block.
	RawScore string `json:"rawScore"`
}

type _ActivityBucketDTO ActivityBucketDTO

// NewActivityBucketDTO instantiates a new ActivityBucketDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityBucketDTO(startHeight string, totalFeesPaid string, beneficiaryCount int64, rawScore string) *ActivityBucketDTO {
	this := ActivityBucketDTO{}
	this.StartHeight = startHeight
	this.TotalFeesPaid = totalFeesPaid
	this.BeneficiaryCount = beneficiaryCount
	this.RawScore = rawScore
	return &this
}

// NewActivityBucketDTOWithDefaults instantiates a new ActivityBucketDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityBucketDTOWithDefaults() *ActivityBucketDTO {
	this := ActivityBucketDTO{}
	return &this
}

// GetStartHeight returns the StartHeight field value
func (o *ActivityBucketDTO) GetStartHeight() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartHeight
}

// GetStartHeightOk returns a tuple with the StartHeight field value
// and a boolean to check if the value has been set.
func (o *ActivityBucketDTO) GetStartHeightOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartHeight, true
}

// SetStartHeight sets field value
func (o *ActivityBucketDTO) SetStartHeight(v string) {
	o.StartHeight = v
}

// GetTotalFeesPaid returns the TotalFeesPaid field value
func (o *ActivityBucketDTO) GetTotalFeesPaid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalFeesPaid
}

// GetTotalFeesPaidOk returns a tuple with the TotalFeesPaid field value
// and a boolean to check if the value has been set.
func (o *ActivityBucketDTO) GetTotalFeesPaidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalFeesPaid, true
}

// SetTotalFeesPaid sets field value
func (o *ActivityBucketDTO) SetTotalFeesPaid(v string) {
	o.TotalFeesPaid = v
}

// GetBeneficiaryCount returns the BeneficiaryCount field value
func (o *ActivityBucketDTO) GetBeneficiaryCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BeneficiaryCount
}

// GetBeneficiaryCountOk returns a tuple with the BeneficiaryCount field value
// and a boolean to check if the value has been set.
func (o *ActivityBucketDTO) GetBeneficiaryCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BeneficiaryCount, true
}

// SetBeneficiaryCount sets field value
func (o *ActivityBucketDTO) SetBeneficiaryCount(v int64) {
	o.BeneficiaryCount = v
}

// GetRawScore returns the RawScore field value
func (o *ActivityBucketDTO) GetRawScore() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawScore
}

// GetRawScoreOk returns a tuple with the RawScore field value
// and a boolean to check if the value has been set.
func (o *ActivityBucketDTO) GetRawScoreOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawScore, true
}

// SetRawScore sets field value
func (o *ActivityBucketDTO) SetRawScore(v string) {
	o.RawScore = v
}

func (o ActivityBucketDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityBucketDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startHeight"] = o.StartHeight
	toSerialize["totalFeesPaid"] = o.TotalFeesPaid
	toSerialize["beneficiaryCount"] = o.BeneficiaryCount
	toSerialize["rawScore"] = o.RawScore
	return toSerialize, nil
}

func (o *ActivityBucketDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startHeight",
		"totalFeesPaid",
		"beneficiaryCount",
		"rawScore",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivityBucketDTO := _ActivityBucketDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivityBucketDTO)

	if err != nil {
		return err
	}

	*o = ActivityBucketDTO(varActivityBucketDTO)

	return err
}

type NullableActivityBucketDTO struct {
	value *ActivityBucketDTO
	isSet bool
}

func (v NullableActivityBucketDTO) Get() *ActivityBucketDTO {
	return v.value
}

func (v *NullableActivityBucketDTO) Set(val *ActivityBucketDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityBucketDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityBucketDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityBucketDTO(val *ActivityBucketDTO) *NullableActivityBucketDTO {
	return &NullableActivityBucketDTO{value: val, isSet: true}
}

func (v NullableActivityBucketDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityBucketDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


