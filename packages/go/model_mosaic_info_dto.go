/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MosaicInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MosaicInfoDTO{}

// MosaicInfoDTO struct for MosaicInfoDTO
type MosaicInfoDTO struct {
	// Internal resource identifier.
	Id string `json:"id"`
	Mosaic MosaicDTO `json:"mosaic"`
}

type _MosaicInfoDTO MosaicInfoDTO

// NewMosaicInfoDTO instantiates a new MosaicInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMosaicInfoDTO(id string, mosaic MosaicDTO) *MosaicInfoDTO {
	this := MosaicInfoDTO{}
	this.Id = id
	this.Mosaic = mosaic
	return &this
}

// NewMosaicInfoDTOWithDefaults instantiates a new MosaicInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMosaicInfoDTOWithDefaults() *MosaicInfoDTO {
	this := MosaicInfoDTO{}
	return &this
}

// GetId returns the Id field value
func (o *MosaicInfoDTO) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MosaicInfoDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MosaicInfoDTO) SetId(v string) {
	o.Id = v
}

// GetMosaic returns the Mosaic field value
func (o *MosaicInfoDTO) GetMosaic() MosaicDTO {
	if o == nil {
		var ret MosaicDTO
		return ret
	}

	return o.Mosaic
}

// GetMosaicOk returns a tuple with the Mosaic field value
// and a boolean to check if the value has been set.
func (o *MosaicInfoDTO) GetMosaicOk() (*MosaicDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mosaic, true
}

// SetMosaic sets field value
func (o *MosaicInfoDTO) SetMosaic(v MosaicDTO) {
	o.Mosaic = v
}

func (o MosaicInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MosaicInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["mosaic"] = o.Mosaic
	return toSerialize, nil
}

func (o *MosaicInfoDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"mosaic",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMosaicInfoDTO := _MosaicInfoDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMosaicInfoDTO)

	if err != nil {
		return err
	}

	*o = MosaicInfoDTO(varMosaicInfoDTO)

	return err
}

type NullableMosaicInfoDTO struct {
	value *MosaicInfoDTO
	isSet bool
}

func (v NullableMosaicInfoDTO) Get() *MosaicInfoDTO {
	return v.value
}

func (v *NullableMosaicInfoDTO) Set(val *MosaicInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableMosaicInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableMosaicInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMosaicInfoDTO(val *MosaicInfoDTO) *NullableMosaicInfoDTO {
	return &NullableMosaicInfoDTO{value: val, isSet: true}
}

func (v NullableMosaicInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMosaicInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


