/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HashLockEntryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HashLockEntryDTO{}

// HashLockEntryDTO struct for HashLockEntryDTO
type HashLockEntryDTO struct {
	// The version of the state
	Version int32 `json:"version"`
	// Address encoded using a 32-character set.
	OwnerAddress string `json:"ownerAddress"`
	// Mosaic identifier.
	MosaicId string `json:"mosaicId"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	Amount string `json:"amount"`
	// Height of the blockchain.
	EndHeight string `json:"endHeight"`
	Status LockStatus `json:"status"`
	Hash string `json:"hash"`
}

type _HashLockEntryDTO HashLockEntryDTO

// NewHashLockEntryDTO instantiates a new HashLockEntryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHashLockEntryDTO(version int32, ownerAddress string, mosaicId string, amount string, endHeight string, status LockStatus, hash string) *HashLockEntryDTO {
	this := HashLockEntryDTO{}
	this.Version = version
	this.OwnerAddress = ownerAddress
	this.MosaicId = mosaicId
	this.Amount = amount
	this.EndHeight = endHeight
	this.Status = status
	this.Hash = hash
	return &this
}

// NewHashLockEntryDTOWithDefaults instantiates a new HashLockEntryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHashLockEntryDTOWithDefaults() *HashLockEntryDTO {
	this := HashLockEntryDTO{}
	return &this
}

// GetVersion returns the Version field value
func (o *HashLockEntryDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *HashLockEntryDTO) SetVersion(v int32) {
	o.Version = v
}

// GetOwnerAddress returns the OwnerAddress field value
func (o *HashLockEntryDTO) GetOwnerAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerAddress
}

// GetOwnerAddressOk returns a tuple with the OwnerAddress field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetOwnerAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerAddress, true
}

// SetOwnerAddress sets field value
func (o *HashLockEntryDTO) SetOwnerAddress(v string) {
	o.OwnerAddress = v
}

// GetMosaicId returns the MosaicId field value
func (o *HashLockEntryDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *HashLockEntryDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetAmount returns the Amount field value
func (o *HashLockEntryDTO) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *HashLockEntryDTO) SetAmount(v string) {
	o.Amount = v
}

// GetEndHeight returns the EndHeight field value
func (o *HashLockEntryDTO) GetEndHeight() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndHeight
}

// GetEndHeightOk returns a tuple with the EndHeight field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetEndHeightOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndHeight, true
}

// SetEndHeight sets field value
func (o *HashLockEntryDTO) SetEndHeight(v string) {
	o.EndHeight = v
}

// GetStatus returns the Status field value
func (o *HashLockEntryDTO) GetStatus() LockStatus {
	if o == nil {
		var ret LockStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetStatusOk() (*LockStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *HashLockEntryDTO) SetStatus(v LockStatus) {
	o.Status = v
}

// GetHash returns the Hash field value
func (o *HashLockEntryDTO) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *HashLockEntryDTO) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *HashLockEntryDTO) SetHash(v string) {
	o.Hash = v
}

func (o HashLockEntryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HashLockEntryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["ownerAddress"] = o.OwnerAddress
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["amount"] = o.Amount
	toSerialize["endHeight"] = o.EndHeight
	toSerialize["status"] = o.Status
	toSerialize["hash"] = o.Hash
	return toSerialize, nil
}

func (o *HashLockEntryDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"ownerAddress",
		"mosaicId",
		"amount",
		"endHeight",
		"status",
		"hash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHashLockEntryDTO := _HashLockEntryDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHashLockEntryDTO)

	if err != nil {
		return err
	}

	*o = HashLockEntryDTO(varHashLockEntryDTO)

	return err
}

type NullableHashLockEntryDTO struct {
	value *HashLockEntryDTO
	isSet bool
}

func (v NullableHashLockEntryDTO) Get() *HashLockEntryDTO {
	return v.value
}

func (v *NullableHashLockEntryDTO) Set(val *HashLockEntryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableHashLockEntryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableHashLockEntryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHashLockEntryDTO(val *HashLockEntryDTO) *NullableHashLockEntryDTO {
	return &NullableHashLockEntryDTO{value: val, isSet: true}
}

func (v NullableHashLockEntryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHashLockEntryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


