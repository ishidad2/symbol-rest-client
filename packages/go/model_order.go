/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
)

// Order Indicates how to sort the results:  * ``asc`` - ascending * ``desc`` - descending 
type Order string

// List of Order
const (
	ASC Order = "asc"
	DESC Order = "desc"
)

// All allowed values of Order enum
var AllowedOrderEnumValues = []Order{
	"asc",
	"desc",
}

func (v *Order) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Order(value)
	for _, existing := range AllowedOrderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Order", value)
}

// NewOrderFromValue returns a pointer to a valid Order
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderFromValue(v string) (*Order, error) {
	ev := Order(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Order: valid values are %v", v, AllowedOrderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Order) IsValid() bool {
	for _, existing := range AllowedOrderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Order value
func (v Order) Ptr() *Order {
	return &v
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

