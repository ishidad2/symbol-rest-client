/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecretLockEntryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretLockEntryDTO{}

// SecretLockEntryDTO struct for SecretLockEntryDTO
type SecretLockEntryDTO struct {
	// The version of the state
	Version int32 `json:"version"`
	// Address encoded using a 32-character set.
	OwnerAddress string `json:"ownerAddress"`
	// Mosaic identifier.
	MosaicId string `json:"mosaicId"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	Amount string `json:"amount"`
	// Height of the blockchain.
	EndHeight string `json:"endHeight"`
	Status LockStatus `json:"status"`
	HashAlgorithm LockHashAlgorithmEnum `json:"hashAlgorithm"`
	// Secret.
	Secret string `json:"secret"`
	// Address encoded using a 32-character set.
	RecipientAddress string `json:"recipientAddress"`
	CompositeHash string `json:"compositeHash"`
}

type _SecretLockEntryDTO SecretLockEntryDTO

// NewSecretLockEntryDTO instantiates a new SecretLockEntryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretLockEntryDTO(version int32, ownerAddress string, mosaicId string, amount string, endHeight string, status LockStatus, hashAlgorithm LockHashAlgorithmEnum, secret string, recipientAddress string, compositeHash string) *SecretLockEntryDTO {
	this := SecretLockEntryDTO{}
	this.Version = version
	this.OwnerAddress = ownerAddress
	this.MosaicId = mosaicId
	this.Amount = amount
	this.EndHeight = endHeight
	this.Status = status
	this.HashAlgorithm = hashAlgorithm
	this.Secret = secret
	this.RecipientAddress = recipientAddress
	this.CompositeHash = compositeHash
	return &this
}

// NewSecretLockEntryDTOWithDefaults instantiates a new SecretLockEntryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretLockEntryDTOWithDefaults() *SecretLockEntryDTO {
	this := SecretLockEntryDTO{}
	return &this
}

// GetVersion returns the Version field value
func (o *SecretLockEntryDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *SecretLockEntryDTO) SetVersion(v int32) {
	o.Version = v
}

// GetOwnerAddress returns the OwnerAddress field value
func (o *SecretLockEntryDTO) GetOwnerAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerAddress
}

// GetOwnerAddressOk returns a tuple with the OwnerAddress field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetOwnerAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerAddress, true
}

// SetOwnerAddress sets field value
func (o *SecretLockEntryDTO) SetOwnerAddress(v string) {
	o.OwnerAddress = v
}

// GetMosaicId returns the MosaicId field value
func (o *SecretLockEntryDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *SecretLockEntryDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetAmount returns the Amount field value
func (o *SecretLockEntryDTO) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SecretLockEntryDTO) SetAmount(v string) {
	o.Amount = v
}

// GetEndHeight returns the EndHeight field value
func (o *SecretLockEntryDTO) GetEndHeight() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndHeight
}

// GetEndHeightOk returns a tuple with the EndHeight field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetEndHeightOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndHeight, true
}

// SetEndHeight sets field value
func (o *SecretLockEntryDTO) SetEndHeight(v string) {
	o.EndHeight = v
}

// GetStatus returns the Status field value
func (o *SecretLockEntryDTO) GetStatus() LockStatus {
	if o == nil {
		var ret LockStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetStatusOk() (*LockStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SecretLockEntryDTO) SetStatus(v LockStatus) {
	o.Status = v
}

// GetHashAlgorithm returns the HashAlgorithm field value
func (o *SecretLockEntryDTO) GetHashAlgorithm() LockHashAlgorithmEnum {
	if o == nil {
		var ret LockHashAlgorithmEnum
		return ret
	}

	return o.HashAlgorithm
}

// GetHashAlgorithmOk returns a tuple with the HashAlgorithm field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetHashAlgorithmOk() (*LockHashAlgorithmEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HashAlgorithm, true
}

// SetHashAlgorithm sets field value
func (o *SecretLockEntryDTO) SetHashAlgorithm(v LockHashAlgorithmEnum) {
	o.HashAlgorithm = v
}

// GetSecret returns the Secret field value
func (o *SecretLockEntryDTO) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *SecretLockEntryDTO) SetSecret(v string) {
	o.Secret = v
}

// GetRecipientAddress returns the RecipientAddress field value
func (o *SecretLockEntryDTO) GetRecipientAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetRecipientAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAddress, true
}

// SetRecipientAddress sets field value
func (o *SecretLockEntryDTO) SetRecipientAddress(v string) {
	o.RecipientAddress = v
}

// GetCompositeHash returns the CompositeHash field value
func (o *SecretLockEntryDTO) GetCompositeHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompositeHash
}

// GetCompositeHashOk returns a tuple with the CompositeHash field value
// and a boolean to check if the value has been set.
func (o *SecretLockEntryDTO) GetCompositeHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompositeHash, true
}

// SetCompositeHash sets field value
func (o *SecretLockEntryDTO) SetCompositeHash(v string) {
	o.CompositeHash = v
}

func (o SecretLockEntryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretLockEntryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["ownerAddress"] = o.OwnerAddress
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["amount"] = o.Amount
	toSerialize["endHeight"] = o.EndHeight
	toSerialize["status"] = o.Status
	toSerialize["hashAlgorithm"] = o.HashAlgorithm
	toSerialize["secret"] = o.Secret
	toSerialize["recipientAddress"] = o.RecipientAddress
	toSerialize["compositeHash"] = o.CompositeHash
	return toSerialize, nil
}

func (o *SecretLockEntryDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"ownerAddress",
		"mosaicId",
		"amount",
		"endHeight",
		"status",
		"hashAlgorithm",
		"secret",
		"recipientAddress",
		"compositeHash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecretLockEntryDTO := _SecretLockEntryDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecretLockEntryDTO)

	if err != nil {
		return err
	}

	*o = SecretLockEntryDTO(varSecretLockEntryDTO)

	return err
}

type NullableSecretLockEntryDTO struct {
	value *SecretLockEntryDTO
	isSet bool
}

func (v NullableSecretLockEntryDTO) Get() *SecretLockEntryDTO {
	return v.value
}

func (v *NullableSecretLockEntryDTO) Set(val *SecretLockEntryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretLockEntryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretLockEntryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretLockEntryDTO(val *SecretLockEntryDTO) *NullableSecretLockEntryDTO {
	return &NullableSecretLockEntryDTO{value: val, isSet: true}
}

func (v NullableSecretLockEntryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretLockEntryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


