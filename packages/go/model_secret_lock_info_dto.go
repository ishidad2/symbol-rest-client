/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecretLockInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretLockInfoDTO{}

// SecretLockInfoDTO struct for SecretLockInfoDTO
type SecretLockInfoDTO struct {
	Id string `json:"id"`
	Lock SecretLockEntryDTO `json:"lock"`
}

type _SecretLockInfoDTO SecretLockInfoDTO

// NewSecretLockInfoDTO instantiates a new SecretLockInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretLockInfoDTO(id string, lock SecretLockEntryDTO) *SecretLockInfoDTO {
	this := SecretLockInfoDTO{}
	this.Id = id
	this.Lock = lock
	return &this
}

// NewSecretLockInfoDTOWithDefaults instantiates a new SecretLockInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretLockInfoDTOWithDefaults() *SecretLockInfoDTO {
	this := SecretLockInfoDTO{}
	return &this
}

// GetId returns the Id field value
func (o *SecretLockInfoDTO) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecretLockInfoDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecretLockInfoDTO) SetId(v string) {
	o.Id = v
}

// GetLock returns the Lock field value
func (o *SecretLockInfoDTO) GetLock() SecretLockEntryDTO {
	if o == nil {
		var ret SecretLockEntryDTO
		return ret
	}

	return o.Lock
}

// GetLockOk returns a tuple with the Lock field value
// and a boolean to check if the value has been set.
func (o *SecretLockInfoDTO) GetLockOk() (*SecretLockEntryDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lock, true
}

// SetLock sets field value
func (o *SecretLockInfoDTO) SetLock(v SecretLockEntryDTO) {
	o.Lock = v
}

func (o SecretLockInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretLockInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["lock"] = o.Lock
	return toSerialize, nil
}

func (o *SecretLockInfoDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"lock",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecretLockInfoDTO := _SecretLockInfoDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecretLockInfoDTO)

	if err != nil {
		return err
	}

	*o = SecretLockInfoDTO(varSecretLockInfoDTO)

	return err
}

type NullableSecretLockInfoDTO struct {
	value *SecretLockInfoDTO
	isSet bool
}

func (v NullableSecretLockInfoDTO) Get() *SecretLockInfoDTO {
	return v.value
}

func (v *NullableSecretLockInfoDTO) Set(val *SecretLockInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretLockInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretLockInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretLockInfoDTO(val *SecretLockInfoDTO) *NullableSecretLockInfoDTO {
	return &NullableSecretLockInfoDTO{value: val, isSet: true}
}

func (v NullableSecretLockInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretLockInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


