/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockDTO{}

// BlockDTO struct for BlockDTO
type BlockDTO struct {
	// A number that allows uint 32 values.
	Size int64 `json:"size"`
	// Entity's signature generated by the signer.
	Signature string `json:"signature"`
	// Public key.
	SignerPublicKey string `json:"signerPublicKey"`
	// Entity version.
	Version int32 `json:"version"`
	Network NetworkTypeEnum `json:"network"`
	Type int32 `json:"type"`
	// Height of the blockchain.
	Height string `json:"height"`
	// Number of milliseconds elapsed since the creation of the nemesis block. This value can be converted to epoch time by adding the network's 'epochAdjustment'.
	Timestamp string `json:"timestamp"`
	// Determines how hard is to harvest a new block, based on previous blocks.
	Difficulty string `json:"difficulty"`
	// 32-bytes VRF proof gamma.
	ProofGamma string `json:"proofGamma"`
	// 16-bytes VRF proof verification hash.
	ProofVerificationHash string `json:"proofVerificationHash"`
	// 32-bytes VRF proof scalar.
	ProofScalar string `json:"proofScalar"`
	PreviousBlockHash string `json:"previousBlockHash"`
	TransactionsHash string `json:"transactionsHash"`
	ReceiptsHash string `json:"receiptsHash"`
	StateHash string `json:"stateHash"`
	// Address encoded using a 32-character set.
	BeneficiaryAddress string `json:"beneficiaryAddress"`
	// Fee multiplier applied to transactions contained in block.
	FeeMultiplier int64 `json:"feeMultiplier"`
}

type _BlockDTO BlockDTO

// NewBlockDTO instantiates a new BlockDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockDTO(size int64, signature string, signerPublicKey string, version int32, network NetworkTypeEnum, type_ int32, height string, timestamp string, difficulty string, proofGamma string, proofVerificationHash string, proofScalar string, previousBlockHash string, transactionsHash string, receiptsHash string, stateHash string, beneficiaryAddress string, feeMultiplier int64) *BlockDTO {
	this := BlockDTO{}
	this.Size = size
	this.Signature = signature
	this.SignerPublicKey = signerPublicKey
	this.Version = version
	this.Network = network
	this.Type = type_
	this.Height = height
	this.Timestamp = timestamp
	this.Difficulty = difficulty
	this.ProofGamma = proofGamma
	this.ProofVerificationHash = proofVerificationHash
	this.ProofScalar = proofScalar
	this.PreviousBlockHash = previousBlockHash
	this.TransactionsHash = transactionsHash
	this.ReceiptsHash = receiptsHash
	this.StateHash = stateHash
	this.BeneficiaryAddress = beneficiaryAddress
	this.FeeMultiplier = feeMultiplier
	return &this
}

// NewBlockDTOWithDefaults instantiates a new BlockDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockDTOWithDefaults() *BlockDTO {
	this := BlockDTO{}
	return &this
}

// GetSize returns the Size field value
func (o *BlockDTO) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *BlockDTO) SetSize(v int64) {
	o.Size = v
}

// GetSignature returns the Signature field value
func (o *BlockDTO) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *BlockDTO) SetSignature(v string) {
	o.Signature = v
}

// GetSignerPublicKey returns the SignerPublicKey field value
func (o *BlockDTO) GetSignerPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerPublicKey
}

// GetSignerPublicKeyOk returns a tuple with the SignerPublicKey field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetSignerPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerPublicKey, true
}

// SetSignerPublicKey sets field value
func (o *BlockDTO) SetSignerPublicKey(v string) {
	o.SignerPublicKey = v
}

// GetVersion returns the Version field value
func (o *BlockDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *BlockDTO) SetVersion(v int32) {
	o.Version = v
}

// GetNetwork returns the Network field value
func (o *BlockDTO) GetNetwork() NetworkTypeEnum {
	if o == nil {
		var ret NetworkTypeEnum
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetNetworkOk() (*NetworkTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *BlockDTO) SetNetwork(v NetworkTypeEnum) {
	o.Network = v
}

// GetType returns the Type field value
func (o *BlockDTO) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BlockDTO) SetType(v int32) {
	o.Type = v
}

// GetHeight returns the Height field value
func (o *BlockDTO) GetHeight() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetHeightOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *BlockDTO) SetHeight(v string) {
	o.Height = v
}

// GetTimestamp returns the Timestamp field value
func (o *BlockDTO) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *BlockDTO) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetDifficulty returns the Difficulty field value
func (o *BlockDTO) GetDifficulty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Difficulty
}

// GetDifficultyOk returns a tuple with the Difficulty field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetDifficultyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Difficulty, true
}

// SetDifficulty sets field value
func (o *BlockDTO) SetDifficulty(v string) {
	o.Difficulty = v
}

// GetProofGamma returns the ProofGamma field value
func (o *BlockDTO) GetProofGamma() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProofGamma
}

// GetProofGammaOk returns a tuple with the ProofGamma field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetProofGammaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProofGamma, true
}

// SetProofGamma sets field value
func (o *BlockDTO) SetProofGamma(v string) {
	o.ProofGamma = v
}

// GetProofVerificationHash returns the ProofVerificationHash field value
func (o *BlockDTO) GetProofVerificationHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProofVerificationHash
}

// GetProofVerificationHashOk returns a tuple with the ProofVerificationHash field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetProofVerificationHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProofVerificationHash, true
}

// SetProofVerificationHash sets field value
func (o *BlockDTO) SetProofVerificationHash(v string) {
	o.ProofVerificationHash = v
}

// GetProofScalar returns the ProofScalar field value
func (o *BlockDTO) GetProofScalar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProofScalar
}

// GetProofScalarOk returns a tuple with the ProofScalar field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetProofScalarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProofScalar, true
}

// SetProofScalar sets field value
func (o *BlockDTO) SetProofScalar(v string) {
	o.ProofScalar = v
}

// GetPreviousBlockHash returns the PreviousBlockHash field value
func (o *BlockDTO) GetPreviousBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviousBlockHash
}

// GetPreviousBlockHashOk returns a tuple with the PreviousBlockHash field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetPreviousBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousBlockHash, true
}

// SetPreviousBlockHash sets field value
func (o *BlockDTO) SetPreviousBlockHash(v string) {
	o.PreviousBlockHash = v
}

// GetTransactionsHash returns the TransactionsHash field value
func (o *BlockDTO) GetTransactionsHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionsHash
}

// GetTransactionsHashOk returns a tuple with the TransactionsHash field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetTransactionsHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionsHash, true
}

// SetTransactionsHash sets field value
func (o *BlockDTO) SetTransactionsHash(v string) {
	o.TransactionsHash = v
}

// GetReceiptsHash returns the ReceiptsHash field value
func (o *BlockDTO) GetReceiptsHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiptsHash
}

// GetReceiptsHashOk returns a tuple with the ReceiptsHash field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetReceiptsHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiptsHash, true
}

// SetReceiptsHash sets field value
func (o *BlockDTO) SetReceiptsHash(v string) {
	o.ReceiptsHash = v
}

// GetStateHash returns the StateHash field value
func (o *BlockDTO) GetStateHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateHash
}

// GetStateHashOk returns a tuple with the StateHash field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetStateHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateHash, true
}

// SetStateHash sets field value
func (o *BlockDTO) SetStateHash(v string) {
	o.StateHash = v
}

// GetBeneficiaryAddress returns the BeneficiaryAddress field value
func (o *BlockDTO) GetBeneficiaryAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeneficiaryAddress
}

// GetBeneficiaryAddressOk returns a tuple with the BeneficiaryAddress field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetBeneficiaryAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BeneficiaryAddress, true
}

// SetBeneficiaryAddress sets field value
func (o *BlockDTO) SetBeneficiaryAddress(v string) {
	o.BeneficiaryAddress = v
}

// GetFeeMultiplier returns the FeeMultiplier field value
func (o *BlockDTO) GetFeeMultiplier() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FeeMultiplier
}

// GetFeeMultiplierOk returns a tuple with the FeeMultiplier field value
// and a boolean to check if the value has been set.
func (o *BlockDTO) GetFeeMultiplierOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeMultiplier, true
}

// SetFeeMultiplier sets field value
func (o *BlockDTO) SetFeeMultiplier(v int64) {
	o.FeeMultiplier = v
}

func (o BlockDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	toSerialize["signature"] = o.Signature
	toSerialize["signerPublicKey"] = o.SignerPublicKey
	toSerialize["version"] = o.Version
	toSerialize["network"] = o.Network
	toSerialize["type"] = o.Type
	toSerialize["height"] = o.Height
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["difficulty"] = o.Difficulty
	toSerialize["proofGamma"] = o.ProofGamma
	toSerialize["proofVerificationHash"] = o.ProofVerificationHash
	toSerialize["proofScalar"] = o.ProofScalar
	toSerialize["previousBlockHash"] = o.PreviousBlockHash
	toSerialize["transactionsHash"] = o.TransactionsHash
	toSerialize["receiptsHash"] = o.ReceiptsHash
	toSerialize["stateHash"] = o.StateHash
	toSerialize["beneficiaryAddress"] = o.BeneficiaryAddress
	toSerialize["feeMultiplier"] = o.FeeMultiplier
	return toSerialize, nil
}

func (o *BlockDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"size",
		"signature",
		"signerPublicKey",
		"version",
		"network",
		"type",
		"height",
		"timestamp",
		"difficulty",
		"proofGamma",
		"proofVerificationHash",
		"proofScalar",
		"previousBlockHash",
		"transactionsHash",
		"receiptsHash",
		"stateHash",
		"beneficiaryAddress",
		"feeMultiplier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockDTO := _BlockDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockDTO)

	if err != nil {
		return err
	}

	*o = BlockDTO(varBlockDTO)

	return err
}

type NullableBlockDTO struct {
	value *BlockDTO
	isSet bool
}

func (v NullableBlockDTO) Get() *BlockDTO {
	return v.value
}

func (v *NullableBlockDTO) Set(val *BlockDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockDTO(val *BlockDTO) *NullableBlockDTO {
	return &NullableBlockDTO{value: val, isSet: true}
}

func (v NullableBlockDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


