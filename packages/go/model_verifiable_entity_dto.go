/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifiableEntityDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifiableEntityDTO{}

// VerifiableEntityDTO struct for VerifiableEntityDTO
type VerifiableEntityDTO struct {
	// Entity's signature generated by the signer.
	Signature string `json:"signature"`
}

type _VerifiableEntityDTO VerifiableEntityDTO

// NewVerifiableEntityDTO instantiates a new VerifiableEntityDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifiableEntityDTO(signature string) *VerifiableEntityDTO {
	this := VerifiableEntityDTO{}
	this.Signature = signature
	return &this
}

// NewVerifiableEntityDTOWithDefaults instantiates a new VerifiableEntityDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifiableEntityDTOWithDefaults() *VerifiableEntityDTO {
	this := VerifiableEntityDTO{}
	return &this
}

// GetSignature returns the Signature field value
func (o *VerifiableEntityDTO) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *VerifiableEntityDTO) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *VerifiableEntityDTO) SetSignature(v string) {
	o.Signature = v
}

func (o VerifiableEntityDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifiableEntityDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

func (o *VerifiableEntityDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifiableEntityDTO := _VerifiableEntityDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifiableEntityDTO)

	if err != nil {
		return err
	}

	*o = VerifiableEntityDTO(varVerifiableEntityDTO)

	return err
}

type NullableVerifiableEntityDTO struct {
	value *VerifiableEntityDTO
	isSet bool
}

func (v NullableVerifiableEntityDTO) Get() *VerifiableEntityDTO {
	return v.value
}

func (v *NullableVerifiableEntityDTO) Set(val *VerifiableEntityDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifiableEntityDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifiableEntityDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifiableEntityDTO(val *VerifiableEntityDTO) *NullableVerifiableEntityDTO {
	return &NullableVerifiableEntityDTO{value: val, isSet: true}
}

func (v NullableVerifiableEntityDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifiableEntityDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


