/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the AccountIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountIds{}

// AccountIds struct for AccountIds
type AccountIds struct {
	// Array of public keys.
	PublicKeys []string `json:"publicKeys,omitempty"`
	// Array of addresses.
	Addresses []string `json:"addresses,omitempty"`
}

// NewAccountIds instantiates a new AccountIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIds() *AccountIds {
	this := AccountIds{}
	return &this
}

// NewAccountIdsWithDefaults instantiates a new AccountIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIdsWithDefaults() *AccountIds {
	this := AccountIds{}
	return &this
}

// GetPublicKeys returns the PublicKeys field value if set, zero value otherwise.
func (o *AccountIds) GetPublicKeys() []string {
	if o == nil || IsNil(o.PublicKeys) {
		var ret []string
		return ret
	}
	return o.PublicKeys
}

// GetPublicKeysOk returns a tuple with the PublicKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIds) GetPublicKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.PublicKeys) {
		return nil, false
	}
	return o.PublicKeys, true
}

// HasPublicKeys returns a boolean if a field has been set.
func (o *AccountIds) HasPublicKeys() bool {
	if o != nil && !IsNil(o.PublicKeys) {
		return true
	}

	return false
}

// SetPublicKeys gets a reference to the given []string and assigns it to the PublicKeys field.
func (o *AccountIds) SetPublicKeys(v []string) {
	o.PublicKeys = v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *AccountIds) GetAddresses() []string {
	if o == nil || IsNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIds) GetAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *AccountIds) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *AccountIds) SetAddresses(v []string) {
	o.Addresses = v
}

func (o AccountIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PublicKeys) {
		toSerialize["publicKeys"] = o.PublicKeys
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return toSerialize, nil
}

type NullableAccountIds struct {
	value *AccountIds
	isSet bool
}

func (v NullableAccountIds) Get() *AccountIds {
	return v.value
}

func (v *NullableAccountIds) Set(val *AccountIds) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIds) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIds(val *AccountIds) *NullableAccountIds {
	return &NullableAccountIds{value: val, isSet: true}
}

func (v NullableAccountIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


