/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransferTransactionBodyDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferTransactionBodyDTO{}

// TransferTransactionBodyDTO struct for TransferTransactionBodyDTO
type TransferTransactionBodyDTO struct {
	// Address expressed in Base32 format. If the bit 0 of byte 0 is not set (like in 0x90), then it is a regular address. Example: TAOXUJOTTW3W5XTBQMQEX3SQNA6MCUVGXLXR3TA.  Otherwise (e.g. 0x91) it represents a namespace id which starts at byte 1. Example: THBIMC3THGH5RUYAAAAAAAAAAAAAAAAAAAAAAAA 
	RecipientAddress string `json:"recipientAddress"`
	// Array of mosaics sent to the recipient. 
	Mosaics []UnresolvedMosaic `json:"mosaics"`
	// Transfer transaction message
	Message *string `json:"message,omitempty"`
}

type _TransferTransactionBodyDTO TransferTransactionBodyDTO

// NewTransferTransactionBodyDTO instantiates a new TransferTransactionBodyDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferTransactionBodyDTO(recipientAddress string, mosaics []UnresolvedMosaic) *TransferTransactionBodyDTO {
	this := TransferTransactionBodyDTO{}
	this.RecipientAddress = recipientAddress
	this.Mosaics = mosaics
	return &this
}

// NewTransferTransactionBodyDTOWithDefaults instantiates a new TransferTransactionBodyDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferTransactionBodyDTOWithDefaults() *TransferTransactionBodyDTO {
	this := TransferTransactionBodyDTO{}
	return &this
}

// GetRecipientAddress returns the RecipientAddress field value
func (o *TransferTransactionBodyDTO) GetRecipientAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value
// and a boolean to check if the value has been set.
func (o *TransferTransactionBodyDTO) GetRecipientAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAddress, true
}

// SetRecipientAddress sets field value
func (o *TransferTransactionBodyDTO) SetRecipientAddress(v string) {
	o.RecipientAddress = v
}

// GetMosaics returns the Mosaics field value
func (o *TransferTransactionBodyDTO) GetMosaics() []UnresolvedMosaic {
	if o == nil {
		var ret []UnresolvedMosaic
		return ret
	}

	return o.Mosaics
}

// GetMosaicsOk returns a tuple with the Mosaics field value
// and a boolean to check if the value has been set.
func (o *TransferTransactionBodyDTO) GetMosaicsOk() ([]UnresolvedMosaic, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mosaics, true
}

// SetMosaics sets field value
func (o *TransferTransactionBodyDTO) SetMosaics(v []UnresolvedMosaic) {
	o.Mosaics = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TransferTransactionBodyDTO) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferTransactionBodyDTO) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TransferTransactionBodyDTO) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TransferTransactionBodyDTO) SetMessage(v string) {
	o.Message = &v
}

func (o TransferTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferTransactionBodyDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recipientAddress"] = o.RecipientAddress
	toSerialize["mosaics"] = o.Mosaics
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

func (o *TransferTransactionBodyDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recipientAddress",
		"mosaics",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransferTransactionBodyDTO := _TransferTransactionBodyDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransferTransactionBodyDTO)

	if err != nil {
		return err
	}

	*o = TransferTransactionBodyDTO(varTransferTransactionBodyDTO)

	return err
}

type NullableTransferTransactionBodyDTO struct {
	value *TransferTransactionBodyDTO
	isSet bool
}

func (v NullableTransferTransactionBodyDTO) Get() *TransferTransactionBodyDTO {
	return v.value
}

func (v *NullableTransferTransactionBodyDTO) Set(val *TransferTransactionBodyDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferTransactionBodyDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferTransactionBodyDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferTransactionBodyDTO(val *TransferTransactionBodyDTO) *NullableTransferTransactionBodyDTO {
	return &NullableTransferTransactionBodyDTO{value: val, isSet: true}
}

func (v NullableTransferTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferTransactionBodyDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


