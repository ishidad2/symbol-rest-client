/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionStatusDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionStatusDTO{}

// TransactionStatusDTO struct for TransactionStatusDTO
type TransactionStatusDTO struct {
	Group TransactionGroupEnum `json:"group"`
	Code *TransactionStatusEnum `json:"code,omitempty"`
	Hash string `json:"hash"`
	// Duration expressed in number of blocks.
	Deadline string `json:"deadline"`
	// Height of the blockchain.
	Height *string `json:"height,omitempty"`
}

type _TransactionStatusDTO TransactionStatusDTO

// NewTransactionStatusDTO instantiates a new TransactionStatusDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionStatusDTO(group TransactionGroupEnum, hash string, deadline string) *TransactionStatusDTO {
	this := TransactionStatusDTO{}
	this.Group = group
	this.Hash = hash
	this.Deadline = deadline
	return &this
}

// NewTransactionStatusDTOWithDefaults instantiates a new TransactionStatusDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionStatusDTOWithDefaults() *TransactionStatusDTO {
	this := TransactionStatusDTO{}
	return &this
}

// GetGroup returns the Group field value
func (o *TransactionStatusDTO) GetGroup() TransactionGroupEnum {
	if o == nil {
		var ret TransactionGroupEnum
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *TransactionStatusDTO) GetGroupOk() (*TransactionGroupEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *TransactionStatusDTO) SetGroup(v TransactionGroupEnum) {
	o.Group = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TransactionStatusDTO) GetCode() TransactionStatusEnum {
	if o == nil || IsNil(o.Code) {
		var ret TransactionStatusEnum
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionStatusDTO) GetCodeOk() (*TransactionStatusEnum, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TransactionStatusDTO) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given TransactionStatusEnum and assigns it to the Code field.
func (o *TransactionStatusDTO) SetCode(v TransactionStatusEnum) {
	o.Code = &v
}

// GetHash returns the Hash field value
func (o *TransactionStatusDTO) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *TransactionStatusDTO) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *TransactionStatusDTO) SetHash(v string) {
	o.Hash = v
}

// GetDeadline returns the Deadline field value
func (o *TransactionStatusDTO) GetDeadline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value
// and a boolean to check if the value has been set.
func (o *TransactionStatusDTO) GetDeadlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deadline, true
}

// SetDeadline sets field value
func (o *TransactionStatusDTO) SetDeadline(v string) {
	o.Deadline = v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *TransactionStatusDTO) GetHeight() string {
	if o == nil || IsNil(o.Height) {
		var ret string
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionStatusDTO) GetHeightOk() (*string, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *TransactionStatusDTO) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given string and assigns it to the Height field.
func (o *TransactionStatusDTO) SetHeight(v string) {
	o.Height = &v
}

func (o TransactionStatusDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionStatusDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["group"] = o.Group
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	toSerialize["hash"] = o.Hash
	toSerialize["deadline"] = o.Deadline
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	return toSerialize, nil
}

func (o *TransactionStatusDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"group",
		"hash",
		"deadline",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionStatusDTO := _TransactionStatusDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionStatusDTO)

	if err != nil {
		return err
	}

	*o = TransactionStatusDTO(varTransactionStatusDTO)

	return err
}

type NullableTransactionStatusDTO struct {
	value *TransactionStatusDTO
	isSet bool
}

func (v NullableTransactionStatusDTO) Get() *TransactionStatusDTO {
	return v.value
}

func (v *NullableTransactionStatusDTO) Set(val *TransactionStatusDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionStatusDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionStatusDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionStatusDTO(val *TransactionStatusDTO) *NullableTransactionStatusDTO {
	return &NullableTransactionStatusDTO{value: val, isSet: true}
}

func (v NullableTransactionStatusDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionStatusDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


