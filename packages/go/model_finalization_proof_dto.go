/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FinalizationProofDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinalizationProofDTO{}

// FinalizationProofDTO struct for FinalizationProofDTO
type FinalizationProofDTO struct {
	Version int32 `json:"version"`
	// Finalization Epoch
	FinalizationEpoch int64 `json:"finalizationEpoch"`
	// Finalization point
	FinalizationPoint int64 `json:"finalizationPoint"`
	// Height of the blockchain.
	Height string `json:"height"`
	Hash string `json:"hash"`
	MessageGroups []MessageGroup `json:"messageGroups"`
}

type _FinalizationProofDTO FinalizationProofDTO

// NewFinalizationProofDTO instantiates a new FinalizationProofDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinalizationProofDTO(version int32, finalizationEpoch int64, finalizationPoint int64, height string, hash string, messageGroups []MessageGroup) *FinalizationProofDTO {
	this := FinalizationProofDTO{}
	this.Version = version
	this.FinalizationEpoch = finalizationEpoch
	this.FinalizationPoint = finalizationPoint
	this.Height = height
	this.Hash = hash
	this.MessageGroups = messageGroups
	return &this
}

// NewFinalizationProofDTOWithDefaults instantiates a new FinalizationProofDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinalizationProofDTOWithDefaults() *FinalizationProofDTO {
	this := FinalizationProofDTO{}
	return &this
}

// GetVersion returns the Version field value
func (o *FinalizationProofDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *FinalizationProofDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *FinalizationProofDTO) SetVersion(v int32) {
	o.Version = v
}

// GetFinalizationEpoch returns the FinalizationEpoch field value
func (o *FinalizationProofDTO) GetFinalizationEpoch() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FinalizationEpoch
}

// GetFinalizationEpochOk returns a tuple with the FinalizationEpoch field value
// and a boolean to check if the value has been set.
func (o *FinalizationProofDTO) GetFinalizationEpochOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalizationEpoch, true
}

// SetFinalizationEpoch sets field value
func (o *FinalizationProofDTO) SetFinalizationEpoch(v int64) {
	o.FinalizationEpoch = v
}

// GetFinalizationPoint returns the FinalizationPoint field value
func (o *FinalizationProofDTO) GetFinalizationPoint() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FinalizationPoint
}

// GetFinalizationPointOk returns a tuple with the FinalizationPoint field value
// and a boolean to check if the value has been set.
func (o *FinalizationProofDTO) GetFinalizationPointOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalizationPoint, true
}

// SetFinalizationPoint sets field value
func (o *FinalizationProofDTO) SetFinalizationPoint(v int64) {
	o.FinalizationPoint = v
}

// GetHeight returns the Height field value
func (o *FinalizationProofDTO) GetHeight() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *FinalizationProofDTO) GetHeightOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *FinalizationProofDTO) SetHeight(v string) {
	o.Height = v
}

// GetHash returns the Hash field value
func (o *FinalizationProofDTO) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *FinalizationProofDTO) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *FinalizationProofDTO) SetHash(v string) {
	o.Hash = v
}

// GetMessageGroups returns the MessageGroups field value
func (o *FinalizationProofDTO) GetMessageGroups() []MessageGroup {
	if o == nil {
		var ret []MessageGroup
		return ret
	}

	return o.MessageGroups
}

// GetMessageGroupsOk returns a tuple with the MessageGroups field value
// and a boolean to check if the value has been set.
func (o *FinalizationProofDTO) GetMessageGroupsOk() ([]MessageGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageGroups, true
}

// SetMessageGroups sets field value
func (o *FinalizationProofDTO) SetMessageGroups(v []MessageGroup) {
	o.MessageGroups = v
}

func (o FinalizationProofDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinalizationProofDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["finalizationEpoch"] = o.FinalizationEpoch
	toSerialize["finalizationPoint"] = o.FinalizationPoint
	toSerialize["height"] = o.Height
	toSerialize["hash"] = o.Hash
	toSerialize["messageGroups"] = o.MessageGroups
	return toSerialize, nil
}

func (o *FinalizationProofDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"finalizationEpoch",
		"finalizationPoint",
		"height",
		"hash",
		"messageGroups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFinalizationProofDTO := _FinalizationProofDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFinalizationProofDTO)

	if err != nil {
		return err
	}

	*o = FinalizationProofDTO(varFinalizationProofDTO)

	return err
}

type NullableFinalizationProofDTO struct {
	value *FinalizationProofDTO
	isSet bool
}

func (v NullableFinalizationProofDTO) Get() *FinalizationProofDTO {
	return v.value
}

func (v *NullableFinalizationProofDTO) Set(val *FinalizationProofDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFinalizationProofDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFinalizationProofDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinalizationProofDTO(val *FinalizationProofDTO) *NullableFinalizationProofDTO {
	return &NullableFinalizationProofDTO{value: val, isSet: true}
}

func (v NullableFinalizationProofDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinalizationProofDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


