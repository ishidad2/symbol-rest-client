/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HashLockTransactionBodyDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HashLockTransactionBodyDTO{}

// HashLockTransactionBodyDTO struct for HashLockTransactionBodyDTO
type HashLockTransactionBodyDTO struct {
	// Mosaic identifier. If the most significant bit of byte 0 is set, a namespaceId (alias) is used instead of the real mosaic identifier. 
	MosaicId string `json:"mosaicId"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	Amount string `json:"amount"`
	// Duration expressed in number of blocks.
	Duration string `json:"duration"`
	Hash string `json:"hash"`
}

type _HashLockTransactionBodyDTO HashLockTransactionBodyDTO

// NewHashLockTransactionBodyDTO instantiates a new HashLockTransactionBodyDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHashLockTransactionBodyDTO(mosaicId string, amount string, duration string, hash string) *HashLockTransactionBodyDTO {
	this := HashLockTransactionBodyDTO{}
	this.MosaicId = mosaicId
	this.Amount = amount
	this.Duration = duration
	this.Hash = hash
	return &this
}

// NewHashLockTransactionBodyDTOWithDefaults instantiates a new HashLockTransactionBodyDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHashLockTransactionBodyDTOWithDefaults() *HashLockTransactionBodyDTO {
	this := HashLockTransactionBodyDTO{}
	return &this
}

// GetMosaicId returns the MosaicId field value
func (o *HashLockTransactionBodyDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *HashLockTransactionBodyDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *HashLockTransactionBodyDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetAmount returns the Amount field value
func (o *HashLockTransactionBodyDTO) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *HashLockTransactionBodyDTO) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *HashLockTransactionBodyDTO) SetAmount(v string) {
	o.Amount = v
}

// GetDuration returns the Duration field value
func (o *HashLockTransactionBodyDTO) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *HashLockTransactionBodyDTO) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *HashLockTransactionBodyDTO) SetDuration(v string) {
	o.Duration = v
}

// GetHash returns the Hash field value
func (o *HashLockTransactionBodyDTO) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *HashLockTransactionBodyDTO) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *HashLockTransactionBodyDTO) SetHash(v string) {
	o.Hash = v
}

func (o HashLockTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HashLockTransactionBodyDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["amount"] = o.Amount
	toSerialize["duration"] = o.Duration
	toSerialize["hash"] = o.Hash
	return toSerialize, nil
}

func (o *HashLockTransactionBodyDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mosaicId",
		"amount",
		"duration",
		"hash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHashLockTransactionBodyDTO := _HashLockTransactionBodyDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHashLockTransactionBodyDTO)

	if err != nil {
		return err
	}

	*o = HashLockTransactionBodyDTO(varHashLockTransactionBodyDTO)

	return err
}

type NullableHashLockTransactionBodyDTO struct {
	value *HashLockTransactionBodyDTO
	isSet bool
}

func (v NullableHashLockTransactionBodyDTO) Get() *HashLockTransactionBodyDTO {
	return v.value
}

func (v *NullableHashLockTransactionBodyDTO) Set(val *HashLockTransactionBodyDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableHashLockTransactionBodyDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableHashLockTransactionBodyDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHashLockTransactionBodyDTO(val *HashLockTransactionBodyDTO) *NullableHashLockTransactionBodyDTO {
	return &NullableHashLockTransactionBodyDTO{value: val, isSet: true}
}

func (v NullableHashLockTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHashLockTransactionBodyDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


