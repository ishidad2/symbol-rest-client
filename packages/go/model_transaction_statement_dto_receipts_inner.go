/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
	"bytes"
)

// TransactionStatementDTOReceiptsInner struct for TransactionStatementDTOReceiptsInner
type TransactionStatementDTOReceiptsInner struct {
	BalanceChangeReceiptDTO *BalanceChangeReceiptDTO
	BalanceTransferReceiptDTO *BalanceTransferReceiptDTO
	InflationReceiptDTO *InflationReceiptDTO
	MosaicExpiryReceiptDTO *MosaicExpiryReceiptDTO
	NamespaceExpiryReceiptDTO *NamespaceExpiryReceiptDTO
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *TransactionStatementDTOReceiptsInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into BalanceChangeReceiptDTO
	err = json.Unmarshal(data, &dst.BalanceChangeReceiptDTO);
	if err == nil {
		jsonBalanceChangeReceiptDTO, _ := json.Marshal(dst.BalanceChangeReceiptDTO)
		if string(jsonBalanceChangeReceiptDTO) == "{}" { // empty struct
			dst.BalanceChangeReceiptDTO = nil
		} else {
			return nil // data stored in dst.BalanceChangeReceiptDTO, return on the first match
		}
	} else {
		dst.BalanceChangeReceiptDTO = nil
	}

	// try to unmarshal JSON data into BalanceTransferReceiptDTO
	err = json.Unmarshal(data, &dst.BalanceTransferReceiptDTO);
	if err == nil {
		jsonBalanceTransferReceiptDTO, _ := json.Marshal(dst.BalanceTransferReceiptDTO)
		if string(jsonBalanceTransferReceiptDTO) == "{}" { // empty struct
			dst.BalanceTransferReceiptDTO = nil
		} else {
			return nil // data stored in dst.BalanceTransferReceiptDTO, return on the first match
		}
	} else {
		dst.BalanceTransferReceiptDTO = nil
	}

	// try to unmarshal JSON data into InflationReceiptDTO
	err = json.Unmarshal(data, &dst.InflationReceiptDTO);
	if err == nil {
		jsonInflationReceiptDTO, _ := json.Marshal(dst.InflationReceiptDTO)
		if string(jsonInflationReceiptDTO) == "{}" { // empty struct
			dst.InflationReceiptDTO = nil
		} else {
			return nil // data stored in dst.InflationReceiptDTO, return on the first match
		}
	} else {
		dst.InflationReceiptDTO = nil
	}

	// try to unmarshal JSON data into MosaicExpiryReceiptDTO
	err = json.Unmarshal(data, &dst.MosaicExpiryReceiptDTO);
	if err == nil {
		jsonMosaicExpiryReceiptDTO, _ := json.Marshal(dst.MosaicExpiryReceiptDTO)
		if string(jsonMosaicExpiryReceiptDTO) == "{}" { // empty struct
			dst.MosaicExpiryReceiptDTO = nil
		} else {
			return nil // data stored in dst.MosaicExpiryReceiptDTO, return on the first match
		}
	} else {
		dst.MosaicExpiryReceiptDTO = nil
	}

	// try to unmarshal JSON data into NamespaceExpiryReceiptDTO
	err = json.Unmarshal(data, &dst.NamespaceExpiryReceiptDTO);
	if err == nil {
		jsonNamespaceExpiryReceiptDTO, _ := json.Marshal(dst.NamespaceExpiryReceiptDTO)
		if string(jsonNamespaceExpiryReceiptDTO) == "{}" { // empty struct
			dst.NamespaceExpiryReceiptDTO = nil
		} else {
			return nil // data stored in dst.NamespaceExpiryReceiptDTO, return on the first match
		}
	} else {
		dst.NamespaceExpiryReceiptDTO = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(TransactionStatementDTOReceiptsInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *TransactionStatementDTOReceiptsInner) MarshalJSON() ([]byte, error) {
	if src.BalanceChangeReceiptDTO != nil {
		return json.Marshal(&src.BalanceChangeReceiptDTO)
	}

	if src.BalanceTransferReceiptDTO != nil {
		return json.Marshal(&src.BalanceTransferReceiptDTO)
	}

	if src.InflationReceiptDTO != nil {
		return json.Marshal(&src.InflationReceiptDTO)
	}

	if src.MosaicExpiryReceiptDTO != nil {
		return json.Marshal(&src.MosaicExpiryReceiptDTO)
	}

	if src.NamespaceExpiryReceiptDTO != nil {
		return json.Marshal(&src.NamespaceExpiryReceiptDTO)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableTransactionStatementDTOReceiptsInner struct {
	value *TransactionStatementDTOReceiptsInner
	isSet bool
}

func (v NullableTransactionStatementDTOReceiptsInner) Get() *TransactionStatementDTOReceiptsInner {
	return v.value
}

func (v *NullableTransactionStatementDTOReceiptsInner) Set(val *TransactionStatementDTOReceiptsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionStatementDTOReceiptsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionStatementDTOReceiptsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionStatementDTOReceiptsInner(val *TransactionStatementDTOReceiptsInner) *NullableTransactionStatementDTOReceiptsInner {
	return &NullableTransactionStatementDTOReceiptsInner{value: val, isSet: true}
}

func (v NullableTransactionStatementDTOReceiptsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionStatementDTOReceiptsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


