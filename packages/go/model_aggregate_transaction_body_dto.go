/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AggregateTransactionBodyDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregateTransactionBodyDTO{}

// AggregateTransactionBodyDTO struct for AggregateTransactionBodyDTO
type AggregateTransactionBodyDTO struct {
	TransactionsHash string `json:"transactionsHash"`
	// Array of transaction cosignatures.
	Cosignatures []CosignatureDTO `json:"cosignatures"`
}

type _AggregateTransactionBodyDTO AggregateTransactionBodyDTO

// NewAggregateTransactionBodyDTO instantiates a new AggregateTransactionBodyDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateTransactionBodyDTO(transactionsHash string, cosignatures []CosignatureDTO) *AggregateTransactionBodyDTO {
	this := AggregateTransactionBodyDTO{}
	this.TransactionsHash = transactionsHash
	this.Cosignatures = cosignatures
	return &this
}

// NewAggregateTransactionBodyDTOWithDefaults instantiates a new AggregateTransactionBodyDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateTransactionBodyDTOWithDefaults() *AggregateTransactionBodyDTO {
	this := AggregateTransactionBodyDTO{}
	return &this
}

// GetTransactionsHash returns the TransactionsHash field value
func (o *AggregateTransactionBodyDTO) GetTransactionsHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionsHash
}

// GetTransactionsHashOk returns a tuple with the TransactionsHash field value
// and a boolean to check if the value has been set.
func (o *AggregateTransactionBodyDTO) GetTransactionsHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionsHash, true
}

// SetTransactionsHash sets field value
func (o *AggregateTransactionBodyDTO) SetTransactionsHash(v string) {
	o.TransactionsHash = v
}

// GetCosignatures returns the Cosignatures field value
func (o *AggregateTransactionBodyDTO) GetCosignatures() []CosignatureDTO {
	if o == nil {
		var ret []CosignatureDTO
		return ret
	}

	return o.Cosignatures
}

// GetCosignaturesOk returns a tuple with the Cosignatures field value
// and a boolean to check if the value has been set.
func (o *AggregateTransactionBodyDTO) GetCosignaturesOk() ([]CosignatureDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cosignatures, true
}

// SetCosignatures sets field value
func (o *AggregateTransactionBodyDTO) SetCosignatures(v []CosignatureDTO) {
	o.Cosignatures = v
}

func (o AggregateTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregateTransactionBodyDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionsHash"] = o.TransactionsHash
	toSerialize["cosignatures"] = o.Cosignatures
	return toSerialize, nil
}

func (o *AggregateTransactionBodyDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transactionsHash",
		"cosignatures",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAggregateTransactionBodyDTO := _AggregateTransactionBodyDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAggregateTransactionBodyDTO)

	if err != nil {
		return err
	}

	*o = AggregateTransactionBodyDTO(varAggregateTransactionBodyDTO)

	return err
}

type NullableAggregateTransactionBodyDTO struct {
	value *AggregateTransactionBodyDTO
	isSet bool
}

func (v NullableAggregateTransactionBodyDTO) Get() *AggregateTransactionBodyDTO {
	return v.value
}

func (v *NullableAggregateTransactionBodyDTO) Set(val *AggregateTransactionBodyDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateTransactionBodyDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateTransactionBodyDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateTransactionBodyDTO(val *AggregateTransactionBodyDTO) *NullableAggregateTransactionBodyDTO {
	return &NullableAggregateTransactionBodyDTO{value: val, isSet: true}
}

func (v NullableAggregateTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateTransactionBodyDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


