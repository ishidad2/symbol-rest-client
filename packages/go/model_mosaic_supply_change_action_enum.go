/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
)

// MosaicSupplyChangeActionEnum Direction of the supply change: * 0  - Decrease. * 1  - Increase. 
type MosaicSupplyChangeActionEnum int32

// List of MosaicSupplyChangeActionEnum
const (
	_0 MosaicSupplyChangeActionEnum = 0
	_1 MosaicSupplyChangeActionEnum = 1
)

// All allowed values of MosaicSupplyChangeActionEnum enum
var AllowedMosaicSupplyChangeActionEnumEnumValues = []MosaicSupplyChangeActionEnum{
	0,
	1,
}

func (v *MosaicSupplyChangeActionEnum) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MosaicSupplyChangeActionEnum(value)
	for _, existing := range AllowedMosaicSupplyChangeActionEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MosaicSupplyChangeActionEnum", value)
}

// NewMosaicSupplyChangeActionEnumFromValue returns a pointer to a valid MosaicSupplyChangeActionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMosaicSupplyChangeActionEnumFromValue(v int32) (*MosaicSupplyChangeActionEnum, error) {
	ev := MosaicSupplyChangeActionEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MosaicSupplyChangeActionEnum: valid values are %v", v, AllowedMosaicSupplyChangeActionEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MosaicSupplyChangeActionEnum) IsValid() bool {
	for _, existing := range AllowedMosaicSupplyChangeActionEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MosaicSupplyChangeActionEnum value
func (v MosaicSupplyChangeActionEnum) Ptr() *MosaicSupplyChangeActionEnum {
	return &v
}

type NullableMosaicSupplyChangeActionEnum struct {
	value *MosaicSupplyChangeActionEnum
	isSet bool
}

func (v NullableMosaicSupplyChangeActionEnum) Get() *MosaicSupplyChangeActionEnum {
	return v.value
}

func (v *NullableMosaicSupplyChangeActionEnum) Set(val *MosaicSupplyChangeActionEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMosaicSupplyChangeActionEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMosaicSupplyChangeActionEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMosaicSupplyChangeActionEnum(val *MosaicSupplyChangeActionEnum) *NullableMosaicSupplyChangeActionEnum {
	return &NullableMosaicSupplyChangeActionEnum{value: val, isSet: true}
}

func (v NullableMosaicSupplyChangeActionEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMosaicSupplyChangeActionEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

