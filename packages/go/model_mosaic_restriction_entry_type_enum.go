/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
)

// MosaicRestrictionEntryTypeEnum - 0 - Mosaic address restriction. - 1 - Mosaic global restriction. 
type MosaicRestrictionEntryTypeEnum int32

// List of MosaicRestrictionEntryTypeEnum
const (
	_0 MosaicRestrictionEntryTypeEnum = 0
	_1 MosaicRestrictionEntryTypeEnum = 1
)

// All allowed values of MosaicRestrictionEntryTypeEnum enum
var AllowedMosaicRestrictionEntryTypeEnumEnumValues = []MosaicRestrictionEntryTypeEnum{
	0,
	1,
}

func (v *MosaicRestrictionEntryTypeEnum) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MosaicRestrictionEntryTypeEnum(value)
	for _, existing := range AllowedMosaicRestrictionEntryTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MosaicRestrictionEntryTypeEnum", value)
}

// NewMosaicRestrictionEntryTypeEnumFromValue returns a pointer to a valid MosaicRestrictionEntryTypeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMosaicRestrictionEntryTypeEnumFromValue(v int32) (*MosaicRestrictionEntryTypeEnum, error) {
	ev := MosaicRestrictionEntryTypeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MosaicRestrictionEntryTypeEnum: valid values are %v", v, AllowedMosaicRestrictionEntryTypeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MosaicRestrictionEntryTypeEnum) IsValid() bool {
	for _, existing := range AllowedMosaicRestrictionEntryTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MosaicRestrictionEntryTypeEnum value
func (v MosaicRestrictionEntryTypeEnum) Ptr() *MosaicRestrictionEntryTypeEnum {
	return &v
}

type NullableMosaicRestrictionEntryTypeEnum struct {
	value *MosaicRestrictionEntryTypeEnum
	isSet bool
}

func (v NullableMosaicRestrictionEntryTypeEnum) Get() *MosaicRestrictionEntryTypeEnum {
	return v.value
}

func (v *NullableMosaicRestrictionEntryTypeEnum) Set(val *MosaicRestrictionEntryTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMosaicRestrictionEntryTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMosaicRestrictionEntryTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMosaicRestrictionEntryTypeEnum(val *MosaicRestrictionEntryTypeEnum) *NullableMosaicRestrictionEntryTypeEnum {
	return &NullableMosaicRestrictionEntryTypeEnum{value: val, isSet: true}
}

func (v NullableMosaicRestrictionEntryTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMosaicRestrictionEntryTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

