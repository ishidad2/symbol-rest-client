/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MosaicMetadataTransactionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MosaicMetadataTransactionDTO{}

// MosaicMetadataTransactionDTO Transaction to create or modify a multisig account.
type MosaicMetadataTransactionDTO struct {
	// A number that allows uint 32 values.
	Size int64 `json:"size"`
	// Entity's signature generated by the signer.
	Signature string `json:"signature"`
	// Public key.
	SignerPublicKey string `json:"signerPublicKey"`
	// Entity version.
	Version int32 `json:"version"`
	Network NetworkTypeEnum `json:"network"`
	Type int32 `json:"type"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	MaxFee string `json:"maxFee"`
	// Duration expressed in number of blocks.
	Deadline string `json:"deadline"`
	// Address expressed in Base32 format. If the bit 0 of byte 0 is not set (like in 0x90), then it is a regular address. Example: TAOXUJOTTW3W5XTBQMQEX3SQNA6MCUVGXLXR3TA.  Otherwise (e.g. 0x91) it represents a namespace id which starts at byte 1. Example: THBIMC3THGH5RUYAAAAAAAAAAAAAAAAAAAAAAAA 
	TargetAddress string `json:"targetAddress"`
	// Metadata key scoped to source, target and type expressed.
	ScopedMetadataKey string `json:"scopedMetadataKey"`
	// Mosaic identifier. If the most significant bit of byte 0 is set, a namespaceId (alias) is used instead of the real mosaic identifier. 
	TargetMosaicId string `json:"targetMosaicId"`
	// Change in value size in bytes.
	ValueSizeDelta int32 `json:"valueSizeDelta"`
	// A number that allows uint 32 values.
	ValueSize int64 `json:"valueSize"`
	// Metadata value. If embedded in a transaction, this is calculated as xor(previous-value, value).
	Value string `json:"value"`
}

type _MosaicMetadataTransactionDTO MosaicMetadataTransactionDTO

// NewMosaicMetadataTransactionDTO instantiates a new MosaicMetadataTransactionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMosaicMetadataTransactionDTO(size int64, signature string, signerPublicKey string, version int32, network NetworkTypeEnum, type_ int32, maxFee string, deadline string, targetAddress string, scopedMetadataKey string, targetMosaicId string, valueSizeDelta int32, valueSize int64, value string) *MosaicMetadataTransactionDTO {
	this := MosaicMetadataTransactionDTO{}
	this.Size = size
	this.Signature = signature
	this.SignerPublicKey = signerPublicKey
	this.Version = version
	this.Network = network
	this.Type = type_
	this.MaxFee = maxFee
	this.Deadline = deadline
	this.TargetAddress = targetAddress
	this.ScopedMetadataKey = scopedMetadataKey
	this.TargetMosaicId = targetMosaicId
	this.ValueSizeDelta = valueSizeDelta
	this.ValueSize = valueSize
	this.Value = value
	return &this
}

// NewMosaicMetadataTransactionDTOWithDefaults instantiates a new MosaicMetadataTransactionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMosaicMetadataTransactionDTOWithDefaults() *MosaicMetadataTransactionDTO {
	this := MosaicMetadataTransactionDTO{}
	return &this
}

// GetSize returns the Size field value
func (o *MosaicMetadataTransactionDTO) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *MosaicMetadataTransactionDTO) SetSize(v int64) {
	o.Size = v
}

// GetSignature returns the Signature field value
func (o *MosaicMetadataTransactionDTO) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *MosaicMetadataTransactionDTO) SetSignature(v string) {
	o.Signature = v
}

// GetSignerPublicKey returns the SignerPublicKey field value
func (o *MosaicMetadataTransactionDTO) GetSignerPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerPublicKey
}

// GetSignerPublicKeyOk returns a tuple with the SignerPublicKey field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetSignerPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerPublicKey, true
}

// SetSignerPublicKey sets field value
func (o *MosaicMetadataTransactionDTO) SetSignerPublicKey(v string) {
	o.SignerPublicKey = v
}

// GetVersion returns the Version field value
func (o *MosaicMetadataTransactionDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *MosaicMetadataTransactionDTO) SetVersion(v int32) {
	o.Version = v
}

// GetNetwork returns the Network field value
func (o *MosaicMetadataTransactionDTO) GetNetwork() NetworkTypeEnum {
	if o == nil {
		var ret NetworkTypeEnum
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetNetworkOk() (*NetworkTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *MosaicMetadataTransactionDTO) SetNetwork(v NetworkTypeEnum) {
	o.Network = v
}

// GetType returns the Type field value
func (o *MosaicMetadataTransactionDTO) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MosaicMetadataTransactionDTO) SetType(v int32) {
	o.Type = v
}

// GetMaxFee returns the MaxFee field value
func (o *MosaicMetadataTransactionDTO) GetMaxFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFee
}

// GetMaxFeeOk returns a tuple with the MaxFee field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetMaxFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFee, true
}

// SetMaxFee sets field value
func (o *MosaicMetadataTransactionDTO) SetMaxFee(v string) {
	o.MaxFee = v
}

// GetDeadline returns the Deadline field value
func (o *MosaicMetadataTransactionDTO) GetDeadline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetDeadlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deadline, true
}

// SetDeadline sets field value
func (o *MosaicMetadataTransactionDTO) SetDeadline(v string) {
	o.Deadline = v
}

// GetTargetAddress returns the TargetAddress field value
func (o *MosaicMetadataTransactionDTO) GetTargetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetAddress
}

// GetTargetAddressOk returns a tuple with the TargetAddress field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetTargetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetAddress, true
}

// SetTargetAddress sets field value
func (o *MosaicMetadataTransactionDTO) SetTargetAddress(v string) {
	o.TargetAddress = v
}

// GetScopedMetadataKey returns the ScopedMetadataKey field value
func (o *MosaicMetadataTransactionDTO) GetScopedMetadataKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScopedMetadataKey
}

// GetScopedMetadataKeyOk returns a tuple with the ScopedMetadataKey field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetScopedMetadataKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScopedMetadataKey, true
}

// SetScopedMetadataKey sets field value
func (o *MosaicMetadataTransactionDTO) SetScopedMetadataKey(v string) {
	o.ScopedMetadataKey = v
}

// GetTargetMosaicId returns the TargetMosaicId field value
func (o *MosaicMetadataTransactionDTO) GetTargetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetMosaicId
}

// GetTargetMosaicIdOk returns a tuple with the TargetMosaicId field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetTargetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetMosaicId, true
}

// SetTargetMosaicId sets field value
func (o *MosaicMetadataTransactionDTO) SetTargetMosaicId(v string) {
	o.TargetMosaicId = v
}

// GetValueSizeDelta returns the ValueSizeDelta field value
func (o *MosaicMetadataTransactionDTO) GetValueSizeDelta() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValueSizeDelta
}

// GetValueSizeDeltaOk returns a tuple with the ValueSizeDelta field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetValueSizeDeltaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueSizeDelta, true
}

// SetValueSizeDelta sets field value
func (o *MosaicMetadataTransactionDTO) SetValueSizeDelta(v int32) {
	o.ValueSizeDelta = v
}

// GetValueSize returns the ValueSize field value
func (o *MosaicMetadataTransactionDTO) GetValueSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ValueSize
}

// GetValueSizeOk returns a tuple with the ValueSize field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetValueSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueSize, true
}

// SetValueSize sets field value
func (o *MosaicMetadataTransactionDTO) SetValueSize(v int64) {
	o.ValueSize = v
}

// GetValue returns the Value field value
func (o *MosaicMetadataTransactionDTO) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *MosaicMetadataTransactionDTO) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *MosaicMetadataTransactionDTO) SetValue(v string) {
	o.Value = v
}

func (o MosaicMetadataTransactionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MosaicMetadataTransactionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	toSerialize["signature"] = o.Signature
	toSerialize["signerPublicKey"] = o.SignerPublicKey
	toSerialize["version"] = o.Version
	toSerialize["network"] = o.Network
	toSerialize["type"] = o.Type
	toSerialize["maxFee"] = o.MaxFee
	toSerialize["deadline"] = o.Deadline
	toSerialize["targetAddress"] = o.TargetAddress
	toSerialize["scopedMetadataKey"] = o.ScopedMetadataKey
	toSerialize["targetMosaicId"] = o.TargetMosaicId
	toSerialize["valueSizeDelta"] = o.ValueSizeDelta
	toSerialize["valueSize"] = o.ValueSize
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *MosaicMetadataTransactionDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"size",
		"signature",
		"signerPublicKey",
		"version",
		"network",
		"type",
		"maxFee",
		"deadline",
		"targetAddress",
		"scopedMetadataKey",
		"targetMosaicId",
		"valueSizeDelta",
		"valueSize",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMosaicMetadataTransactionDTO := _MosaicMetadataTransactionDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMosaicMetadataTransactionDTO)

	if err != nil {
		return err
	}

	*o = MosaicMetadataTransactionDTO(varMosaicMetadataTransactionDTO)

	return err
}

type NullableMosaicMetadataTransactionDTO struct {
	value *MosaicMetadataTransactionDTO
	isSet bool
}

func (v NullableMosaicMetadataTransactionDTO) Get() *MosaicMetadataTransactionDTO {
	return v.value
}

func (v *NullableMosaicMetadataTransactionDTO) Set(val *MosaicMetadataTransactionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableMosaicMetadataTransactionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableMosaicMetadataTransactionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMosaicMetadataTransactionDTO(val *MosaicMetadataTransactionDTO) *NullableMosaicMetadataTransactionDTO {
	return &NullableMosaicMetadataTransactionDTO{value: val, isSet: true}
}

func (v NullableMosaicMetadataTransactionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMosaicMetadataTransactionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


