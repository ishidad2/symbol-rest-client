/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SizePrefixedEntityDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SizePrefixedEntityDTO{}

// SizePrefixedEntityDTO struct for SizePrefixedEntityDTO
type SizePrefixedEntityDTO struct {
	// A number that allows uint 32 values.
	Size int64 `json:"size"`
}

type _SizePrefixedEntityDTO SizePrefixedEntityDTO

// NewSizePrefixedEntityDTO instantiates a new SizePrefixedEntityDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSizePrefixedEntityDTO(size int64) *SizePrefixedEntityDTO {
	this := SizePrefixedEntityDTO{}
	this.Size = size
	return &this
}

// NewSizePrefixedEntityDTOWithDefaults instantiates a new SizePrefixedEntityDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSizePrefixedEntityDTOWithDefaults() *SizePrefixedEntityDTO {
	this := SizePrefixedEntityDTO{}
	return &this
}

// GetSize returns the Size field value
func (o *SizePrefixedEntityDTO) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *SizePrefixedEntityDTO) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *SizePrefixedEntityDTO) SetSize(v int64) {
	o.Size = v
}

func (o SizePrefixedEntityDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SizePrefixedEntityDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *SizePrefixedEntityDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSizePrefixedEntityDTO := _SizePrefixedEntityDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSizePrefixedEntityDTO)

	if err != nil {
		return err
	}

	*o = SizePrefixedEntityDTO(varSizePrefixedEntityDTO)

	return err
}

type NullableSizePrefixedEntityDTO struct {
	value *SizePrefixedEntityDTO
	isSet bool
}

func (v NullableSizePrefixedEntityDTO) Get() *SizePrefixedEntityDTO {
	return v.value
}

func (v *NullableSizePrefixedEntityDTO) Set(val *SizePrefixedEntityDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSizePrefixedEntityDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSizePrefixedEntityDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSizePrefixedEntityDTO(val *SizePrefixedEntityDTO) *NullableSizePrefixedEntityDTO {
	return &NullableSizePrefixedEntityDTO{value: val, isSet: true}
}

func (v NullableSizePrefixedEntityDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSizePrefixedEntityDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


