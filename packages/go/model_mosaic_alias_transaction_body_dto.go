/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MosaicAliasTransactionBodyDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MosaicAliasTransactionBodyDTO{}

// MosaicAliasTransactionBodyDTO struct for MosaicAliasTransactionBodyDTO
type MosaicAliasTransactionBodyDTO struct {
	// Namespace identifier.
	NamespaceId string `json:"namespaceId"`
	// Mosaic identifier.
	MosaicId string `json:"mosaicId"`
	AliasAction AliasActionEnum `json:"aliasAction"`
}

type _MosaicAliasTransactionBodyDTO MosaicAliasTransactionBodyDTO

// NewMosaicAliasTransactionBodyDTO instantiates a new MosaicAliasTransactionBodyDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMosaicAliasTransactionBodyDTO(namespaceId string, mosaicId string, aliasAction AliasActionEnum) *MosaicAliasTransactionBodyDTO {
	this := MosaicAliasTransactionBodyDTO{}
	this.NamespaceId = namespaceId
	this.MosaicId = mosaicId
	this.AliasAction = aliasAction
	return &this
}

// NewMosaicAliasTransactionBodyDTOWithDefaults instantiates a new MosaicAliasTransactionBodyDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMosaicAliasTransactionBodyDTOWithDefaults() *MosaicAliasTransactionBodyDTO {
	this := MosaicAliasTransactionBodyDTO{}
	return &this
}

// GetNamespaceId returns the NamespaceId field value
func (o *MosaicAliasTransactionBodyDTO) GetNamespaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceId
}

// GetNamespaceIdOk returns a tuple with the NamespaceId field value
// and a boolean to check if the value has been set.
func (o *MosaicAliasTransactionBodyDTO) GetNamespaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceId, true
}

// SetNamespaceId sets field value
func (o *MosaicAliasTransactionBodyDTO) SetNamespaceId(v string) {
	o.NamespaceId = v
}

// GetMosaicId returns the MosaicId field value
func (o *MosaicAliasTransactionBodyDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *MosaicAliasTransactionBodyDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *MosaicAliasTransactionBodyDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetAliasAction returns the AliasAction field value
func (o *MosaicAliasTransactionBodyDTO) GetAliasAction() AliasActionEnum {
	if o == nil {
		var ret AliasActionEnum
		return ret
	}

	return o.AliasAction
}

// GetAliasActionOk returns a tuple with the AliasAction field value
// and a boolean to check if the value has been set.
func (o *MosaicAliasTransactionBodyDTO) GetAliasActionOk() (*AliasActionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AliasAction, true
}

// SetAliasAction sets field value
func (o *MosaicAliasTransactionBodyDTO) SetAliasAction(v AliasActionEnum) {
	o.AliasAction = v
}

func (o MosaicAliasTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MosaicAliasTransactionBodyDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespaceId"] = o.NamespaceId
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["aliasAction"] = o.AliasAction
	return toSerialize, nil
}

func (o *MosaicAliasTransactionBodyDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"namespaceId",
		"mosaicId",
		"aliasAction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMosaicAliasTransactionBodyDTO := _MosaicAliasTransactionBodyDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMosaicAliasTransactionBodyDTO)

	if err != nil {
		return err
	}

	*o = MosaicAliasTransactionBodyDTO(varMosaicAliasTransactionBodyDTO)

	return err
}

type NullableMosaicAliasTransactionBodyDTO struct {
	value *MosaicAliasTransactionBodyDTO
	isSet bool
}

func (v NullableMosaicAliasTransactionBodyDTO) Get() *MosaicAliasTransactionBodyDTO {
	return v.value
}

func (v *NullableMosaicAliasTransactionBodyDTO) Set(val *MosaicAliasTransactionBodyDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableMosaicAliasTransactionBodyDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableMosaicAliasTransactionBodyDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMosaicAliasTransactionBodyDTO(val *MosaicAliasTransactionBodyDTO) *NullableMosaicAliasTransactionBodyDTO {
	return &NullableMosaicAliasTransactionBodyDTO{value: val, isSet: true}
}

func (v NullableMosaicAliasTransactionBodyDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMosaicAliasTransactionBodyDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


