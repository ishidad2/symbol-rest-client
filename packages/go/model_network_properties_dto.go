/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the NetworkPropertiesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkPropertiesDTO{}

// NetworkPropertiesDTO Network related configuration properties.
type NetworkPropertiesDTO struct {
	// Network identifier.
	Identifier *string `json:"identifier,omitempty"`
	NodeEqualityStrategy *NodeIdentityEqualityStrategy `json:"nodeEqualityStrategy,omitempty"`
	// Public key.
	NemesisSignerPublicKey *string `json:"nemesisSignerPublicKey,omitempty"`
	GenerationHashSeed *string `json:"generationHashSeed,omitempty"`
	// Nemesis epoch time adjustment.
	EpochAdjustment *string `json:"epochAdjustment,omitempty"`
}

// NewNetworkPropertiesDTO instantiates a new NetworkPropertiesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPropertiesDTO() *NetworkPropertiesDTO {
	this := NetworkPropertiesDTO{}
	return &this
}

// NewNetworkPropertiesDTOWithDefaults instantiates a new NetworkPropertiesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPropertiesDTOWithDefaults() *NetworkPropertiesDTO {
	this := NetworkPropertiesDTO{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *NetworkPropertiesDTO) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPropertiesDTO) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *NetworkPropertiesDTO) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *NetworkPropertiesDTO) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetNodeEqualityStrategy returns the NodeEqualityStrategy field value if set, zero value otherwise.
func (o *NetworkPropertiesDTO) GetNodeEqualityStrategy() NodeIdentityEqualityStrategy {
	if o == nil || IsNil(o.NodeEqualityStrategy) {
		var ret NodeIdentityEqualityStrategy
		return ret
	}
	return *o.NodeEqualityStrategy
}

// GetNodeEqualityStrategyOk returns a tuple with the NodeEqualityStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPropertiesDTO) GetNodeEqualityStrategyOk() (*NodeIdentityEqualityStrategy, bool) {
	if o == nil || IsNil(o.NodeEqualityStrategy) {
		return nil, false
	}
	return o.NodeEqualityStrategy, true
}

// HasNodeEqualityStrategy returns a boolean if a field has been set.
func (o *NetworkPropertiesDTO) HasNodeEqualityStrategy() bool {
	if o != nil && !IsNil(o.NodeEqualityStrategy) {
		return true
	}

	return false
}

// SetNodeEqualityStrategy gets a reference to the given NodeIdentityEqualityStrategy and assigns it to the NodeEqualityStrategy field.
func (o *NetworkPropertiesDTO) SetNodeEqualityStrategy(v NodeIdentityEqualityStrategy) {
	o.NodeEqualityStrategy = &v
}

// GetNemesisSignerPublicKey returns the NemesisSignerPublicKey field value if set, zero value otherwise.
func (o *NetworkPropertiesDTO) GetNemesisSignerPublicKey() string {
	if o == nil || IsNil(o.NemesisSignerPublicKey) {
		var ret string
		return ret
	}
	return *o.NemesisSignerPublicKey
}

// GetNemesisSignerPublicKeyOk returns a tuple with the NemesisSignerPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPropertiesDTO) GetNemesisSignerPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.NemesisSignerPublicKey) {
		return nil, false
	}
	return o.NemesisSignerPublicKey, true
}

// HasNemesisSignerPublicKey returns a boolean if a field has been set.
func (o *NetworkPropertiesDTO) HasNemesisSignerPublicKey() bool {
	if o != nil && !IsNil(o.NemesisSignerPublicKey) {
		return true
	}

	return false
}

// SetNemesisSignerPublicKey gets a reference to the given string and assigns it to the NemesisSignerPublicKey field.
func (o *NetworkPropertiesDTO) SetNemesisSignerPublicKey(v string) {
	o.NemesisSignerPublicKey = &v
}

// GetGenerationHashSeed returns the GenerationHashSeed field value if set, zero value otherwise.
func (o *NetworkPropertiesDTO) GetGenerationHashSeed() string {
	if o == nil || IsNil(o.GenerationHashSeed) {
		var ret string
		return ret
	}
	return *o.GenerationHashSeed
}

// GetGenerationHashSeedOk returns a tuple with the GenerationHashSeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPropertiesDTO) GetGenerationHashSeedOk() (*string, bool) {
	if o == nil || IsNil(o.GenerationHashSeed) {
		return nil, false
	}
	return o.GenerationHashSeed, true
}

// HasGenerationHashSeed returns a boolean if a field has been set.
func (o *NetworkPropertiesDTO) HasGenerationHashSeed() bool {
	if o != nil && !IsNil(o.GenerationHashSeed) {
		return true
	}

	return false
}

// SetGenerationHashSeed gets a reference to the given string and assigns it to the GenerationHashSeed field.
func (o *NetworkPropertiesDTO) SetGenerationHashSeed(v string) {
	o.GenerationHashSeed = &v
}

// GetEpochAdjustment returns the EpochAdjustment field value if set, zero value otherwise.
func (o *NetworkPropertiesDTO) GetEpochAdjustment() string {
	if o == nil || IsNil(o.EpochAdjustment) {
		var ret string
		return ret
	}
	return *o.EpochAdjustment
}

// GetEpochAdjustmentOk returns a tuple with the EpochAdjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPropertiesDTO) GetEpochAdjustmentOk() (*string, bool) {
	if o == nil || IsNil(o.EpochAdjustment) {
		return nil, false
	}
	return o.EpochAdjustment, true
}

// HasEpochAdjustment returns a boolean if a field has been set.
func (o *NetworkPropertiesDTO) HasEpochAdjustment() bool {
	if o != nil && !IsNil(o.EpochAdjustment) {
		return true
	}

	return false
}

// SetEpochAdjustment gets a reference to the given string and assigns it to the EpochAdjustment field.
func (o *NetworkPropertiesDTO) SetEpochAdjustment(v string) {
	o.EpochAdjustment = &v
}

func (o NetworkPropertiesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkPropertiesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.NodeEqualityStrategy) {
		toSerialize["nodeEqualityStrategy"] = o.NodeEqualityStrategy
	}
	if !IsNil(o.NemesisSignerPublicKey) {
		toSerialize["nemesisSignerPublicKey"] = o.NemesisSignerPublicKey
	}
	if !IsNil(o.GenerationHashSeed) {
		toSerialize["generationHashSeed"] = o.GenerationHashSeed
	}
	if !IsNil(o.EpochAdjustment) {
		toSerialize["epochAdjustment"] = o.EpochAdjustment
	}
	return toSerialize, nil
}

type NullableNetworkPropertiesDTO struct {
	value *NetworkPropertiesDTO
	isSet bool
}

func (v NullableNetworkPropertiesDTO) Get() *NetworkPropertiesDTO {
	return v.value
}

func (v *NullableNetworkPropertiesDTO) Set(val *NetworkPropertiesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPropertiesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPropertiesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPropertiesDTO(val *NetworkPropertiesDTO) *NullableNetworkPropertiesDTO {
	return &NullableNetworkPropertiesDTO{value: val, isSet: true}
}

func (v NullableNetworkPropertiesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPropertiesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


