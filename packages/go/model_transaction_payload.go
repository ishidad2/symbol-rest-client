/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the TransactionPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionPayload{}

// TransactionPayload struct for TransactionPayload
type TransactionPayload struct {
	// Transaction payload in hexadecimal format.
	Payload *string `json:"payload,omitempty"`
}

// NewTransactionPayload instantiates a new TransactionPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionPayload() *TransactionPayload {
	this := TransactionPayload{}
	return &this
}

// NewTransactionPayloadWithDefaults instantiates a new TransactionPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionPayloadWithDefaults() *TransactionPayload {
	this := TransactionPayload{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *TransactionPayload) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionPayload) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *TransactionPayload) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *TransactionPayload) SetPayload(v string) {
	o.Payload = &v
}

func (o TransactionPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableTransactionPayload struct {
	value *TransactionPayload
	isSet bool
}

func (v NullableTransactionPayload) Get() *TransactionPayload {
	return v.value
}

func (v *NullableTransactionPayload) Set(val *TransactionPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionPayload(val *TransactionPayload) *NullableTransactionPayload {
	return &NullableTransactionPayload{value: val, isSet: true}
}

func (v NullableTransactionPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


