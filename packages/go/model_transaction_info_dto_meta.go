/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"fmt"
	"bytes"
)

// TransactionInfoDTOMeta struct for TransactionInfoDTOMeta
type TransactionInfoDTOMeta struct {
	EmbeddedTransactionMetaDTO *EmbeddedTransactionMetaDTO
	TransactionMetaDTO *TransactionMetaDTO
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *TransactionInfoDTOMeta) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into EmbeddedTransactionMetaDTO
	err = json.Unmarshal(data, &dst.EmbeddedTransactionMetaDTO);
	if err == nil {
		jsonEmbeddedTransactionMetaDTO, _ := json.Marshal(dst.EmbeddedTransactionMetaDTO)
		if string(jsonEmbeddedTransactionMetaDTO) == "{}" { // empty struct
			dst.EmbeddedTransactionMetaDTO = nil
		} else {
			return nil // data stored in dst.EmbeddedTransactionMetaDTO, return on the first match
		}
	} else {
		dst.EmbeddedTransactionMetaDTO = nil
	}

	// try to unmarshal JSON data into TransactionMetaDTO
	err = json.Unmarshal(data, &dst.TransactionMetaDTO);
	if err == nil {
		jsonTransactionMetaDTO, _ := json.Marshal(dst.TransactionMetaDTO)
		if string(jsonTransactionMetaDTO) == "{}" { // empty struct
			dst.TransactionMetaDTO = nil
		} else {
			return nil // data stored in dst.TransactionMetaDTO, return on the first match
		}
	} else {
		dst.TransactionMetaDTO = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(TransactionInfoDTOMeta)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *TransactionInfoDTOMeta) MarshalJSON() ([]byte, error) {
	if src.EmbeddedTransactionMetaDTO != nil {
		return json.Marshal(&src.EmbeddedTransactionMetaDTO)
	}

	if src.TransactionMetaDTO != nil {
		return json.Marshal(&src.TransactionMetaDTO)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableTransactionInfoDTOMeta struct {
	value *TransactionInfoDTOMeta
	isSet bool
}

func (v NullableTransactionInfoDTOMeta) Get() *TransactionInfoDTOMeta {
	return v.value
}

func (v *NullableTransactionInfoDTOMeta) Set(val *TransactionInfoDTOMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionInfoDTOMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionInfoDTOMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionInfoDTOMeta(val *TransactionInfoDTOMeta) *NullableTransactionInfoDTOMeta {
	return &NullableTransactionInfoDTOMeta{value: val, isSet: true}
}

func (v NullableTransactionInfoDTOMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionInfoDTOMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


