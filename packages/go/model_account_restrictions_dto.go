/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountRestrictionsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountRestrictionsDTO{}

// AccountRestrictionsDTO struct for AccountRestrictionsDTO
type AccountRestrictionsDTO struct {
	// The version of the state
	Version int32 `json:"version"`
	// Address encoded using a 32-character set.
	Address string `json:"address"`
	Restrictions []AccountRestrictionDTO `json:"restrictions"`
}

type _AccountRestrictionsDTO AccountRestrictionsDTO

// NewAccountRestrictionsDTO instantiates a new AccountRestrictionsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountRestrictionsDTO(version int32, address string, restrictions []AccountRestrictionDTO) *AccountRestrictionsDTO {
	this := AccountRestrictionsDTO{}
	this.Version = version
	this.Address = address
	this.Restrictions = restrictions
	return &this
}

// NewAccountRestrictionsDTOWithDefaults instantiates a new AccountRestrictionsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountRestrictionsDTOWithDefaults() *AccountRestrictionsDTO {
	this := AccountRestrictionsDTO{}
	return &this
}

// GetVersion returns the Version field value
func (o *AccountRestrictionsDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AccountRestrictionsDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AccountRestrictionsDTO) SetVersion(v int32) {
	o.Version = v
}

// GetAddress returns the Address field value
func (o *AccountRestrictionsDTO) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *AccountRestrictionsDTO) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *AccountRestrictionsDTO) SetAddress(v string) {
	o.Address = v
}

// GetRestrictions returns the Restrictions field value
func (o *AccountRestrictionsDTO) GetRestrictions() []AccountRestrictionDTO {
	if o == nil {
		var ret []AccountRestrictionDTO
		return ret
	}

	return o.Restrictions
}

// GetRestrictionsOk returns a tuple with the Restrictions field value
// and a boolean to check if the value has been set.
func (o *AccountRestrictionsDTO) GetRestrictionsOk() ([]AccountRestrictionDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Restrictions, true
}

// SetRestrictions sets field value
func (o *AccountRestrictionsDTO) SetRestrictions(v []AccountRestrictionDTO) {
	o.Restrictions = v
}

func (o AccountRestrictionsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountRestrictionsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["address"] = o.Address
	toSerialize["restrictions"] = o.Restrictions
	return toSerialize, nil
}

func (o *AccountRestrictionsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"address",
		"restrictions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountRestrictionsDTO := _AccountRestrictionsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountRestrictionsDTO)

	if err != nil {
		return err
	}

	*o = AccountRestrictionsDTO(varAccountRestrictionsDTO)

	return err
}

type NullableAccountRestrictionsDTO struct {
	value *AccountRestrictionsDTO
	isSet bool
}

func (v NullableAccountRestrictionsDTO) Get() *AccountRestrictionsDTO {
	return v.value
}

func (v *NullableAccountRestrictionsDTO) Set(val *AccountRestrictionsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRestrictionsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRestrictionsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRestrictionsDTO(val *AccountRestrictionsDTO) *NullableAccountRestrictionsDTO {
	return &NullableAccountRestrictionsDTO{value: val, isSet: true}
}

func (v NullableAccountRestrictionsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRestrictionsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


