/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the SupplementalPublicKeysDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplementalPublicKeysDTO{}

// SupplementalPublicKeysDTO struct for SupplementalPublicKeysDTO
type SupplementalPublicKeysDTO struct {
	Linked *AccountLinkPublicKeyDTO `json:"linked,omitempty"`
	Node *AccountLinkPublicKeyDTO `json:"node,omitempty"`
	Vrf *AccountLinkPublicKeyDTO `json:"vrf,omitempty"`
	Voting *AccountLinkVotingKeysDTO `json:"voting,omitempty"`
}

// NewSupplementalPublicKeysDTO instantiates a new SupplementalPublicKeysDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplementalPublicKeysDTO() *SupplementalPublicKeysDTO {
	this := SupplementalPublicKeysDTO{}
	return &this
}

// NewSupplementalPublicKeysDTOWithDefaults instantiates a new SupplementalPublicKeysDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplementalPublicKeysDTOWithDefaults() *SupplementalPublicKeysDTO {
	this := SupplementalPublicKeysDTO{}
	return &this
}

// GetLinked returns the Linked field value if set, zero value otherwise.
func (o *SupplementalPublicKeysDTO) GetLinked() AccountLinkPublicKeyDTO {
	if o == nil || IsNil(o.Linked) {
		var ret AccountLinkPublicKeyDTO
		return ret
	}
	return *o.Linked
}

// GetLinkedOk returns a tuple with the Linked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplementalPublicKeysDTO) GetLinkedOk() (*AccountLinkPublicKeyDTO, bool) {
	if o == nil || IsNil(o.Linked) {
		return nil, false
	}
	return o.Linked, true
}

// HasLinked returns a boolean if a field has been set.
func (o *SupplementalPublicKeysDTO) HasLinked() bool {
	if o != nil && !IsNil(o.Linked) {
		return true
	}

	return false
}

// SetLinked gets a reference to the given AccountLinkPublicKeyDTO and assigns it to the Linked field.
func (o *SupplementalPublicKeysDTO) SetLinked(v AccountLinkPublicKeyDTO) {
	o.Linked = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *SupplementalPublicKeysDTO) GetNode() AccountLinkPublicKeyDTO {
	if o == nil || IsNil(o.Node) {
		var ret AccountLinkPublicKeyDTO
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplementalPublicKeysDTO) GetNodeOk() (*AccountLinkPublicKeyDTO, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *SupplementalPublicKeysDTO) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given AccountLinkPublicKeyDTO and assigns it to the Node field.
func (o *SupplementalPublicKeysDTO) SetNode(v AccountLinkPublicKeyDTO) {
	o.Node = &v
}

// GetVrf returns the Vrf field value if set, zero value otherwise.
func (o *SupplementalPublicKeysDTO) GetVrf() AccountLinkPublicKeyDTO {
	if o == nil || IsNil(o.Vrf) {
		var ret AccountLinkPublicKeyDTO
		return ret
	}
	return *o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplementalPublicKeysDTO) GetVrfOk() (*AccountLinkPublicKeyDTO, bool) {
	if o == nil || IsNil(o.Vrf) {
		return nil, false
	}
	return o.Vrf, true
}

// HasVrf returns a boolean if a field has been set.
func (o *SupplementalPublicKeysDTO) HasVrf() bool {
	if o != nil && !IsNil(o.Vrf) {
		return true
	}

	return false
}

// SetVrf gets a reference to the given AccountLinkPublicKeyDTO and assigns it to the Vrf field.
func (o *SupplementalPublicKeysDTO) SetVrf(v AccountLinkPublicKeyDTO) {
	o.Vrf = &v
}

// GetVoting returns the Voting field value if set, zero value otherwise.
func (o *SupplementalPublicKeysDTO) GetVoting() AccountLinkVotingKeysDTO {
	if o == nil || IsNil(o.Voting) {
		var ret AccountLinkVotingKeysDTO
		return ret
	}
	return *o.Voting
}

// GetVotingOk returns a tuple with the Voting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplementalPublicKeysDTO) GetVotingOk() (*AccountLinkVotingKeysDTO, bool) {
	if o == nil || IsNil(o.Voting) {
		return nil, false
	}
	return o.Voting, true
}

// HasVoting returns a boolean if a field has been set.
func (o *SupplementalPublicKeysDTO) HasVoting() bool {
	if o != nil && !IsNil(o.Voting) {
		return true
	}

	return false
}

// SetVoting gets a reference to the given AccountLinkVotingKeysDTO and assigns it to the Voting field.
func (o *SupplementalPublicKeysDTO) SetVoting(v AccountLinkVotingKeysDTO) {
	o.Voting = &v
}

func (o SupplementalPublicKeysDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplementalPublicKeysDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Linked) {
		toSerialize["linked"] = o.Linked
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Vrf) {
		toSerialize["vrf"] = o.Vrf
	}
	if !IsNil(o.Voting) {
		toSerialize["voting"] = o.Voting
	}
	return toSerialize, nil
}

type NullableSupplementalPublicKeysDTO struct {
	value *SupplementalPublicKeysDTO
	isSet bool
}

func (v NullableSupplementalPublicKeysDTO) Get() *SupplementalPublicKeysDTO {
	return v.value
}

func (v *NullableSupplementalPublicKeysDTO) Set(val *SupplementalPublicKeysDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplementalPublicKeysDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplementalPublicKeysDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplementalPublicKeysDTO(val *SupplementalPublicKeysDTO) *NullableSupplementalPublicKeysDTO {
	return &NullableSupplementalPublicKeysDTO{value: val, isSet: true}
}

func (v NullableSupplementalPublicKeysDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplementalPublicKeysDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


