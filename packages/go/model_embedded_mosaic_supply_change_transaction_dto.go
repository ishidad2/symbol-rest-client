/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EmbeddedMosaicSupplyChangeTransactionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddedMosaicSupplyChangeTransactionDTO{}

// EmbeddedMosaicSupplyChangeTransactionDTO struct for EmbeddedMosaicSupplyChangeTransactionDTO
type EmbeddedMosaicSupplyChangeTransactionDTO struct {
	// Public key.
	SignerPublicKey string `json:"signerPublicKey"`
	// Entity version.
	Version int32 `json:"version"`
	Network NetworkTypeEnum `json:"network"`
	Type int32 `json:"type"`
	// Mosaic identifier. If the most significant bit of byte 0 is set, a namespaceId (alias) is used instead of the real mosaic identifier. 
	MosaicId string `json:"mosaicId"`
	// Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
	Delta string `json:"delta"`
	Action MosaicSupplyChangeActionEnum `json:"action"`
}

type _EmbeddedMosaicSupplyChangeTransactionDTO EmbeddedMosaicSupplyChangeTransactionDTO

// NewEmbeddedMosaicSupplyChangeTransactionDTO instantiates a new EmbeddedMosaicSupplyChangeTransactionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddedMosaicSupplyChangeTransactionDTO(signerPublicKey string, version int32, network NetworkTypeEnum, type_ int32, mosaicId string, delta string, action MosaicSupplyChangeActionEnum) *EmbeddedMosaicSupplyChangeTransactionDTO {
	this := EmbeddedMosaicSupplyChangeTransactionDTO{}
	this.SignerPublicKey = signerPublicKey
	this.Version = version
	this.Network = network
	this.Type = type_
	this.MosaicId = mosaicId
	this.Delta = delta
	this.Action = action
	return &this
}

// NewEmbeddedMosaicSupplyChangeTransactionDTOWithDefaults instantiates a new EmbeddedMosaicSupplyChangeTransactionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddedMosaicSupplyChangeTransactionDTOWithDefaults() *EmbeddedMosaicSupplyChangeTransactionDTO {
	this := EmbeddedMosaicSupplyChangeTransactionDTO{}
	return &this
}

// GetSignerPublicKey returns the SignerPublicKey field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetSignerPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerPublicKey
}

// GetSignerPublicKeyOk returns a tuple with the SignerPublicKey field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetSignerPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerPublicKey, true
}

// SetSignerPublicKey sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetSignerPublicKey(v string) {
	o.SignerPublicKey = v
}

// GetVersion returns the Version field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetVersion(v int32) {
	o.Version = v
}

// GetNetwork returns the Network field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetNetwork() NetworkTypeEnum {
	if o == nil {
		var ret NetworkTypeEnum
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetNetworkOk() (*NetworkTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetNetwork(v NetworkTypeEnum) {
	o.Network = v
}

// GetType returns the Type field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetType(v int32) {
	o.Type = v
}

// GetMosaicId returns the MosaicId field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetMosaicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MosaicId
}

// GetMosaicIdOk returns a tuple with the MosaicId field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetMosaicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MosaicId, true
}

// SetMosaicId sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetMosaicId(v string) {
	o.MosaicId = v
}

// GetDelta returns the Delta field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetDelta() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetDeltaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Delta, true
}

// SetDelta sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetDelta(v string) {
	o.Delta = v
}

// GetAction returns the Action field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetAction() MosaicSupplyChangeActionEnum {
	if o == nil {
		var ret MosaicSupplyChangeActionEnum
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) GetActionOk() (*MosaicSupplyChangeActionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *EmbeddedMosaicSupplyChangeTransactionDTO) SetAction(v MosaicSupplyChangeActionEnum) {
	o.Action = v
}

func (o EmbeddedMosaicSupplyChangeTransactionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddedMosaicSupplyChangeTransactionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signerPublicKey"] = o.SignerPublicKey
	toSerialize["version"] = o.Version
	toSerialize["network"] = o.Network
	toSerialize["type"] = o.Type
	toSerialize["mosaicId"] = o.MosaicId
	toSerialize["delta"] = o.Delta
	toSerialize["action"] = o.Action
	return toSerialize, nil
}

func (o *EmbeddedMosaicSupplyChangeTransactionDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signerPublicKey",
		"version",
		"network",
		"type",
		"mosaicId",
		"delta",
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmbeddedMosaicSupplyChangeTransactionDTO := _EmbeddedMosaicSupplyChangeTransactionDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmbeddedMosaicSupplyChangeTransactionDTO)

	if err != nil {
		return err
	}

	*o = EmbeddedMosaicSupplyChangeTransactionDTO(varEmbeddedMosaicSupplyChangeTransactionDTO)

	return err
}

type NullableEmbeddedMosaicSupplyChangeTransactionDTO struct {
	value *EmbeddedMosaicSupplyChangeTransactionDTO
	isSet bool
}

func (v NullableEmbeddedMosaicSupplyChangeTransactionDTO) Get() *EmbeddedMosaicSupplyChangeTransactionDTO {
	return v.value
}

func (v *NullableEmbeddedMosaicSupplyChangeTransactionDTO) Set(val *EmbeddedMosaicSupplyChangeTransactionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddedMosaicSupplyChangeTransactionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddedMosaicSupplyChangeTransactionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddedMosaicSupplyChangeTransactionDTO(val *EmbeddedMosaicSupplyChangeTransactionDTO) *NullableEmbeddedMosaicSupplyChangeTransactionDTO {
	return &NullableEmbeddedMosaicSupplyChangeTransactionDTO{value: val, isSet: true}
}

func (v NullableEmbeddedMosaicSupplyChangeTransactionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddedMosaicSupplyChangeTransactionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


