/*
Catapult REST Endpoints

OpenAPI Specification of catapult-rest

API version: 1.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EmbeddedAddressAliasTransactionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddedAddressAliasTransactionDTO{}

// EmbeddedAddressAliasTransactionDTO struct for EmbeddedAddressAliasTransactionDTO
type EmbeddedAddressAliasTransactionDTO struct {
	// Public key.
	SignerPublicKey string `json:"signerPublicKey"`
	// Entity version.
	Version int32 `json:"version"`
	Network NetworkTypeEnum `json:"network"`
	Type int32 `json:"type"`
	// Namespace identifier.
	NamespaceId string `json:"namespaceId"`
	// Address encoded using a 32-character set.
	Address string `json:"address"`
	AliasAction AliasActionEnum `json:"aliasAction"`
}

type _EmbeddedAddressAliasTransactionDTO EmbeddedAddressAliasTransactionDTO

// NewEmbeddedAddressAliasTransactionDTO instantiates a new EmbeddedAddressAliasTransactionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddedAddressAliasTransactionDTO(signerPublicKey string, version int32, network NetworkTypeEnum, type_ int32, namespaceId string, address string, aliasAction AliasActionEnum) *EmbeddedAddressAliasTransactionDTO {
	this := EmbeddedAddressAliasTransactionDTO{}
	this.SignerPublicKey = signerPublicKey
	this.Version = version
	this.Network = network
	this.Type = type_
	this.NamespaceId = namespaceId
	this.Address = address
	this.AliasAction = aliasAction
	return &this
}

// NewEmbeddedAddressAliasTransactionDTOWithDefaults instantiates a new EmbeddedAddressAliasTransactionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddedAddressAliasTransactionDTOWithDefaults() *EmbeddedAddressAliasTransactionDTO {
	this := EmbeddedAddressAliasTransactionDTO{}
	return &this
}

// GetSignerPublicKey returns the SignerPublicKey field value
func (o *EmbeddedAddressAliasTransactionDTO) GetSignerPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerPublicKey
}

// GetSignerPublicKeyOk returns a tuple with the SignerPublicKey field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetSignerPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerPublicKey, true
}

// SetSignerPublicKey sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetSignerPublicKey(v string) {
	o.SignerPublicKey = v
}

// GetVersion returns the Version field value
func (o *EmbeddedAddressAliasTransactionDTO) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetVersion(v int32) {
	o.Version = v
}

// GetNetwork returns the Network field value
func (o *EmbeddedAddressAliasTransactionDTO) GetNetwork() NetworkTypeEnum {
	if o == nil {
		var ret NetworkTypeEnum
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetNetworkOk() (*NetworkTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetNetwork(v NetworkTypeEnum) {
	o.Network = v
}

// GetType returns the Type field value
func (o *EmbeddedAddressAliasTransactionDTO) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetType(v int32) {
	o.Type = v
}

// GetNamespaceId returns the NamespaceId field value
func (o *EmbeddedAddressAliasTransactionDTO) GetNamespaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NamespaceId
}

// GetNamespaceIdOk returns a tuple with the NamespaceId field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetNamespaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NamespaceId, true
}

// SetNamespaceId sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetNamespaceId(v string) {
	o.NamespaceId = v
}

// GetAddress returns the Address field value
func (o *EmbeddedAddressAliasTransactionDTO) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetAddress(v string) {
	o.Address = v
}

// GetAliasAction returns the AliasAction field value
func (o *EmbeddedAddressAliasTransactionDTO) GetAliasAction() AliasActionEnum {
	if o == nil {
		var ret AliasActionEnum
		return ret
	}

	return o.AliasAction
}

// GetAliasActionOk returns a tuple with the AliasAction field value
// and a boolean to check if the value has been set.
func (o *EmbeddedAddressAliasTransactionDTO) GetAliasActionOk() (*AliasActionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AliasAction, true
}

// SetAliasAction sets field value
func (o *EmbeddedAddressAliasTransactionDTO) SetAliasAction(v AliasActionEnum) {
	o.AliasAction = v
}

func (o EmbeddedAddressAliasTransactionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddedAddressAliasTransactionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signerPublicKey"] = o.SignerPublicKey
	toSerialize["version"] = o.Version
	toSerialize["network"] = o.Network
	toSerialize["type"] = o.Type
	toSerialize["namespaceId"] = o.NamespaceId
	toSerialize["address"] = o.Address
	toSerialize["aliasAction"] = o.AliasAction
	return toSerialize, nil
}

func (o *EmbeddedAddressAliasTransactionDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signerPublicKey",
		"version",
		"network",
		"type",
		"namespaceId",
		"address",
		"aliasAction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmbeddedAddressAliasTransactionDTO := _EmbeddedAddressAliasTransactionDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmbeddedAddressAliasTransactionDTO)

	if err != nil {
		return err
	}

	*o = EmbeddedAddressAliasTransactionDTO(varEmbeddedAddressAliasTransactionDTO)

	return err
}

type NullableEmbeddedAddressAliasTransactionDTO struct {
	value *EmbeddedAddressAliasTransactionDTO
	isSet bool
}

func (v NullableEmbeddedAddressAliasTransactionDTO) Get() *EmbeddedAddressAliasTransactionDTO {
	return v.value
}

func (v *NullableEmbeddedAddressAliasTransactionDTO) Set(val *EmbeddedAddressAliasTransactionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddedAddressAliasTransactionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddedAddressAliasTransactionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddedAddressAliasTransactionDTO(val *EmbeddedAddressAliasTransactionDTO) *NullableEmbeddedAddressAliasTransactionDTO {
	return &NullableEmbeddedAddressAliasTransactionDTO{value: val, isSet: true}
}

func (v NullableEmbeddedAddressAliasTransactionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddedAddressAliasTransactionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


