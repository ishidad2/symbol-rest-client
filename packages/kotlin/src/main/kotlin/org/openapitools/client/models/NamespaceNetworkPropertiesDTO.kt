/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param maxNameSize Maximum namespace name size.
 * @param maxChildNamespaces Maximum number of children for a root namespace.
 * @param maxNamespaceDepth Maximum namespace depth.
 * @param minNamespaceDuration Minimum namespace duration.
 * @param maxNamespaceDuration Maximum namespace duration.
 * @param namespaceGracePeriodDuration Grace period during which time only the previous owner can renew an expired namespace.
 * @param reservedRootNamespaceNames Reserved root namespaces that cannot be claimed.
 * @param namespaceRentalFeeSinkAddress Address encoded using a 32-character set.
 * @param rootNamespaceRentalFeePerBlock Root namespace rental fee per block.
 * @param childNamespaceRentalFee Child namespace rental fee.
 */


data class NamespaceNetworkPropertiesDTO (

    /* Maximum namespace name size. */
    @Json(name = "maxNameSize")
    val maxNameSize: kotlin.String? = null,

    /* Maximum number of children for a root namespace. */
    @Json(name = "maxChildNamespaces")
    val maxChildNamespaces: kotlin.String? = null,

    /* Maximum namespace depth. */
    @Json(name = "maxNamespaceDepth")
    val maxNamespaceDepth: kotlin.String? = null,

    /* Minimum namespace duration. */
    @Json(name = "minNamespaceDuration")
    val minNamespaceDuration: kotlin.String? = null,

    /* Maximum namespace duration. */
    @Json(name = "maxNamespaceDuration")
    val maxNamespaceDuration: kotlin.String? = null,

    /* Grace period during which time only the previous owner can renew an expired namespace. */
    @Json(name = "namespaceGracePeriodDuration")
    val namespaceGracePeriodDuration: kotlin.String? = null,

    /* Reserved root namespaces that cannot be claimed. */
    @Json(name = "reservedRootNamespaceNames")
    val reservedRootNamespaceNames: kotlin.String? = null,

    /* Address encoded using a 32-character set. */
    @Json(name = "namespaceRentalFeeSinkAddress")
    val namespaceRentalFeeSinkAddress: kotlin.String? = null,

    /* Root namespace rental fee per block. */
    @Json(name = "rootNamespaceRentalFeePerBlock")
    val rootNamespaceRentalFeePerBlock: kotlin.String? = null,

    /* Child namespace rental fee. */
    @Json(name = "childNamespaceRentalFee")
    val childNamespaceRentalFee: kotlin.String? = null

)

