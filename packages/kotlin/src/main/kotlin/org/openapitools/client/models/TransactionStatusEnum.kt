/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * List of status errors that can be returned via the status channel after announcing a transaction: * Success * Neutral * Failure * Failure_Core_Past_Deadline - Validation failed because the deadline passed. * Failure_Core_Future_Deadline - Validation failed because the deadline is too far in the future. * Failure_Core_Insufficient_Balance - Validation failed because the account has an insufficient balance. * Failure_Core_Too_Many_Transactions - Validation failed because there are too many transactions in a block. * Failure_Core_Nemesis_Account_Signed_After_Nemesis_Block - Validation failed because an entity originated from the nemesis account after the nemesis block. * Failure_Core_Wrong_Network - Validation failed because the entity has the wrong network specified. * Failure_Core_Invalid_Address - Validation failed because an address is invalid. * Failure_Core_Invalid_Version - Validation failed because entity version is invalid. * Failure_Core_Invalid_Transaction_Fee - Validation failed because a transaction fee is invalid. * Failure_Core_Block_Harvester_Ineligible - Validation failed because a block was harvested by an ineligible harvester. * Failure_Core_Zero_Address - Validation failed because an address is zero. * Failure_Core_Zero_Public_Key - Validation failed because a public key is zero. * Failure_Core_Nonzero_Internal_Padding - Validation failed because internal padding is nonzero. * Failure_Core_Address_Collision - Validation failed because an address collision is detected. * Failure_Core_Importance_Block_Mismatch - Validation failed because the block does not match the schema of an importance block. * Failure_Core_Unexpected_Block_Type - Validation failed because the block type is unexpected. * Failure_Core_Block_Explicit_Transactions_Hash_Mismatch - Validation failed because a block did not have the expected transactions hash at a specified height. * Failure_Core_Invalid_Link_Action - Validation failed because link action is invalid. * Failure_Core_Link_Already_Exists - Validation failed because main account is already linked to another account. * Failure_Core_Inconsistent_Unlink_Data - Validation failed because unlink data is not consistent with existing account link. * Failure_Core_Invalid_Link_Range - Validation failed because link range is invalid. * Failure_Core_Too_Many_Links - Validation failed because main account has too many links of the specified type. * Failure_Core_Link_Start_Epoch_Invalid - Validation failed because the start epoch is invalid. * Failure_Hash_Already_Exists * Failure_Signature_Not_Verifiable - Validation failed because the verification of the signature failed. * Failure_AccountLink_Link_Already_Exists - Validation failed because main account is already linked to another account. * Failure_AccountLink_Inconsistent_Unlink_Data - Validation failed because unlink data is not consistent with existing account link. * Failure_AccountLink_Unknown_Link - Validation failed because main account is not linked to another account. * Failure_AccountLink_Remote_Account_Ineligible - Validation failed because link is attempting to convert ineligible account to remote. * Failure_AccountLink_Remote_Account_Signer_Prohibited - Validation failed because remote is not allowed to sign a transaction. * Failure_AccountLink_Remote_Account_Participant_Prohibited - Validation failed because remote is not allowed to participate in the transaction. * Failure_Aggregate_Too_Many_Transactions - Validation failed because aggregate has too many transactions. * Failure_Aggregate_No_Transactions - Validation failed because aggregate does not have any transactions. * Failure_Aggregate_Too_Many_Cosignatures - Validation failed because aggregate has too many cosignatures. * Failure_Aggregate_Redundant_Cosignatures - Validation failed because redundant cosignatures are present. * Failure_Aggregate_Ineligible_Cosignatories - Validation failed because at least one cosignatory is ineligible. * Failure_Aggregate_Missing_Cosignatures - Validation failed because at least one required cosignature is missing. * Failure_Aggregate_Transactions_Hash_Mismatch - Validation failed because the aggregate transactions hash does not match the calculated value. * Failure_LockHash_Invalid_Mosaic_Id - Validation failed because lock does not allow the specified mosaic. * Failure_LockHash_Invalid_Mosaic_Amount - Validation failed because lock does not allow the specified amount. * Failure_LockHash_Hash_Already_Exists - Validation failed because hash is already present in cache. * Failure_LockHash_Unknown_Hash - Validation failed because hash is not present in cache. * Failure_LockHash_Inactive_Hash - Validation failed because hash is inactive. * Failure_LockHash_Invalid_Duration - Validation failed because duration is too long. * Failure_LockSecret_Invalid_Hash_Algorithm - Validation failed because hash algorithm for lock type secret is invalid. * Failure_LockSecret_Hash_Already_Exists - Validation failed because hash is already present in cache. * Failure_LockSecret_Proof_Size_Out_Of_Bounds - Validation failed because proof is too small or too large. * Failure_LockSecret_Secret_Mismatch - Validation failed because secret does not match proof. * Failure_LockSecret_Unknown_Composite_Key - Validation failed because composite key is unknown. * Failure_LockSecret_Inactive_Secret - Validation failed because secret is inactive. * Failure_LockSecret_Hash_Algorithm_Mismatch - Validation failed because hash algorithm does not match. * Failure_LockSecret_Invalid_Duration - Validation failed because duration is too long. * Failure_Metadata_Value_Too_Small - Validation failed because the metadata value is too small. * Failure_Metadata_Value_Too_Large - Validation failed because the metadata value is too large. * Failure_Metadata_Value_Size_Delta_Too_Large - Validation failed because the metadata value size delta is larger in magnitude than the value size. * Failure_Metadata_Value_Size_Delta_Mismatch - Validation failed because the metadata value size delta does not match expected value based on the current state. * Failure_Metadata_Value_Change_Irreversible - Validation failed because a metadata value change (truncation) is irreversible. * Failure_Mosaic_Invalid_Duration - Validation failed because the duration has an invalid value. * Failure_Mosaic_Invalid_Name - Validation failed because the name is invalid. * Failure_Mosaic_Name_Id_Mismatch - Validation failed because the name and id don't match. * Failure_Mosaic_Expired - Validation failed because the parent is expired. * Failure_Mosaic_Owner_Conflict - Validation failed because the parent owner conflicts with the child owner. * Failure_Mosaic_Id_Mismatch - Validation failed because the id is not the expected id generated from signer and nonce. * Failure_Mosaic_Parent_Id_Conflict - Validation failed because the existing parent id does not match the supplied parent id. * Failure_Mosaic_Invalid_Property - Validation failed because a mosaic property is invalid. * Failure_Mosaic_Invalid_Flags - Validation failed because the mosaic flags are invalid. * Failure_Mosaic_Invalid_Divisibility - Validation failed because the mosaic divisibility is invalid. * Failure_Mosaic_Invalid_Supply_Change_Action - Validation failed because the mosaic supply change action is invalid. * Failure_Mosaic_Invalid_Supply_Change_Amount - Validation failed because the mosaic supply change amount is invalid. * Failure_Mosaic_Invalid_Id - Validation failed because the mosaic id is invalid. * Failure_Mosaic_Modification_Disallowed - Validation failed because mosaic modification is not allowed. * Failure_Mosaic_Modification_No_Changes - Validation failed because mosaic modification would not result in any changes. * Failure_Mosaic_Supply_Immutable - Validation failed because the mosaic supply is immutable. * Failure_Mosaic_Supply_Negative - Validation failed because the resulting mosaic supply is negative. * Failure_Mosaic_Supply_Exceeded - Validation failed because the resulting mosaic supply exceeds the maximum allowed value. * Failure_Mosaic_Non_Transferable - Validation failed because the mosaic is not transferable. * Failure_Mosaic_Max_Mosaics_Exceeded - Validation failed because the credit of the mosaic would exceed the maximum of different mosaics an account is allowed to own. * Failure_Mosaic_Required_Property_Flag_Unset - Validation failed because the mosaic has at least one required property flag unset. * Failure_Multisig_Account_In_Both_Sets - Validation failed because account is specified to be both added and removed. * Failure_Multisig_Multiple_Deletes - Validation failed because multiple removals are present. * Failure_Multisig_Redundant_Modification - Validation failed because a modification is redundant. * Failure_Multisig_Unknown_Multisig_Account - Validation failed because account is not in multisig cache. * Failure_Multisig_Not_A_Cosignatory - Validation failed because account to be removed is not present. * Failure_Multisig_Already_A_Cosignatory - Validation failed because account to be added is already a cosignatory. * Failure_Multisig_Min_Setting_Out_Of_Range - Validation failed because new minimum settings are out of range. * Failure_Multisig_Min_Setting_Larger_Than_Num_Cosignatories - Validation failed because min settings are larger than number of cosignatories. * Failure_Multisig_Invalid_Modification_Action - Validation failed because the modification action is invalid. * Failure_Multisig_Max_Cosigned_Accounts - Validation failed because the cosignatory already cosigns the maximum number of accounts. * Failure_Multisig_Max_Cosignatories - Validation failed because the multisig account already has the maximum number of cosignatories. * Failure_Multisig_Loop - Validation failed because a multisig loop is created. * Failure_Multisig_Max_Multisig_Depth - Validation failed because the max multisig depth is exceeded. * Failure_Multisig_Operation_Prohibited_By_Account - Validation failed because an operation is not permitted by a multisig account. * Failure_Namespace_Invalid_Duration - Validation failed because the duration has an invalid value. * Failure_Namespace_Invalid_Name - Validation failed because the name is invalid. * Failure_Namespace_Name_Id_Mismatch - Validation failed because the name and id don't match. * Failure_Namespace_Expired - Validation failed because the parent is expired. * Failure_Namespace_Owner_Conflict - Validation failed because the parent owner conflicts with the child owner. * Failure_Namespace_Id_Mismatch - Validation failed because the id is not the expected id generated from signer and nonce. * Failure_Namespace_Invalid_Registration_Type - Validation failed because the namespace registration type is invalid. * Failure_Namespace_Root_Name_Reserved - Validation failed because the root namespace has a reserved name. * Failure_Namespace_Too_Deep - Validation failed because the resulting namespace would exceed the maximum allowed namespace depth. * Failure_Namespace_Unknown_Parent - Validation failed because the namespace parent is unknown. * Failure_Namespace_Already_Exists - Validation failed because the namespace already exists. * Failure_Namespace_Already_Active - Validation failed because the namespace is already active. * Failure_Namespace_Eternal_After_Nemesis_Block - Validation failed because an eternal namespace was received after the nemesis block. * Failure_Namespace_Max_Children_Exceeded - Validation failed because the maximum number of children for a root namespace was exceeded. * Failure_Namespace_Alias_Invalid_Action - Validation failed because alias action is invalid. * Failure_Namespace_Unknown - Validation failed because namespace does not exist. * Failure_Namespace_Alias_Already_Exists - Validation failed because namespace is already linked to an alias. * Failure_Namespace_Unknown_Alias - Validation failed because namespace is not linked to an alias. * Failure_Namespace_Alias_Inconsistent_Unlink_Type - Validation failed because unlink type is not consistent with existing alias. * Failure_Namespace_Alias_Inconsistent_Unlink_Data - Validation failed because unlink data is not consistent with existing alias. * Failure_Namespace_Alias_Invalid_Address - Validation failed because aliased address is invalid. * Failure_RestrictionAccount_Invalid_Restriction_Flags - Validation failed because the account restriction flags are invalid. * Failure_RestrictionAccount_Invalid_Modification_Action - Validation failed because a modification action is invalid. * Failure_RestrictionAccount_Invalid_Modification_Address - Validation failed because a modification address is invalid. * Failure_RestrictionAccount_Modification_Operation_Type_Incompatible - Validation failed because the operation type is incompatible. *Note*: This indicates that the existing restrictions have a different operation type than that specified in the notification. * Failure_RestrictionAccount_Redundant_Modification - Validation failed because a modification is redundant. * Failure_RestrictionAccount_Invalid_Modification - Validation failed because a value is not in the container. * Failure_RestrictionAccount_Modification_Count_Exceeded - Validation failed because the transaction has too many modifications. * Failure_RestrictionAccount_No_Modifications - Validation failed because the transaction has no modifications. * Failure_RestrictionAccount_Values_Count_Exceeded - Validation failed because the resulting account restriction has too many values. * Failure_RestrictionAccount_Invalid_Value - Validation failed because the account restriction value is invalid. * Failure_RestrictionAccount_Address_Interaction_Prohibited - Validation failed because the addresses involved in the transaction are not allowed to interact. * Failure_RestrictionAccount_Mosaic_Transfer_Prohibited - Validation failed because the mosaic transfer is prohibited by the recipient. * Failure_RestrictionAccount_Operation_Type_Prohibited - Validation failed because the operation type is not allowed to be initiated by the signer. * Failure_RestrictionMosaic_Invalid_Restriction_Type - Validation failed because the mosaic restriction type is invalid. * Failure_RestrictionMosaic_Previous_Value_Mismatch - Validation failed because specified previous value does not match current value. * Failure_RestrictionMosaic_Previous_Value_Must_Be_Zero - Validation failed because specified previous value is nonzero. * Failure_RestrictionMosaic_Max_Restrictions_Exceeded - Validation failed because the maximum number of restrictions would be exceeded. * Failure_RestrictionMosaic_Cannot_Delete_Nonexistent_Restriction - Validation failed because nonexistent restriction cannot be deleted. * Failure_RestrictionMosaic_Unknown_Global_Restriction - Validation failed because required global restriction does not exist. * Failure_RestrictionMosaic_Invalid_Global_Restriction - Validation failed because mosaic has invalid global restriction. * Failure_RestrictionMosaic_Account_Unauthorized - Validation failed because account lacks proper permissions to move mosaic. * Failure_Transfer_Message_Too_Large - Validation failed because the message is too large. * Failure_Transfer_Out_Of_Order_Mosaics - Validation failed because mosaics are out of order. * Failure_Chain_Unlinked - Validation failed because a block was received that did not link with the existing chain. * Failure_Chain_Block_Not_Hit - Validation failed because a block was received that is not a hit. * Failure_Chain_Block_Inconsistent_State_Hash - Validation failed because a block was received that has an inconsistent state hash. * Failure_Chain_Block_Inconsistent_Receipts_Hash - Validation failed because a block was received that has an inconsistent receipts hash. * Failure_Chain_Block_Invalid_Vrf_Proof - Validation failed because the Vrf proof is invalid. * Failure_Chain_Block_Unknown_Signer - Validation failed because the block signer is unknown. * Failure_Chain_Unconfirmed_Cache_Too_Full - Validation failed because the unconfirmed cache is too full. * Failure_Consumer_Empty_Input - Validation failed because the consumer input is empty. * Failure_Consumer_Block_Transactions_Hash_Mismatch - Validation failed because the block transactions hash does not match the calculated value. * Neutral_Consumer_Hash_In_Recency_Cache - Validation failed because an entity hash is present in the recency cache. * Failure_Consumer_Remote_Chain_Too_Many_Blocks - Validation failed because the chain part has too many blocks. * Failure_Consumer_Remote_Chain_Improper_Link - Validation failed because the chain is internally improperly linked. * Failure_Consumer_Remote_Chain_Duplicate_Transactions - Validation failed because the chain part contains duplicate transactions. * Failure_Consumer_Remote_Chain_Unlinked - Validation failed because the chain part does not link to the current chain. * Failure_Consumer_Remote_Chain_Difficulties_Mismatch - Validation failed because the remote chain difficulties do not match the calculated difficulties. * Failure_Consumer_Remote_Chain_Score_Not_Better - Validation failed because the remote chain score is not better. * Failure_Consumer_Remote_Chain_Too_Far_Behind - Validation failed because the remote chain is too far behind. * Failure_Consumer_Remote_Chain_Too_Far_In_Future - Validation failed because the remote chain timestamp is too far in the future. * Failure_Consumer_Batch_Signature_Not_Verifiable - Validation failed because the verification of the signature failed during a batch operation. * Failure_Consumer_Remote_Chain_Improper_Importance_Link - Validation failed because the remote chain has an improper importance link. * Failure_Extension_Partial_Transaction_Cache_Prune - Validation failed because the partial transaction was pruned from the temporal cache. * Failure_Extension_Partial_Transaction_Dependency_Removed - Validation failed because the partial transaction was pruned from the temporal cache due to its dependency being removed. * Failure_Extension_Read_Rate_Limit_Exceeded - Validation failed because socket read rate limit was exceeded. 
 *
 * Values: success,neutral,failure,failureCorePastDeadline,failureCoreFutureDeadline,failureCoreInsufficientBalance,failureCoreTooManyTransactions,failureCoreNemesisAccountSignedAfterNemesisBlock,failureCoreWrongNetwork,failureCoreInvalidAddress,failureCoreInvalidVersion,failureCoreInvalidTransactionFee,failureCoreBlockHarvesterIneligible,failureCoreZeroAddress,failureCoreZeroPublicKey,failureCoreNonzeroInternalPadding,failureCoreAddressCollision,failureCoreImportanceBlockMismatch,failureCoreUnexpectedBlockType,failureCoreBlockExplicitTransactionsHashMismatch,failureCoreInvalidLinkAction,failureCoreLinkAlreadyExists,failureCoreInconsistentUnlinkData,failureCoreInvalidLinkRange,failureCoreTooManyLinks,failureCoreLinkStartEpochInvalid,failureHashAlreadyExists,failureSignatureNotVerifiable,failureAccountLinkLinkAlreadyExists,failureAccountLinkInconsistentUnlinkData,failureAccountLinkUnknownLink,failureAccountLinkRemoteAccountIneligible,failureAccountLinkRemoteAccountSignerProhibited,failureAccountLinkRemoteAccountParticipantProhibited,failureAggregateTooManyTransactions,failureAggregateNoTransactions,failureAggregateTooManyCosignatures,failureAggregateRedundantCosignatures,failureAggregateIneligibleCosignatories,failureAggregateMissingCosignatures,failureAggregateTransactionsHashMismatch,failureLockHashInvalidMosaicId,failureLockHashInvalidMosaicAmount,failureLockHashHashAlreadyExists,failureLockHashUnknownHash,failureLockHashInactiveHash,failureLockHashInvalidDuration,failureLockSecretInvalidHashAlgorithm,failureLockSecretHashAlreadyExists,failureLockSecretProofSizeOutOfBounds,failureLockSecretSecretMismatch,failureLockSecretUnknownCompositeKey,failureLockSecretInactiveSecret,failureLockSecretHashAlgorithmMismatch,failureLockSecretInvalidDuration,failureMetadataValueTooSmall,failureMetadataValueTooLarge,failureMetadataValueSizeDeltaTooLarge,failureMetadataValueSizeDeltaMismatch,failureMetadataValueChangeIrreversible,failureMosaicInvalidDuration,failureMosaicInvalidName,failureMosaicNameIdMismatch,failureMosaicExpired,failureMosaicOwnerConflict,failureMosaicIdMismatch,failureMosaicParentIdConflict,failureMosaicInvalidProperty,failureMosaicInvalidFlags,failureMosaicInvalidDivisibility,failureMosaicInvalidSupplyChangeAction,failureMosaicInvalidSupplyChangeAmount,failureMosaicInvalidId,failureMosaicModificationDisallowed,failureMosaicModificationNoChanges,failureMosaicSupplyImmutable,failureMosaicSupplyNegative,failureMosaicSupplyExceeded,failureMosaicNonTransferable,failureMosaicMaxMosaicsExceeded,failureMosaicRequiredPropertyFlagUnset,failureMultisigAccountInBothSets,failureMultisigMultipleDeletes,failureMultisigRedundantModification,failureMultisigUnknownMultisigAccount,failureMultisigNotACosignatory,failureMultisigAlreadyACosignatory,failureMultisigMinSettingOutOfRange,failureMultisigMinSettingLargerThanNumCosignatories,failureMultisigInvalidModificationAction,failureMultisigMaxCosignedAccounts,failureMultisigMaxCosignatories,failureMultisigLoop,failureMultisigMaxMultisigDepth,failureMultisigOperationProhibitedByAccount,failureNamespaceInvalidDuration,failureNamespaceInvalidName,failureNamespaceNameIdMismatch,failureNamespaceExpired,failureNamespaceOwnerConflict,failureNamespaceIdMismatch,failureNamespaceInvalidRegistrationType,failureNamespaceRootNameReserved,failureNamespaceTooDeep,failureNamespaceUnknownParent,failureNamespaceAlreadyExists,failureNamespaceAlreadyActive,failureNamespaceEternalAfterNemesisBlock,failureNamespaceMaxChildrenExceeded,failureNamespaceAliasInvalidAction,failureNamespaceUnknown,failureNamespaceAliasAlreadyExists,failureNamespaceUnknownAlias,failureNamespaceAliasInconsistentUnlinkType,failureNamespaceAliasInconsistentUnlinkData,failureNamespaceAliasInvalidAddress,failureRestrictionAccountInvalidRestrictionFlags,failureRestrictionAccountInvalidModificationAction,failureRestrictionAccountInvalidModificationAddress,failureRestrictionAccountModificationOperationTypeIncompatible,failureRestrictionAccountRedundantModification,failureRestrictionAccountInvalidModification,failureRestrictionAccountModificationCountExceeded,failureRestrictionAccountNoModifications,failureRestrictionAccountValuesCountExceeded,failureRestrictionAccountInvalidValue,failureRestrictionAccountAddressInteractionProhibited,failureRestrictionAccountMosaicTransferProhibited,failureRestrictionAccountOperationTypeProhibited,failureRestrictionMosaicInvalidRestrictionType,failureRestrictionMosaicPreviousValueMismatch,failureRestrictionMosaicPreviousValueMustBeZero,failureRestrictionMosaicMaxRestrictionsExceeded,failureRestrictionMosaicCannotDeleteNonexistentRestriction,failureRestrictionMosaicUnknownGlobalRestriction,failureRestrictionMosaicInvalidGlobalRestriction,failureRestrictionMosaicAccountUnauthorized,failureTransferMessageTooLarge,failureTransferOutOfOrderMosaics,failureChainUnlinked,failureChainBlockNotHit,failureChainBlockInconsistentStateHash,failureChainBlockInconsistentReceiptsHash,failureChainBlockInvalidVrfProof,failureChainBlockUnknownSigner,failureChainUnconfirmedCacheTooFull,failureConsumerEmptyInput,failureConsumerBlockTransactionsHashMismatch,neutralConsumerHashInRecencyCache,failureConsumerRemoteChainTooManyBlocks,failureConsumerRemoteChainImproperLink,failureConsumerRemoteChainDuplicateTransactions,failureConsumerRemoteChainUnlinked,failureConsumerRemoteChainDifficultiesMismatch,failureConsumerRemoteChainScoreNotBetter,failureConsumerRemoteChainTooFarBehind,failureConsumerRemoteChainTooFarInFuture,failureConsumerBatchSignatureNotVerifiable,failureConsumerRemoteChainImproperImportanceLink,failureExtensionPartialTransactionCachePrune,failureExtensionPartialTransactionDependencyRemoved,failureExtensionReadRateLimitExceeded
 */

@JsonClass(generateAdapter = false)
enum class TransactionStatusEnum(val value: kotlin.String) {

    @Json(name = "Success")
    success("Success"),

    @Json(name = "Neutral")
    neutral("Neutral"),

    @Json(name = "Failure")
    failure("Failure"),

    @Json(name = "Failure_Core_Past_Deadline")
    failureCorePastDeadline("Failure_Core_Past_Deadline"),

    @Json(name = "Failure_Core_Future_Deadline")
    failureCoreFutureDeadline("Failure_Core_Future_Deadline"),

    @Json(name = "Failure_Core_Insufficient_Balance")
    failureCoreInsufficientBalance("Failure_Core_Insufficient_Balance"),

    @Json(name = "Failure_Core_Too_Many_Transactions")
    failureCoreTooManyTransactions("Failure_Core_Too_Many_Transactions"),

    @Json(name = "Failure_Core_Nemesis_Account_Signed_After_Nemesis_Block")
    failureCoreNemesisAccountSignedAfterNemesisBlock("Failure_Core_Nemesis_Account_Signed_After_Nemesis_Block"),

    @Json(name = "Failure_Core_Wrong_Network")
    failureCoreWrongNetwork("Failure_Core_Wrong_Network"),

    @Json(name = "Failure_Core_Invalid_Address")
    failureCoreInvalidAddress("Failure_Core_Invalid_Address"),

    @Json(name = "Failure_Core_Invalid_Version")
    failureCoreInvalidVersion("Failure_Core_Invalid_Version"),

    @Json(name = "Failure_Core_Invalid_Transaction_Fee")
    failureCoreInvalidTransactionFee("Failure_Core_Invalid_Transaction_Fee"),

    @Json(name = "Failure_Core_Block_Harvester_Ineligible")
    failureCoreBlockHarvesterIneligible("Failure_Core_Block_Harvester_Ineligible"),

    @Json(name = "Failure_Core_Zero_Address")
    failureCoreZeroAddress("Failure_Core_Zero_Address"),

    @Json(name = "Failure_Core_Zero_Public_Key")
    failureCoreZeroPublicKey("Failure_Core_Zero_Public_Key"),

    @Json(name = "Failure_Core_Nonzero_Internal_Padding")
    failureCoreNonzeroInternalPadding("Failure_Core_Nonzero_Internal_Padding"),

    @Json(name = "Failure_Core_Address_Collision")
    failureCoreAddressCollision("Failure_Core_Address_Collision"),

    @Json(name = "Failure_Core_Importance_Block_Mismatch")
    failureCoreImportanceBlockMismatch("Failure_Core_Importance_Block_Mismatch"),

    @Json(name = "Failure_Core_Unexpected_Block_Type")
    failureCoreUnexpectedBlockType("Failure_Core_Unexpected_Block_Type"),

    @Json(name = "Failure_Core_Block_Explicit_Transactions_Hash_Mismatch")
    failureCoreBlockExplicitTransactionsHashMismatch("Failure_Core_Block_Explicit_Transactions_Hash_Mismatch"),

    @Json(name = "Failure_Core_Invalid_Link_Action")
    failureCoreInvalidLinkAction("Failure_Core_Invalid_Link_Action"),

    @Json(name = "Failure_Core_Link_Already_Exists")
    failureCoreLinkAlreadyExists("Failure_Core_Link_Already_Exists"),

    @Json(name = "Failure_Core_Inconsistent_Unlink_Data")
    failureCoreInconsistentUnlinkData("Failure_Core_Inconsistent_Unlink_Data"),

    @Json(name = "Failure_Core_Invalid_Link_Range")
    failureCoreInvalidLinkRange("Failure_Core_Invalid_Link_Range"),

    @Json(name = "Failure_Core_Too_Many_Links")
    failureCoreTooManyLinks("Failure_Core_Too_Many_Links"),

    @Json(name = "Failure_Core_Link_Start_Epoch_Invalid")
    failureCoreLinkStartEpochInvalid("Failure_Core_Link_Start_Epoch_Invalid"),

    @Json(name = "Failure_Hash_Already_Exists")
    failureHashAlreadyExists("Failure_Hash_Already_Exists"),

    @Json(name = "Failure_Signature_Not_Verifiable")
    failureSignatureNotVerifiable("Failure_Signature_Not_Verifiable"),

    @Json(name = "Failure_AccountLink_Link_Already_Exists")
    failureAccountLinkLinkAlreadyExists("Failure_AccountLink_Link_Already_Exists"),

    @Json(name = "Failure_AccountLink_Inconsistent_Unlink_Data")
    failureAccountLinkInconsistentUnlinkData("Failure_AccountLink_Inconsistent_Unlink_Data"),

    @Json(name = "Failure_AccountLink_Unknown_Link")
    failureAccountLinkUnknownLink("Failure_AccountLink_Unknown_Link"),

    @Json(name = "Failure_AccountLink_Remote_Account_Ineligible")
    failureAccountLinkRemoteAccountIneligible("Failure_AccountLink_Remote_Account_Ineligible"),

    @Json(name = "Failure_AccountLink_Remote_Account_Signer_Prohibited")
    failureAccountLinkRemoteAccountSignerProhibited("Failure_AccountLink_Remote_Account_Signer_Prohibited"),

    @Json(name = "Failure_AccountLink_Remote_Account_Participant_Prohibited")
    failureAccountLinkRemoteAccountParticipantProhibited("Failure_AccountLink_Remote_Account_Participant_Prohibited"),

    @Json(name = "Failure_Aggregate_Too_Many_Transactions")
    failureAggregateTooManyTransactions("Failure_Aggregate_Too_Many_Transactions"),

    @Json(name = "Failure_Aggregate_No_Transactions")
    failureAggregateNoTransactions("Failure_Aggregate_No_Transactions"),

    @Json(name = "Failure_Aggregate_Too_Many_Cosignatures")
    failureAggregateTooManyCosignatures("Failure_Aggregate_Too_Many_Cosignatures"),

    @Json(name = "Failure_Aggregate_Redundant_Cosignatures")
    failureAggregateRedundantCosignatures("Failure_Aggregate_Redundant_Cosignatures"),

    @Json(name = "Failure_Aggregate_Ineligible_Cosignatories")
    failureAggregateIneligibleCosignatories("Failure_Aggregate_Ineligible_Cosignatories"),

    @Json(name = "Failure_Aggregate_Missing_Cosignatures")
    failureAggregateMissingCosignatures("Failure_Aggregate_Missing_Cosignatures"),

    @Json(name = "Failure_Aggregate_Transactions_Hash_Mismatch")
    failureAggregateTransactionsHashMismatch("Failure_Aggregate_Transactions_Hash_Mismatch"),

    @Json(name = "Failure_LockHash_Invalid_Mosaic_Id")
    failureLockHashInvalidMosaicId("Failure_LockHash_Invalid_Mosaic_Id"),

    @Json(name = "Failure_LockHash_Invalid_Mosaic_Amount")
    failureLockHashInvalidMosaicAmount("Failure_LockHash_Invalid_Mosaic_Amount"),

    @Json(name = "Failure_LockHash_Hash_Already_Exists")
    failureLockHashHashAlreadyExists("Failure_LockHash_Hash_Already_Exists"),

    @Json(name = "Failure_LockHash_Unknown_Hash")
    failureLockHashUnknownHash("Failure_LockHash_Unknown_Hash"),

    @Json(name = "Failure_LockHash_Inactive_Hash")
    failureLockHashInactiveHash("Failure_LockHash_Inactive_Hash"),

    @Json(name = "Failure_LockHash_Invalid_Duration")
    failureLockHashInvalidDuration("Failure_LockHash_Invalid_Duration"),

    @Json(name = "Failure_LockSecret_Invalid_Hash_Algorithm")
    failureLockSecretInvalidHashAlgorithm("Failure_LockSecret_Invalid_Hash_Algorithm"),

    @Json(name = "Failure_LockSecret_Hash_Already_Exists")
    failureLockSecretHashAlreadyExists("Failure_LockSecret_Hash_Already_Exists"),

    @Json(name = "Failure_LockSecret_Proof_Size_Out_Of_Bounds")
    failureLockSecretProofSizeOutOfBounds("Failure_LockSecret_Proof_Size_Out_Of_Bounds"),

    @Json(name = "Failure_LockSecret_Secret_Mismatch")
    failureLockSecretSecretMismatch("Failure_LockSecret_Secret_Mismatch"),

    @Json(name = "Failure_LockSecret_Unknown_Composite_Key")
    failureLockSecretUnknownCompositeKey("Failure_LockSecret_Unknown_Composite_Key"),

    @Json(name = "Failure_LockSecret_Inactive_Secret")
    failureLockSecretInactiveSecret("Failure_LockSecret_Inactive_Secret"),

    @Json(name = "Failure_LockSecret_Hash_Algorithm_Mismatch")
    failureLockSecretHashAlgorithmMismatch("Failure_LockSecret_Hash_Algorithm_Mismatch"),

    @Json(name = "Failure_LockSecret_Invalid_Duration")
    failureLockSecretInvalidDuration("Failure_LockSecret_Invalid_Duration"),

    @Json(name = "Failure_Metadata_Value_Too_Small")
    failureMetadataValueTooSmall("Failure_Metadata_Value_Too_Small"),

    @Json(name = "Failure_Metadata_Value_Too_Large")
    failureMetadataValueTooLarge("Failure_Metadata_Value_Too_Large"),

    @Json(name = "Failure_Metadata_Value_Size_Delta_Too_Large")
    failureMetadataValueSizeDeltaTooLarge("Failure_Metadata_Value_Size_Delta_Too_Large"),

    @Json(name = "Failure_Metadata_Value_Size_Delta_Mismatch")
    failureMetadataValueSizeDeltaMismatch("Failure_Metadata_Value_Size_Delta_Mismatch"),

    @Json(name = "Failure_Metadata_Value_Change_Irreversible")
    failureMetadataValueChangeIrreversible("Failure_Metadata_Value_Change_Irreversible"),

    @Json(name = "Failure_Mosaic_Invalid_Duration")
    failureMosaicInvalidDuration("Failure_Mosaic_Invalid_Duration"),

    @Json(name = "Failure_Mosaic_Invalid_Name")
    failureMosaicInvalidName("Failure_Mosaic_Invalid_Name"),

    @Json(name = "Failure_Mosaic_Name_Id_Mismatch")
    failureMosaicNameIdMismatch("Failure_Mosaic_Name_Id_Mismatch"),

    @Json(name = "Failure_Mosaic_Expired")
    failureMosaicExpired("Failure_Mosaic_Expired"),

    @Json(name = "Failure_Mosaic_Owner_Conflict")
    failureMosaicOwnerConflict("Failure_Mosaic_Owner_Conflict"),

    @Json(name = "Failure_Mosaic_Id_Mismatch")
    failureMosaicIdMismatch("Failure_Mosaic_Id_Mismatch"),

    @Json(name = "Failure_Mosaic_Parent_Id_Conflict")
    failureMosaicParentIdConflict("Failure_Mosaic_Parent_Id_Conflict"),

    @Json(name = "Failure_Mosaic_Invalid_Property")
    failureMosaicInvalidProperty("Failure_Mosaic_Invalid_Property"),

    @Json(name = "Failure_Mosaic_Invalid_Flags")
    failureMosaicInvalidFlags("Failure_Mosaic_Invalid_Flags"),

    @Json(name = "Failure_Mosaic_Invalid_Divisibility")
    failureMosaicInvalidDivisibility("Failure_Mosaic_Invalid_Divisibility"),

    @Json(name = "Failure_Mosaic_Invalid_Supply_Change_Action")
    failureMosaicInvalidSupplyChangeAction("Failure_Mosaic_Invalid_Supply_Change_Action"),

    @Json(name = "Failure_Mosaic_Invalid_Supply_Change_Amount")
    failureMosaicInvalidSupplyChangeAmount("Failure_Mosaic_Invalid_Supply_Change_Amount"),

    @Json(name = "Failure_Mosaic_Invalid_Id")
    failureMosaicInvalidId("Failure_Mosaic_Invalid_Id"),

    @Json(name = "Failure_Mosaic_Modification_Disallowed")
    failureMosaicModificationDisallowed("Failure_Mosaic_Modification_Disallowed"),

    @Json(name = "Failure_Mosaic_Modification_No_Changes")
    failureMosaicModificationNoChanges("Failure_Mosaic_Modification_No_Changes"),

    @Json(name = "Failure_Mosaic_Supply_Immutable")
    failureMosaicSupplyImmutable("Failure_Mosaic_Supply_Immutable"),

    @Json(name = "Failure_Mosaic_Supply_Negative")
    failureMosaicSupplyNegative("Failure_Mosaic_Supply_Negative"),

    @Json(name = "Failure_Mosaic_Supply_Exceeded")
    failureMosaicSupplyExceeded("Failure_Mosaic_Supply_Exceeded"),

    @Json(name = "Failure_Mosaic_Non_Transferable")
    failureMosaicNonTransferable("Failure_Mosaic_Non_Transferable"),

    @Json(name = "Failure_Mosaic_Max_Mosaics_Exceeded")
    failureMosaicMaxMosaicsExceeded("Failure_Mosaic_Max_Mosaics_Exceeded"),

    @Json(name = "Failure_Mosaic_Required_Property_Flag_Unset")
    failureMosaicRequiredPropertyFlagUnset("Failure_Mosaic_Required_Property_Flag_Unset"),

    @Json(name = "Failure_Multisig_Account_In_Both_Sets")
    failureMultisigAccountInBothSets("Failure_Multisig_Account_In_Both_Sets"),

    @Json(name = "Failure_Multisig_Multiple_Deletes")
    failureMultisigMultipleDeletes("Failure_Multisig_Multiple_Deletes"),

    @Json(name = "Failure_Multisig_Redundant_Modification")
    failureMultisigRedundantModification("Failure_Multisig_Redundant_Modification"),

    @Json(name = "Failure_Multisig_Unknown_Multisig_Account")
    failureMultisigUnknownMultisigAccount("Failure_Multisig_Unknown_Multisig_Account"),

    @Json(name = "Failure_Multisig_Not_A_Cosignatory")
    failureMultisigNotACosignatory("Failure_Multisig_Not_A_Cosignatory"),

    @Json(name = "Failure_Multisig_Already_A_Cosignatory")
    failureMultisigAlreadyACosignatory("Failure_Multisig_Already_A_Cosignatory"),

    @Json(name = "Failure_Multisig_Min_Setting_Out_Of_Range")
    failureMultisigMinSettingOutOfRange("Failure_Multisig_Min_Setting_Out_Of_Range"),

    @Json(name = "Failure_Multisig_Min_Setting_Larger_Than_Num_Cosignatories")
    failureMultisigMinSettingLargerThanNumCosignatories("Failure_Multisig_Min_Setting_Larger_Than_Num_Cosignatories"),

    @Json(name = "Failure_Multisig_Invalid_Modification_Action")
    failureMultisigInvalidModificationAction("Failure_Multisig_Invalid_Modification_Action"),

    @Json(name = "Failure_Multisig_Max_Cosigned_Accounts")
    failureMultisigMaxCosignedAccounts("Failure_Multisig_Max_Cosigned_Accounts"),

    @Json(name = "Failure_Multisig_Max_Cosignatories")
    failureMultisigMaxCosignatories("Failure_Multisig_Max_Cosignatories"),

    @Json(name = "Failure_Multisig_Loop")
    failureMultisigLoop("Failure_Multisig_Loop"),

    @Json(name = "Failure_Multisig_Max_Multisig_Depth")
    failureMultisigMaxMultisigDepth("Failure_Multisig_Max_Multisig_Depth"),

    @Json(name = "Failure_Multisig_Operation_Prohibited_By_Account")
    failureMultisigOperationProhibitedByAccount("Failure_Multisig_Operation_Prohibited_By_Account"),

    @Json(name = "Failure_Namespace_Invalid_Duration")
    failureNamespaceInvalidDuration("Failure_Namespace_Invalid_Duration"),

    @Json(name = "Failure_Namespace_Invalid_Name")
    failureNamespaceInvalidName("Failure_Namespace_Invalid_Name"),

    @Json(name = "Failure_Namespace_Name_Id_Mismatch")
    failureNamespaceNameIdMismatch("Failure_Namespace_Name_Id_Mismatch"),

    @Json(name = "Failure_Namespace_Expired")
    failureNamespaceExpired("Failure_Namespace_Expired"),

    @Json(name = "Failure_Namespace_Owner_Conflict")
    failureNamespaceOwnerConflict("Failure_Namespace_Owner_Conflict"),

    @Json(name = "Failure_Namespace_Id_Mismatch")
    failureNamespaceIdMismatch("Failure_Namespace_Id_Mismatch"),

    @Json(name = "Failure_Namespace_Invalid_Registration_Type")
    failureNamespaceInvalidRegistrationType("Failure_Namespace_Invalid_Registration_Type"),

    @Json(name = "Failure_Namespace_Root_Name_Reserved")
    failureNamespaceRootNameReserved("Failure_Namespace_Root_Name_Reserved"),

    @Json(name = "Failure_Namespace_Too_Deep")
    failureNamespaceTooDeep("Failure_Namespace_Too_Deep"),

    @Json(name = "Failure_Namespace_Unknown_Parent")
    failureNamespaceUnknownParent("Failure_Namespace_Unknown_Parent"),

    @Json(name = "Failure_Namespace_Already_Exists")
    failureNamespaceAlreadyExists("Failure_Namespace_Already_Exists"),

    @Json(name = "Failure_Namespace_Already_Active")
    failureNamespaceAlreadyActive("Failure_Namespace_Already_Active"),

    @Json(name = "Failure_Namespace_Eternal_After_Nemesis_Block")
    failureNamespaceEternalAfterNemesisBlock("Failure_Namespace_Eternal_After_Nemesis_Block"),

    @Json(name = "Failure_Namespace_Max_Children_Exceeded")
    failureNamespaceMaxChildrenExceeded("Failure_Namespace_Max_Children_Exceeded"),

    @Json(name = "Failure_Namespace_Alias_Invalid_Action")
    failureNamespaceAliasInvalidAction("Failure_Namespace_Alias_Invalid_Action"),

    @Json(name = "Failure_Namespace_Unknown")
    failureNamespaceUnknown("Failure_Namespace_Unknown"),

    @Json(name = "Failure_Namespace_Alias_Already_Exists")
    failureNamespaceAliasAlreadyExists("Failure_Namespace_Alias_Already_Exists"),

    @Json(name = "Failure_Namespace_Unknown_Alias")
    failureNamespaceUnknownAlias("Failure_Namespace_Unknown_Alias"),

    @Json(name = "Failure_Namespace_Alias_Inconsistent_Unlink_Type")
    failureNamespaceAliasInconsistentUnlinkType("Failure_Namespace_Alias_Inconsistent_Unlink_Type"),

    @Json(name = "Failure_Namespace_Alias_Inconsistent_Unlink_Data")
    failureNamespaceAliasInconsistentUnlinkData("Failure_Namespace_Alias_Inconsistent_Unlink_Data"),

    @Json(name = "Failure_Namespace_Alias_Invalid_Address")
    failureNamespaceAliasInvalidAddress("Failure_Namespace_Alias_Invalid_Address"),

    @Json(name = "Failure_RestrictionAccount_Invalid_Restriction_Flags")
    failureRestrictionAccountInvalidRestrictionFlags("Failure_RestrictionAccount_Invalid_Restriction_Flags"),

    @Json(name = "Failure_RestrictionAccount_Invalid_Modification_Action")
    failureRestrictionAccountInvalidModificationAction("Failure_RestrictionAccount_Invalid_Modification_Action"),

    @Json(name = "Failure_RestrictionAccount_Invalid_Modification_Address")
    failureRestrictionAccountInvalidModificationAddress("Failure_RestrictionAccount_Invalid_Modification_Address"),

    @Json(name = "Failure_RestrictionAccount_Modification_Operation_Type_Incompatible")
    failureRestrictionAccountModificationOperationTypeIncompatible("Failure_RestrictionAccount_Modification_Operation_Type_Incompatible"),

    @Json(name = "Failure_RestrictionAccount_Redundant_Modification")
    failureRestrictionAccountRedundantModification("Failure_RestrictionAccount_Redundant_Modification"),

    @Json(name = "Failure_RestrictionAccount_Invalid_Modification")
    failureRestrictionAccountInvalidModification("Failure_RestrictionAccount_Invalid_Modification"),

    @Json(name = "Failure_RestrictionAccount_Modification_Count_Exceeded")
    failureRestrictionAccountModificationCountExceeded("Failure_RestrictionAccount_Modification_Count_Exceeded"),

    @Json(name = "Failure_RestrictionAccount_No_Modifications")
    failureRestrictionAccountNoModifications("Failure_RestrictionAccount_No_Modifications"),

    @Json(name = "Failure_RestrictionAccount_Values_Count_Exceeded")
    failureRestrictionAccountValuesCountExceeded("Failure_RestrictionAccount_Values_Count_Exceeded"),

    @Json(name = "Failure_RestrictionAccount_Invalid_Value")
    failureRestrictionAccountInvalidValue("Failure_RestrictionAccount_Invalid_Value"),

    @Json(name = "Failure_RestrictionAccount_Address_Interaction_Prohibited")
    failureRestrictionAccountAddressInteractionProhibited("Failure_RestrictionAccount_Address_Interaction_Prohibited"),

    @Json(name = "Failure_RestrictionAccount_Mosaic_Transfer_Prohibited")
    failureRestrictionAccountMosaicTransferProhibited("Failure_RestrictionAccount_Mosaic_Transfer_Prohibited"),

    @Json(name = "Failure_RestrictionAccount_Operation_Type_Prohibited")
    failureRestrictionAccountOperationTypeProhibited("Failure_RestrictionAccount_Operation_Type_Prohibited"),

    @Json(name = "Failure_RestrictionMosaic_Invalid_Restriction_Type")
    failureRestrictionMosaicInvalidRestrictionType("Failure_RestrictionMosaic_Invalid_Restriction_Type"),

    @Json(name = "Failure_RestrictionMosaic_Previous_Value_Mismatch")
    failureRestrictionMosaicPreviousValueMismatch("Failure_RestrictionMosaic_Previous_Value_Mismatch"),

    @Json(name = "Failure_RestrictionMosaic_Previous_Value_Must_Be_Zero")
    failureRestrictionMosaicPreviousValueMustBeZero("Failure_RestrictionMosaic_Previous_Value_Must_Be_Zero"),

    @Json(name = "Failure_RestrictionMosaic_Max_Restrictions_Exceeded")
    failureRestrictionMosaicMaxRestrictionsExceeded("Failure_RestrictionMosaic_Max_Restrictions_Exceeded"),

    @Json(name = "Failure_RestrictionMosaic_Cannot_Delete_Nonexistent_Restriction")
    failureRestrictionMosaicCannotDeleteNonexistentRestriction("Failure_RestrictionMosaic_Cannot_Delete_Nonexistent_Restriction"),

    @Json(name = "Failure_RestrictionMosaic_Unknown_Global_Restriction")
    failureRestrictionMosaicUnknownGlobalRestriction("Failure_RestrictionMosaic_Unknown_Global_Restriction"),

    @Json(name = "Failure_RestrictionMosaic_Invalid_Global_Restriction")
    failureRestrictionMosaicInvalidGlobalRestriction("Failure_RestrictionMosaic_Invalid_Global_Restriction"),

    @Json(name = "Failure_RestrictionMosaic_Account_Unauthorized")
    failureRestrictionMosaicAccountUnauthorized("Failure_RestrictionMosaic_Account_Unauthorized"),

    @Json(name = "Failure_Transfer_Message_Too_Large")
    failureTransferMessageTooLarge("Failure_Transfer_Message_Too_Large"),

    @Json(name = "Failure_Transfer_Out_Of_Order_Mosaics")
    failureTransferOutOfOrderMosaics("Failure_Transfer_Out_Of_Order_Mosaics"),

    @Json(name = "Failure_Chain_Unlinked")
    failureChainUnlinked("Failure_Chain_Unlinked"),

    @Json(name = "Failure_Chain_Block_Not_Hit")
    failureChainBlockNotHit("Failure_Chain_Block_Not_Hit"),

    @Json(name = "Failure_Chain_Block_Inconsistent_State_Hash")
    failureChainBlockInconsistentStateHash("Failure_Chain_Block_Inconsistent_State_Hash"),

    @Json(name = "Failure_Chain_Block_Inconsistent_Receipts_Hash")
    failureChainBlockInconsistentReceiptsHash("Failure_Chain_Block_Inconsistent_Receipts_Hash"),

    @Json(name = "Failure_Chain_Block_Invalid_Vrf_Proof")
    failureChainBlockInvalidVrfProof("Failure_Chain_Block_Invalid_Vrf_Proof"),

    @Json(name = "Failure_Chain_Block_Unknown_Signer")
    failureChainBlockUnknownSigner("Failure_Chain_Block_Unknown_Signer"),

    @Json(name = "Failure_Chain_Unconfirmed_Cache_Too_Full")
    failureChainUnconfirmedCacheTooFull("Failure_Chain_Unconfirmed_Cache_Too_Full"),

    @Json(name = "Failure_Consumer_Empty_Input")
    failureConsumerEmptyInput("Failure_Consumer_Empty_Input"),

    @Json(name = "Failure_Consumer_Block_Transactions_Hash_Mismatch")
    failureConsumerBlockTransactionsHashMismatch("Failure_Consumer_Block_Transactions_Hash_Mismatch"),

    @Json(name = "Neutral_Consumer_Hash_In_Recency_Cache")
    neutralConsumerHashInRecencyCache("Neutral_Consumer_Hash_In_Recency_Cache"),

    @Json(name = "Failure_Consumer_Remote_Chain_Too_Many_Blocks")
    failureConsumerRemoteChainTooManyBlocks("Failure_Consumer_Remote_Chain_Too_Many_Blocks"),

    @Json(name = "Failure_Consumer_Remote_Chain_Improper_Link")
    failureConsumerRemoteChainImproperLink("Failure_Consumer_Remote_Chain_Improper_Link"),

    @Json(name = "Failure_Consumer_Remote_Chain_Duplicate_Transactions")
    failureConsumerRemoteChainDuplicateTransactions("Failure_Consumer_Remote_Chain_Duplicate_Transactions"),

    @Json(name = "Failure_Consumer_Remote_Chain_Unlinked")
    failureConsumerRemoteChainUnlinked("Failure_Consumer_Remote_Chain_Unlinked"),

    @Json(name = "Failure_Consumer_Remote_Chain_Difficulties_Mismatch")
    failureConsumerRemoteChainDifficultiesMismatch("Failure_Consumer_Remote_Chain_Difficulties_Mismatch"),

    @Json(name = "Failure_Consumer_Remote_Chain_Score_Not_Better")
    failureConsumerRemoteChainScoreNotBetter("Failure_Consumer_Remote_Chain_Score_Not_Better"),

    @Json(name = "Failure_Consumer_Remote_Chain_Too_Far_Behind")
    failureConsumerRemoteChainTooFarBehind("Failure_Consumer_Remote_Chain_Too_Far_Behind"),

    @Json(name = "Failure_Consumer_Remote_Chain_Too_Far_In_Future")
    failureConsumerRemoteChainTooFarInFuture("Failure_Consumer_Remote_Chain_Too_Far_In_Future"),

    @Json(name = "Failure_Consumer_Batch_Signature_Not_Verifiable")
    failureConsumerBatchSignatureNotVerifiable("Failure_Consumer_Batch_Signature_Not_Verifiable"),

    @Json(name = "Failure_Consumer_Remote_Chain_Improper_Importance_Link")
    failureConsumerRemoteChainImproperImportanceLink("Failure_Consumer_Remote_Chain_Improper_Importance_Link"),

    @Json(name = "Failure_Extension_Partial_Transaction_Cache_Prune")
    failureExtensionPartialTransactionCachePrune("Failure_Extension_Partial_Transaction_Cache_Prune"),

    @Json(name = "Failure_Extension_Partial_Transaction_Dependency_Removed")
    failureExtensionPartialTransactionDependencyRemoved("Failure_Extension_Partial_Transaction_Dependency_Removed"),

    @Json(name = "Failure_Extension_Read_Rate_Limit_Exceeded")
    failureExtensionReadRateLimitExceeded("Failure_Extension_Read_Rate_Limit_Exceeded");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is TransactionStatusEnum) "$data" else null

        /**
         * Returns a valid [TransactionStatusEnum] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): TransactionStatusEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

